/*
airEml - API

airEml - API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package AirEml

import (
	"encoding/json"
	"fmt"
)

// checks if the EmailTemplateCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmailTemplateCreateRequest{}

// EmailTemplateCreateRequest struct for EmailTemplateCreateRequest
type EmailTemplateCreateRequest struct {
	// The unique identifier of the Channel.
	ChannelId string `json:"channel_id"`
	// The name of the Template.
	Name string `json:"name"`
	// The description of the Template.
	Description *string `json:"description,omitempty"`
}

type _EmailTemplateCreateRequest EmailTemplateCreateRequest

// NewEmailTemplateCreateRequest instantiates a new EmailTemplateCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailTemplateCreateRequest(channelId string, name string) *EmailTemplateCreateRequest {
	this := EmailTemplateCreateRequest{}
	this.ChannelId = channelId
	this.Name = name
	return &this
}

// NewEmailTemplateCreateRequestWithDefaults instantiates a new EmailTemplateCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailTemplateCreateRequestWithDefaults() *EmailTemplateCreateRequest {
	this := EmailTemplateCreateRequest{}
	return &this
}

// GetChannelId returns the ChannelId field value
func (o *EmailTemplateCreateRequest) GetChannelId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value
// and a boolean to check if the value has been set.
func (o *EmailTemplateCreateRequest) GetChannelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChannelId, true
}

// SetChannelId sets field value
func (o *EmailTemplateCreateRequest) SetChannelId(v string) {
	o.ChannelId = v
}

// GetName returns the Name field value
func (o *EmailTemplateCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *EmailTemplateCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *EmailTemplateCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *EmailTemplateCreateRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailTemplateCreateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *EmailTemplateCreateRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *EmailTemplateCreateRequest) SetDescription(v string) {
	o.Description = &v
}

func (o EmailTemplateCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmailTemplateCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["channel_id"] = o.ChannelId
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

func (o *EmailTemplateCreateRequest) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"channel_id",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEmailTemplateCreateRequest := _EmailTemplateCreateRequest{}

	err = json.Unmarshal(bytes, &varEmailTemplateCreateRequest)

	if err != nil {
		return err
	}

	*o = EmailTemplateCreateRequest(varEmailTemplateCreateRequest)

	return err
}

type NullableEmailTemplateCreateRequest struct {
	value *EmailTemplateCreateRequest
	isSet bool
}

func (v NullableEmailTemplateCreateRequest) Get() *EmailTemplateCreateRequest {
	return v.value
}

func (v *NullableEmailTemplateCreateRequest) Set(val *EmailTemplateCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailTemplateCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailTemplateCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailTemplateCreateRequest(val *EmailTemplateCreateRequest) *NullableEmailTemplateCreateRequest {
	return &NullableEmailTemplateCreateRequest{value: val, isSet: true}
}

func (v NullableEmailTemplateCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailTemplateCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


