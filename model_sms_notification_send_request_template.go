/*
airEml - API

airEml - API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package AirEml

import (
	"encoding/json"
)

// checks if the SmsNotificationSendRequestTemplate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SmsNotificationSendRequestTemplate{}

// SmsNotificationSendRequestTemplate struct for SmsNotificationSendRequestTemplate
type SmsNotificationSendRequestTemplate struct {
	// The ID of the template to use for the notification. The id or name parameter must be specified.
	Id *string `json:"id,omitempty"`
	// The name of the template to use for the notification. The id or name parameter must be specified.
	Name *string `json:"name,omitempty"`
	// The locale of the template to use for the notification.
	Locale *string `json:"locale,omitempty"`
	// The parameters used to replace placeholders of the Template Content Where key - is a placeholder name, and value - is a placeholder value. If the value is not provided, the placeholder will use the default value from the Template Content.
	Variables *map[string]string `json:"variables,omitempty"`
}

// NewSmsNotificationSendRequestTemplate instantiates a new SmsNotificationSendRequestTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmsNotificationSendRequestTemplate() *SmsNotificationSendRequestTemplate {
	this := SmsNotificationSendRequestTemplate{}
	return &this
}

// NewSmsNotificationSendRequestTemplateWithDefaults instantiates a new SmsNotificationSendRequestTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmsNotificationSendRequestTemplateWithDefaults() *SmsNotificationSendRequestTemplate {
	this := SmsNotificationSendRequestTemplate{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SmsNotificationSendRequestTemplate) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsNotificationSendRequestTemplate) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SmsNotificationSendRequestTemplate) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SmsNotificationSendRequestTemplate) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SmsNotificationSendRequestTemplate) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsNotificationSendRequestTemplate) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SmsNotificationSendRequestTemplate) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SmsNotificationSendRequestTemplate) SetName(v string) {
	o.Name = &v
}

// GetLocale returns the Locale field value if set, zero value otherwise.
func (o *SmsNotificationSendRequestTemplate) GetLocale() string {
	if o == nil || IsNil(o.Locale) {
		var ret string
		return ret
	}
	return *o.Locale
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsNotificationSendRequestTemplate) GetLocaleOk() (*string, bool) {
	if o == nil || IsNil(o.Locale) {
		return nil, false
	}
	return o.Locale, true
}

// HasLocale returns a boolean if a field has been set.
func (o *SmsNotificationSendRequestTemplate) HasLocale() bool {
	if o != nil && !IsNil(o.Locale) {
		return true
	}

	return false
}

// SetLocale gets a reference to the given string and assigns it to the Locale field.
func (o *SmsNotificationSendRequestTemplate) SetLocale(v string) {
	o.Locale = &v
}

// GetVariables returns the Variables field value if set, zero value otherwise.
func (o *SmsNotificationSendRequestTemplate) GetVariables() map[string]string {
	if o == nil || IsNil(o.Variables) {
		var ret map[string]string
		return ret
	}
	return *o.Variables
}

// GetVariablesOk returns a tuple with the Variables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsNotificationSendRequestTemplate) GetVariablesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Variables) {
		return nil, false
	}
	return o.Variables, true
}

// HasVariables returns a boolean if a field has been set.
func (o *SmsNotificationSendRequestTemplate) HasVariables() bool {
	if o != nil && !IsNil(o.Variables) {
		return true
	}

	return false
}

// SetVariables gets a reference to the given map[string]string and assigns it to the Variables field.
func (o *SmsNotificationSendRequestTemplate) SetVariables(v map[string]string) {
	o.Variables = &v
}

func (o SmsNotificationSendRequestTemplate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SmsNotificationSendRequestTemplate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Locale) {
		toSerialize["locale"] = o.Locale
	}
	if !IsNil(o.Variables) {
		toSerialize["variables"] = o.Variables
	}
	return toSerialize, nil
}

type NullableSmsNotificationSendRequestTemplate struct {
	value *SmsNotificationSendRequestTemplate
	isSet bool
}

func (v NullableSmsNotificationSendRequestTemplate) Get() *SmsNotificationSendRequestTemplate {
	return v.value
}

func (v *NullableSmsNotificationSendRequestTemplate) Set(val *SmsNotificationSendRequestTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableSmsNotificationSendRequestTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableSmsNotificationSendRequestTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmsNotificationSendRequestTemplate(val *SmsNotificationSendRequestTemplate) *NullableSmsNotificationSendRequestTemplate {
	return &NullableSmsNotificationSendRequestTemplate{value: val, isSet: true}
}

func (v NullableSmsNotificationSendRequestTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmsNotificationSendRequestTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


