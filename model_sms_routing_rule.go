/*
airEml - API

airEml - API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package AirEml

import (
	"encoding/json"
	"time"
)

// checks if the SmsRoutingRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SmsRoutingRule{}

// SmsRoutingRule struct for SmsRoutingRule
type SmsRoutingRule struct {
	// The unique identifier of the routing rules.
	Id *string `json:"id,omitempty"`
	// The unique identifier of the Sender.
	SenderId *string `json:"sender_id,omitempty"`
	// You can mark your number as Spare true and use it when main number can't send sms.
	IsReserved *bool `json:"is_reserved,omitempty"`
	// You can use short alias, text Alphanumeric Sender ID instead digital number
	AlphaNumber *string `json:"alpha_number,omitempty"`
	// Priority number will try to send sms firstly.
	Priority *int32 `json:"priority,omitempty"`
	// The status of the Routing-rule. Every digit matters: 1 - active, 2 - inactive.
	Status *int32 `json:"status,omitempty"`
	CountryCode *LocaleCode `json:"country_code,omitempty"`
	// List of excluded to send countries.
	ExcludedCountries []LocaleCode `json:"excluded_countries,omitempty"`
	// The datetime when the Channel Rule was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
}

// NewSmsRoutingRule instantiates a new SmsRoutingRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmsRoutingRule() *SmsRoutingRule {
	this := SmsRoutingRule{}
	return &this
}

// NewSmsRoutingRuleWithDefaults instantiates a new SmsRoutingRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmsRoutingRuleWithDefaults() *SmsRoutingRule {
	this := SmsRoutingRule{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SmsRoutingRule) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsRoutingRule) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SmsRoutingRule) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SmsRoutingRule) SetId(v string) {
	o.Id = &v
}

// GetSenderId returns the SenderId field value if set, zero value otherwise.
func (o *SmsRoutingRule) GetSenderId() string {
	if o == nil || IsNil(o.SenderId) {
		var ret string
		return ret
	}
	return *o.SenderId
}

// GetSenderIdOk returns a tuple with the SenderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsRoutingRule) GetSenderIdOk() (*string, bool) {
	if o == nil || IsNil(o.SenderId) {
		return nil, false
	}
	return o.SenderId, true
}

// HasSenderId returns a boolean if a field has been set.
func (o *SmsRoutingRule) HasSenderId() bool {
	if o != nil && !IsNil(o.SenderId) {
		return true
	}

	return false
}

// SetSenderId gets a reference to the given string and assigns it to the SenderId field.
func (o *SmsRoutingRule) SetSenderId(v string) {
	o.SenderId = &v
}

// GetIsReserved returns the IsReserved field value if set, zero value otherwise.
func (o *SmsRoutingRule) GetIsReserved() bool {
	if o == nil || IsNil(o.IsReserved) {
		var ret bool
		return ret
	}
	return *o.IsReserved
}

// GetIsReservedOk returns a tuple with the IsReserved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsRoutingRule) GetIsReservedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsReserved) {
		return nil, false
	}
	return o.IsReserved, true
}

// HasIsReserved returns a boolean if a field has been set.
func (o *SmsRoutingRule) HasIsReserved() bool {
	if o != nil && !IsNil(o.IsReserved) {
		return true
	}

	return false
}

// SetIsReserved gets a reference to the given bool and assigns it to the IsReserved field.
func (o *SmsRoutingRule) SetIsReserved(v bool) {
	o.IsReserved = &v
}

// GetAlphaNumber returns the AlphaNumber field value if set, zero value otherwise.
func (o *SmsRoutingRule) GetAlphaNumber() string {
	if o == nil || IsNil(o.AlphaNumber) {
		var ret string
		return ret
	}
	return *o.AlphaNumber
}

// GetAlphaNumberOk returns a tuple with the AlphaNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsRoutingRule) GetAlphaNumberOk() (*string, bool) {
	if o == nil || IsNil(o.AlphaNumber) {
		return nil, false
	}
	return o.AlphaNumber, true
}

// HasAlphaNumber returns a boolean if a field has been set.
func (o *SmsRoutingRule) HasAlphaNumber() bool {
	if o != nil && !IsNil(o.AlphaNumber) {
		return true
	}

	return false
}

// SetAlphaNumber gets a reference to the given string and assigns it to the AlphaNumber field.
func (o *SmsRoutingRule) SetAlphaNumber(v string) {
	o.AlphaNumber = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *SmsRoutingRule) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsRoutingRule) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *SmsRoutingRule) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *SmsRoutingRule) SetPriority(v int32) {
	o.Priority = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SmsRoutingRule) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsRoutingRule) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SmsRoutingRule) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *SmsRoutingRule) SetStatus(v int32) {
	o.Status = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *SmsRoutingRule) GetCountryCode() LocaleCode {
	if o == nil || IsNil(o.CountryCode) {
		var ret LocaleCode
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsRoutingRule) GetCountryCodeOk() (*LocaleCode, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *SmsRoutingRule) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given LocaleCode and assigns it to the CountryCode field.
func (o *SmsRoutingRule) SetCountryCode(v LocaleCode) {
	o.CountryCode = &v
}

// GetExcludedCountries returns the ExcludedCountries field value if set, zero value otherwise.
func (o *SmsRoutingRule) GetExcludedCountries() []LocaleCode {
	if o == nil || IsNil(o.ExcludedCountries) {
		var ret []LocaleCode
		return ret
	}
	return o.ExcludedCountries
}

// GetExcludedCountriesOk returns a tuple with the ExcludedCountries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsRoutingRule) GetExcludedCountriesOk() ([]LocaleCode, bool) {
	if o == nil || IsNil(o.ExcludedCountries) {
		return nil, false
	}
	return o.ExcludedCountries, true
}

// HasExcludedCountries returns a boolean if a field has been set.
func (o *SmsRoutingRule) HasExcludedCountries() bool {
	if o != nil && !IsNil(o.ExcludedCountries) {
		return true
	}

	return false
}

// SetExcludedCountries gets a reference to the given []LocaleCode and assigns it to the ExcludedCountries field.
func (o *SmsRoutingRule) SetExcludedCountries(v []LocaleCode) {
	o.ExcludedCountries = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *SmsRoutingRule) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsRoutingRule) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *SmsRoutingRule) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *SmsRoutingRule) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

func (o SmsRoutingRule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SmsRoutingRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.SenderId) {
		toSerialize["sender_id"] = o.SenderId
	}
	if !IsNil(o.IsReserved) {
		toSerialize["is_reserved"] = o.IsReserved
	}
	if !IsNil(o.AlphaNumber) {
		toSerialize["alpha_number"] = o.AlphaNumber
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.CountryCode) {
		toSerialize["country_code"] = o.CountryCode
	}
	if !IsNil(o.ExcludedCountries) {
		toSerialize["excluded_countries"] = o.ExcludedCountries
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	return toSerialize, nil
}

type NullableSmsRoutingRule struct {
	value *SmsRoutingRule
	isSet bool
}

func (v NullableSmsRoutingRule) Get() *SmsRoutingRule {
	return v.value
}

func (v *NullableSmsRoutingRule) Set(val *SmsRoutingRule) {
	v.value = val
	v.isSet = true
}

func (v NullableSmsRoutingRule) IsSet() bool {
	return v.isSet
}

func (v *NullableSmsRoutingRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmsRoutingRule(val *SmsRoutingRule) *NullableSmsRoutingRule {
	return &NullableSmsRoutingRule{value: val, isSet: true}
}

func (v NullableSmsRoutingRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmsRoutingRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


