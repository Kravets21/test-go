/*
airEml - API

airEml - API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package AirEml

import (
	"encoding/json"
)

// checks if the SmsTemplateContentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SmsTemplateContentRequest{}

// SmsTemplateContentRequest struct for SmsTemplateContentRequest
type SmsTemplateContentRequest struct {
	// This is the body for SMS Notification.
	Body *string `json:"body,omitempty"`
}

// NewSmsTemplateContentRequest instantiates a new SmsTemplateContentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmsTemplateContentRequest() *SmsTemplateContentRequest {
	this := SmsTemplateContentRequest{}
	return &this
}

// NewSmsTemplateContentRequestWithDefaults instantiates a new SmsTemplateContentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmsTemplateContentRequestWithDefaults() *SmsTemplateContentRequest {
	this := SmsTemplateContentRequest{}
	return &this
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *SmsTemplateContentRequest) GetBody() string {
	if o == nil || IsNil(o.Body) {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsTemplateContentRequest) GetBodyOk() (*string, bool) {
	if o == nil || IsNil(o.Body) {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *SmsTemplateContentRequest) HasBody() bool {
	if o != nil && !IsNil(o.Body) {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *SmsTemplateContentRequest) SetBody(v string) {
	o.Body = &v
}

func (o SmsTemplateContentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SmsTemplateContentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Body) {
		toSerialize["body"] = o.Body
	}
	return toSerialize, nil
}

type NullableSmsTemplateContentRequest struct {
	value *SmsTemplateContentRequest
	isSet bool
}

func (v NullableSmsTemplateContentRequest) Get() *SmsTemplateContentRequest {
	return v.value
}

func (v *NullableSmsTemplateContentRequest) Set(val *SmsTemplateContentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSmsTemplateContentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSmsTemplateContentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmsTemplateContentRequest(val *SmsTemplateContentRequest) *NullableSmsTemplateContentRequest {
	return &NullableSmsTemplateContentRequest{value: val, isSet: true}
}

func (v NullableSmsTemplateContentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmsTemplateContentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


