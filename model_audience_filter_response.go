/*
airEml - API

airEml - API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package AirEml

import (
	"encoding/json"
)

// checks if the AudienceFilterResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AudienceFilterResponse{}

// AudienceFilterResponse struct for AudienceFilterResponse
type AudienceFilterResponse struct {
	Data *AudienceFilter `json:"data,omitempty"`
}

// NewAudienceFilterResponse instantiates a new AudienceFilterResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAudienceFilterResponse() *AudienceFilterResponse {
	this := AudienceFilterResponse{}
	return &this
}

// NewAudienceFilterResponseWithDefaults instantiates a new AudienceFilterResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAudienceFilterResponseWithDefaults() *AudienceFilterResponse {
	this := AudienceFilterResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *AudienceFilterResponse) GetData() AudienceFilter {
	if o == nil || IsNil(o.Data) {
		var ret AudienceFilter
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceFilterResponse) GetDataOk() (*AudienceFilter, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *AudienceFilterResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given AudienceFilter and assigns it to the Data field.
func (o *AudienceFilterResponse) SetData(v AudienceFilter) {
	o.Data = &v
}

func (o AudienceFilterResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AudienceFilterResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableAudienceFilterResponse struct {
	value *AudienceFilterResponse
	isSet bool
}

func (v NullableAudienceFilterResponse) Get() *AudienceFilterResponse {
	return v.value
}

func (v *NullableAudienceFilterResponse) Set(val *AudienceFilterResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAudienceFilterResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAudienceFilterResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAudienceFilterResponse(val *AudienceFilterResponse) *NullableAudienceFilterResponse {
	return &NullableAudienceFilterResponse{value: val, isSet: true}
}

func (v NullableAudienceFilterResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAudienceFilterResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


