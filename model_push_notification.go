/*
airEml - API

airEml - API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package AirEml

import (
	"encoding/json"
	"time"
)

// checks if the PushNotification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PushNotification{}

// PushNotification struct for PushNotification
type PushNotification struct {
	// The unique identifier of the Notification.
	Id *string `json:"id,omitempty"`
	Locale *LocaleCode `json:"locale,omitempty"`
	// The recipient token of the Notification.
	Token *string `json:"token,omitempty"`
	// The ID of recipient.
	RecipientId *string `json:"recipient_id,omitempty"`
	// The state of the Notification status.  - 1: Notification Accepted  - 2: Notification Blocked  - 3: Notification Sent  - 4: Notification Not Sent  - 5: Notification Delivered  - 6: Notification Not Delivered
	Status *int32 `json:"status,omitempty"`
	// The custom parameters of the Notification.
	CustomParams map[string]interface{} `json:"custom_params,omitempty"`
	// The datetime when the Notification was delivered.
	DeliveredAt *time.Time `json:"delivered_at,omitempty"`
	// The datetime when the Notification was opened.
	OpenedAt *time.Time `json:"opened_at,omitempty"`
	// The datetime when the Notification was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
}

// NewPushNotification instantiates a new PushNotification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPushNotification() *PushNotification {
	this := PushNotification{}
	return &this
}

// NewPushNotificationWithDefaults instantiates a new PushNotification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPushNotificationWithDefaults() *PushNotification {
	this := PushNotification{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PushNotification) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushNotification) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PushNotification) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PushNotification) SetId(v string) {
	o.Id = &v
}

// GetLocale returns the Locale field value if set, zero value otherwise.
func (o *PushNotification) GetLocale() LocaleCode {
	if o == nil || IsNil(o.Locale) {
		var ret LocaleCode
		return ret
	}
	return *o.Locale
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushNotification) GetLocaleOk() (*LocaleCode, bool) {
	if o == nil || IsNil(o.Locale) {
		return nil, false
	}
	return o.Locale, true
}

// HasLocale returns a boolean if a field has been set.
func (o *PushNotification) HasLocale() bool {
	if o != nil && !IsNil(o.Locale) {
		return true
	}

	return false
}

// SetLocale gets a reference to the given LocaleCode and assigns it to the Locale field.
func (o *PushNotification) SetLocale(v LocaleCode) {
	o.Locale = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *PushNotification) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushNotification) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *PushNotification) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *PushNotification) SetToken(v string) {
	o.Token = &v
}

// GetRecipientId returns the RecipientId field value if set, zero value otherwise.
func (o *PushNotification) GetRecipientId() string {
	if o == nil || IsNil(o.RecipientId) {
		var ret string
		return ret
	}
	return *o.RecipientId
}

// GetRecipientIdOk returns a tuple with the RecipientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushNotification) GetRecipientIdOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientId) {
		return nil, false
	}
	return o.RecipientId, true
}

// HasRecipientId returns a boolean if a field has been set.
func (o *PushNotification) HasRecipientId() bool {
	if o != nil && !IsNil(o.RecipientId) {
		return true
	}

	return false
}

// SetRecipientId gets a reference to the given string and assigns it to the RecipientId field.
func (o *PushNotification) SetRecipientId(v string) {
	o.RecipientId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PushNotification) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushNotification) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PushNotification) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *PushNotification) SetStatus(v int32) {
	o.Status = &v
}

// GetCustomParams returns the CustomParams field value if set, zero value otherwise.
func (o *PushNotification) GetCustomParams() map[string]interface{} {
	if o == nil || IsNil(o.CustomParams) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomParams
}

// GetCustomParamsOk returns a tuple with the CustomParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushNotification) GetCustomParamsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomParams) {
		return map[string]interface{}{}, false
	}
	return o.CustomParams, true
}

// HasCustomParams returns a boolean if a field has been set.
func (o *PushNotification) HasCustomParams() bool {
	if o != nil && !IsNil(o.CustomParams) {
		return true
	}

	return false
}

// SetCustomParams gets a reference to the given map[string]interface{} and assigns it to the CustomParams field.
func (o *PushNotification) SetCustomParams(v map[string]interface{}) {
	o.CustomParams = v
}

// GetDeliveredAt returns the DeliveredAt field value if set, zero value otherwise.
func (o *PushNotification) GetDeliveredAt() time.Time {
	if o == nil || IsNil(o.DeliveredAt) {
		var ret time.Time
		return ret
	}
	return *o.DeliveredAt
}

// GetDeliveredAtOk returns a tuple with the DeliveredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushNotification) GetDeliveredAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DeliveredAt) {
		return nil, false
	}
	return o.DeliveredAt, true
}

// HasDeliveredAt returns a boolean if a field has been set.
func (o *PushNotification) HasDeliveredAt() bool {
	if o != nil && !IsNil(o.DeliveredAt) {
		return true
	}

	return false
}

// SetDeliveredAt gets a reference to the given time.Time and assigns it to the DeliveredAt field.
func (o *PushNotification) SetDeliveredAt(v time.Time) {
	o.DeliveredAt = &v
}

// GetOpenedAt returns the OpenedAt field value if set, zero value otherwise.
func (o *PushNotification) GetOpenedAt() time.Time {
	if o == nil || IsNil(o.OpenedAt) {
		var ret time.Time
		return ret
	}
	return *o.OpenedAt
}

// GetOpenedAtOk returns a tuple with the OpenedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushNotification) GetOpenedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.OpenedAt) {
		return nil, false
	}
	return o.OpenedAt, true
}

// HasOpenedAt returns a boolean if a field has been set.
func (o *PushNotification) HasOpenedAt() bool {
	if o != nil && !IsNil(o.OpenedAt) {
		return true
	}

	return false
}

// SetOpenedAt gets a reference to the given time.Time and assigns it to the OpenedAt field.
func (o *PushNotification) SetOpenedAt(v time.Time) {
	o.OpenedAt = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PushNotification) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushNotification) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PushNotification) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PushNotification) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

func (o PushNotification) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PushNotification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Locale) {
		toSerialize["locale"] = o.Locale
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.RecipientId) {
		toSerialize["recipient_id"] = o.RecipientId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.CustomParams) {
		toSerialize["custom_params"] = o.CustomParams
	}
	if !IsNil(o.DeliveredAt) {
		toSerialize["delivered_at"] = o.DeliveredAt
	}
	if !IsNil(o.OpenedAt) {
		toSerialize["opened_at"] = o.OpenedAt
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	return toSerialize, nil
}

type NullablePushNotification struct {
	value *PushNotification
	isSet bool
}

func (v NullablePushNotification) Get() *PushNotification {
	return v.value
}

func (v *NullablePushNotification) Set(val *PushNotification) {
	v.value = val
	v.isSet = true
}

func (v NullablePushNotification) IsSet() bool {
	return v.isSet
}

func (v *NullablePushNotification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePushNotification(val *PushNotification) *NullablePushNotification {
	return &NullablePushNotification{value: val, isSet: true}
}

func (v NullablePushNotification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePushNotification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


