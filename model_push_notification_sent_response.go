/*
airEml - API

airEml - API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package AirEml

import (
	"encoding/json"
)

// checks if the PushNotificationSentResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PushNotificationSentResponse{}

// PushNotificationSentResponse struct for PushNotificationSentResponse
type PushNotificationSentResponse struct {
	Data *EmailSendResponseData `json:"data,omitempty"`
}

// NewPushNotificationSentResponse instantiates a new PushNotificationSentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPushNotificationSentResponse() *PushNotificationSentResponse {
	this := PushNotificationSentResponse{}
	return &this
}

// NewPushNotificationSentResponseWithDefaults instantiates a new PushNotificationSentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPushNotificationSentResponseWithDefaults() *PushNotificationSentResponse {
	this := PushNotificationSentResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *PushNotificationSentResponse) GetData() EmailSendResponseData {
	if o == nil || IsNil(o.Data) {
		var ret EmailSendResponseData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushNotificationSentResponse) GetDataOk() (*EmailSendResponseData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *PushNotificationSentResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given EmailSendResponseData and assigns it to the Data field.
func (o *PushNotificationSentResponse) SetData(v EmailSendResponseData) {
	o.Data = &v
}

func (o PushNotificationSentResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PushNotificationSentResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullablePushNotificationSentResponse struct {
	value *PushNotificationSentResponse
	isSet bool
}

func (v NullablePushNotificationSentResponse) Get() *PushNotificationSentResponse {
	return v.value
}

func (v *NullablePushNotificationSentResponse) Set(val *PushNotificationSentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePushNotificationSentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePushNotificationSentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePushNotificationSentResponse(val *PushNotificationSentResponse) *NullablePushNotificationSentResponse {
	return &NullablePushNotificationSentResponse{value: val, isSet: true}
}

func (v NullablePushNotificationSentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePushNotificationSentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


