openapi: 3.0.3
info:
  contact:
    name: airEml
  description: airEml - API
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.txt
  title: airEml - API
  version: 1.0.0
servers:
- description: PROD server
  url: https://aireml.com
- description: Dev server
  url: https://deveml.com
- description: RC server
  url: https://rceml.com
tags:
- description: Authorization group
  name: Authorization
- description: The audience resources
  name: Audience
- description: The sending of Notifications
  name: Sending
- description: The Notifications resources
  name: Notifications
- description: The email templates resources
  name: Email Templates
- description: The email transport settings
  name: Email Settings
- description: The push templates resources
  name: Push Templates
- description: The push transport settings
  name: Push Settings
- description: The SMS templates resources
  name: SMS Templates
- description: The SMS transport settings
  name: SMS Settings
- description: The Webhook resources
  name: Webhooks
paths:
  /api/v1/audience/segments:
    get:
      description: To retrieve a list of all segments from your audience.
      operationId: list_audience_segments
      parameters:
      - description: Which 'cursor' of paginated results to return.
        example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Number of items returned per page
        example: 2
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: The field to order the results by
        example: latest
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - latest
          - oldest
          type: string
        style: form
      - description: The name of the Segment
        example: paid
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudienceSegmentCollectionResponse'
          description: The list of audience segments
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - audience.segments:read
        - audience.segments:read_write
      summary: List All Segments
      tags:
      - Audience
    post:
      description: To create a new segment in your audience.
      operationId: create_audience_segment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudienceSegmentRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudienceSegmentResponse'
          description: The audience segment resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - audience.segments:read_write
      summary: Create a New Segment
      tags:
      - Audience
  /api/v1/audience/segments/{audience_segment_id}:
    delete:
      description: To delete a segment from your audience.
      operationId: delete_audience_segment
      parameters:
      - description: The ID of the Segment
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: audience_segment_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: The action was successful and the response body is empty.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - audience.segments:read_write
      summary: Delete a Segment
      tags:
      - Audience
    get:
      description: To get details about a specific segment in your audience.
      operationId: get_audience_segment
      parameters:
      - description: The ID of the Segment
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: audience_segment_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudienceSegmentResponse'
          description: The audience segment resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - audience.segments:read
        - audience.segments:read_write
      summary: Retrieve an Existing Segment
      tags:
      - Audience
    put:
      description: To update details about a specific segment in your audience.
      operationId: update_audience_segment
      parameters:
      - description: The ID of the Segment
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: audience_segment_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudienceSegmentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudienceSegmentResponse'
          description: The audience segment resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - audience.segments:read_write
      summary: Update a Segment
      tags:
      - Audience
  /api/v1/audience/segments/{audience_segment_id}/activate:
    put:
      description: To activate a segment.
      operationId: update_assign_active_status_to_audience_segment
      parameters:
      - description: The ID of the Segment
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: audience_segment_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: The action was successful and the response body is empty.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - audience.segments:read_write
      summary: Activate a Segment
      tags:
      - Audience
  /api/v1/audience/segments/{audience_segment_id}/deactivate:
    put:
      description: To deactivate a segment.
      operationId: update_assign_inactive_status_to_audience_segment
      parameters:
      - description: The ID of the Segment
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: audience_segment_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: The action was successful and the response body is empty.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - audience.segments:read_write
      summary: Deactivate a Segment
      tags:
      - Audience
  /api/v1/audience/segments/{audience_segment_id}/filters:
    get:
      description: To retrieve a list of all filters from the specific audience segment
        in your workspace.
      operationId: list_audience_segment_filters
      parameters:
      - description: The ID of the Segment
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: audience_segment_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Which 'cursor' of paginated results to return.
        example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Number of items returned per page
        example: 2
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: The field to order the results by
        example: latest
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - latest
          - oldest
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudienceFilterCollectionResponse'
          description: The list of audience filters
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - audience.segments:read
        - audience.segments:read_write
      summary: List All Filters from the Segment
      tags:
      - Audience
    post:
      description: To create a new filter for the audience segment in your workspace.
      operationId: create_audience_segment_filter
      parameters:
      - description: The ID of the Segment
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: audience_segment_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudienceFilterRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudienceFilterResponse'
          description: The audience filter resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - audience.segments:read_write
      summary: Create a New Segment Filter
      tags:
      - Audience
  /api/v1/audience/segments/{audience_segment_id}/filters/{audience_filter_id}:
    delete:
      description: To delete a filter from the specific audience segment in your workspace.
      operationId: delete_audience_segment_filter
      parameters:
      - description: The ID of the Segment
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: audience_segment_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the Filter
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: audience_filter_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: The action was successful and the response body is empty.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - audience.segments:read_write
      summary: Delete a Filter from the Audience Segment
      tags:
      - Audience
    get:
      description: To get details about the specific filter of the audience segment
        in your workspace.
      operationId: get_audience_segment_filter
      parameters:
      - description: The ID of the Segment
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: audience_segment_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the Filter
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: audience_filter_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudienceFilterResponse'
          description: The audience filter resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - audience.segments:read
        - audience.segments:read_write
      summary: Retrieve an Existing Filter from the Audience Segment
      tags:
      - Audience
    put:
      description: To update details about specific filter in the audience segment
        in your workspace.
      operationId: update_audience_segment_filter
      parameters:
      - description: The ID of the Segment
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: audience_segment_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the Filter
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: audience_filter_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudienceFilterRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudienceFilterResponse'
          description: The audience filter resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - audience.segments:read_write
      summary: Update a Filter in the Audience Segment
      tags:
      - Audience
  /api/v1/audience/tags:
    get:
      description: To retrieve a list of all tags from your audience.
      operationId: list_audience_tags
      parameters:
      - description: Which 'cursor' of paginated results to return.
        example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Number of items returned per page
        example: 2
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: The field to order the results by
        example: latest
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - latest
          - oldest
          type: string
        style: form
      - description: The name of the Tag
        example: paid
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudienceTagCollectionResponse'
          description: The list of audience tags
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - audience.recipients:read
        - audience.recipients:read_write
      summary: List All Tags
      tags:
      - Audience
    post:
      description: To create a new tag in your audience.
      operationId: create_audience_tag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudienceTagRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudienceTagResponse'
          description: The audience tag resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - audience.recipients:read_write
      summary: Create a New Tag
      tags:
      - Audience
  /api/v1/audience/tags/{audience_tag_id}:
    delete:
      description: To delete a tag from your audience.
      operationId: delete_audience_tag
      parameters:
      - description: The ID of the Tag
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: audience_tag_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: The action was successful and the response body is empty.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - audience.recipients:read_write
      summary: Delete a Tag
      tags:
      - Audience
    get:
      description: To get details about a specific tag in your audience.
      operationId: get_audience_tag
      parameters:
      - description: The ID of the Tag
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: audience_tag_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudienceTagResponse'
          description: The audience tag resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - audience.recipients:read
        - audience.recipients:read_write
      summary: Retrieve an Existing Tag
      tags:
      - Audience
    put:
      description: To update details about a specific tag in your audience.
      operationId: update_audience_tag
      parameters:
      - description: The ID of the Tag
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: audience_tag_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudienceTagRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudienceTagResponse'
          description: The audience tag resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - audience.recipients:read_write
      summary: Update a Tag
      tags:
      - Audience
  /api/v1/audience/recipients:
    get:
      description: To retrieve a list of all recipients from your audience.
      operationId: list_audience_recipients
      parameters:
      - description: Which 'cursor' of paginated results to return.
        example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Number of items returned per page
        example: 2
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: The field to order the results by
        example: latest
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - latest
          - oldest
          type: string
        style: form
      - description: The external id of the Recipient
        example: "123456789"
        explode: true
        in: query
        name: external_id
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the Recipient
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: true
        in: query
        name: recipient_id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The Contact Address of the Recipient
        example: john.doe@example.com
        explode: true
        in: query
        name: contact_address
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudienceRecipientCollectionResponse'
          description: The list of audience recipients
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - audience.recipients:read
        - audience.recipients:read_write
      summary: List All Recipients
      tags:
      - Audience
    post:
      description: To create a new recipient in your audience.
      operationId: create_audience_recipient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudienceRecipientRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudienceRecipientResponse'
          description: The audience recipient resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - audience.recipients:read_write
      summary: Create a New Recipient
      tags:
      - Audience
  /api/v1/audience/recipients/{audience_recipient_id}:
    delete:
      description: To delete a recipient from your audience.
      operationId: delete_audience_recipient
      parameters:
      - description: The ID of the Recipient
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: audience_recipient_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: The action was successful and the response body is empty.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - audience.recipients:read_write
      summary: Delete a Recipient
      tags:
      - Audience
    get:
      description: To get details about a specific recipient in your audience.
      operationId: get_audience_recipient
      parameters:
      - description: The ID of the Recipient
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: audience_recipient_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudienceRecipientResponse'
          description: The audience recipient resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - audience.recipients:read
        - audience.recipients:read_write
      summary: Retrieve an Existing Recipient
      tags:
      - Audience
    put:
      description: To update details about a specific recipient in your audience.
      operationId: update_audience_recipient
      parameters:
      - description: The ID of the Recipient
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: audience_recipient_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudienceRecipientRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudienceRecipientResponse'
          description: The audience recipient resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - audience.recipients:read_write
      summary: Update a Recipient
      tags:
      - Audience
  /api/v1/audience/recipients/{audience_recipient_id}/contacts/{audience_contact_type}:
    delete:
      description: To delete a contact from the specific audience recipient in your
        workspace.
      operationId: delete_audience_recipient_contact
      parameters:
      - description: The ID of the Recipient
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: audience_recipient_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The type of the Contact
        example: email
        explode: false
        in: path
        name: audience_contact_type
        required: true
        schema:
          enum:
          - email
          - phone
          - push
          - push_web
          - push_ios
          - push_android
          type: string
        style: simple
      responses:
        "204":
          description: The action was successful and the response body is empty.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - audience.recipients:read_write
      summary: Delete a Contact from the Audience Recipient
      tags:
      - Audience
    post:
      description: To attach a contact to the audience recipient in your workspace.
      operationId: attach_audience_recipient_contact
      parameters:
      - description: The ID of the Recipient
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: audience_recipient_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The type of the Contact
        example: email
        explode: false
        in: path
        name: audience_contact_type
        required: true
        schema:
          enum:
          - email
          - phone
          - push
          - push_web
          - push_ios
          - push_android
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudienceRecipientContactRequest'
        required: true
      responses:
        "201":
          description: The action was successful and the response body is empty.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - audience.recipients:read_write
      summary: Attach a Contact to the Audience Recipient
      tags:
      - Audience
  /api/v1/audience/recipients/{audience_recipient_id}/segments:
    get:
      description: To retrieve a list of all segments from the specific audience recipient
        in your workspace.
      operationId: list_audience_recipient_segments
      parameters:
      - description: The ID of the Recipient
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: audience_recipient_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Which 'cursor' of paginated results to return.
        example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Number of items returned per page
        example: 2
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: The field to order the results by
        example: latest
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - latest
          - oldest
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudienceRecipientSegmentCollectionResponse'
          description: The list of audience segments
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - audience.recipients:read
        - audience.recipients:read_write
        - audience.segments:read
        - audience.segments:read_write
      summary: List All Segments from the Recipient
      tags:
      - Audience
  /api/v1/audience/recipients/{audience_recipient_id}/tags/{audience_tag_name}:
    delete:
      description: To delete a tag from the specific audience recipient in your workspace.
      operationId: delete_audience_recipient_tag
      parameters:
      - description: The ID of the Recipient
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: audience_recipient_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The name of the Tag
        example: paid_recipients
        explode: false
        in: path
        name: audience_tag_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The action was successful and the response body is empty.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - audience.recipients:read_write
      summary: Delete a Tag from the Audience Recipient
      tags:
      - Audience
    post:
      description: To attach a tag to the audience recipient in your workspace.
      operationId: attach_audience_recipient_tag
      parameters:
      - description: The ID of the Recipient
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: audience_recipient_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The name of the Tag
        example: paid_recipients
        explode: false
        in: path
        name: audience_tag_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          description: The action was successful and the response body is empty.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - audience.recipients:read_write
      summary: Attach a Tag to the Audience Recipient
      tags:
      - Audience
  /api/v1/auth/tokens/service-account:
    post:
      description: To create an access token for the service account by client id
        and client secret (machine-to-machine authentication).
      operationId: create_auth_token_for_service_account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthTokenForServiceAccountRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenResponse'
          description: Client access token resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security: []
      summary: Create Access Token for Service Account
      tags:
      - Authorization
  /api/v1/email/transports:
    get:
      description: To retrieve a list of all email notification transports in your
        workspace.
      operationId: list_email_transports
      parameters:
      - description: Which 'cursor' of paginated results to return.
        example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Number of items returned per page
        example: 2
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: The field to order the results by
        example: latest
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - latest
          - oldest
          type: string
        style: form
      - description: The filter value for show the records of the transports that
          have a specific name.
        example: SMTP
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: The filter value for show the records of the transports that
          have a specific status.
        example: 1
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - 1
          - 2
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTransportCollectionResponse'
          description: The list of email notification transports
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.transports:read
        - email.transports:read_write
      summary: List All Email Notification Transports
      tags:
      - Email Settings
    post:
      description: To create a new email notification transport in your workspace.
      operationId: create_email_transport
      requestBody:
        content:
          application/json:
            examples:
              smtp:
                $ref: '#/components/examples/EmailTransportSMTP'
              sendgrid:
                $ref: '#/components/examples/EmailTransportSendgrid'
              mailgun:
                $ref: '#/components/examples/EmailTransportMailgun'
              gmail:
                $ref: '#/components/examples/EmailTransportGmail'
            schema:
              $ref: '#/components/schemas/EmailTransportCreateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTransportResponse'
          description: The email notification transport
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.transports:read_write
      summary: Create a New Email Notification Transport
      tags:
      - Email Settings
  /api/v1/email/transports/{transport_id}:
    delete:
      description: To delete a email notification transport in your workspace.
      operationId: delete_email_transport
      parameters:
      - description: The ID of the Transport
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: transport_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: The action was successful and the response body is empty.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.transports:read_write
      summary: Delete a Email Notification Transport
      tags:
      - Email Settings
    get:
      description: To get details about a specific email notification transport in
        your workspace.
      operationId: get_email_transport
      parameters:
      - description: The ID of the Transport
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: transport_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTransportResponse'
          description: The email notification transport
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.transports:read
        - email.transports:read_write
      summary: Retrieve an Existing Email Notification Transport
      tags:
      - Email Settings
    put:
      description: To update details about a specific email notification transport
        in your workspace.
      operationId: update_email_transport
      parameters:
      - description: The ID of the Transport
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: transport_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailTransportUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTransportResponse'
          description: The email notification transport
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.transports:read_write
      summary: Update a Email Notification Transport
      tags:
      - Email Settings
  /api/v1/email/channels:
    get:
      description: To retrieve a list of all email notification channels in your workspace.
      operationId: list_email_channels
      parameters:
      - description: Which 'cursor' of paginated results to return.
        example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Number of items returned per page
        example: 2
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: The field to order the results by
        example: latest
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - latest
          - oldest
          type: string
        style: form
      - description: The filter value for show the records of the channels that have
          a specific name.
        example: Example Channel
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailChannelCollectionResponse'
          description: The list of email notification channels
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.channels:read
        - email.channels:read_write
      summary: List All Email Notification Channels
      tags:
      - Email Settings
    post:
      description: To create a new email notification channel in your workspace.
      operationId: create_email_channel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailChannelRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailChannelResponse'
          description: The email notification channel
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.channels:read_write
      summary: Create a New Email Notification Channel
      tags:
      - Email Settings
  /api/v1/email/channels/{channel_id}:
    delete:
      description: To delete a email notification channel in your workspace.
      operationId: delete_email_channel
      parameters:
      - description: The ID of the Channel
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: The action was successful and the response body is empty.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.channels:read_write
      summary: Delete a Email Notification Channel
      tags:
      - Email Settings
    get:
      description: To get details about a specific email notification channel in your
        workspace.
      operationId: get_email_channel
      parameters:
      - description: The ID of the Channel
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailChannelResponse'
          description: The email notification channel
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.channels:read
        - email.channels:read_write
      summary: Retrieve an Existing Email Notification Channel
      tags:
      - Email Settings
    put:
      description: To update details about a specific email notification channel in
        your workspace.
      operationId: update_email_channel
      parameters:
      - description: The ID of the Channel
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailChannelRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailChannelResponse'
          description: The email notification channel
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.channels:read_write
      summary: Update a Email Notification Channel
      tags:
      - Email Settings
  /api/v1/email/channels/{channel_id}/routing-rules:
    get:
      description: To retrieve a list of all routing-rules from the specific email
        notification channel in your workspace.
      operationId: list_email_channel_routing-rules
      parameters:
      - description: The ID of the Channel
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Which 'cursor' of paginated results to return.
        example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Number of items returned per page
        example: 2
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: The field to order the results by
        example: latest
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - latest
          - oldest
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailChannelRoutingRulesCollectionResponse'
          description: The list of routing-rules from the email notification channel
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.channels:read
        - email.channels:read_write
      summary: List All Routing-rules from the Email Notification Channel
      tags:
      - Email Settings
    post:
      description: Create to a routing-rule in the email notification channel in your
        workspace.
      operationId: create_email_channel_routing-rule
      parameters:
      - description: The ID of the Channel
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailRoutingRuleCreateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailChannelRoutingRuleResponse'
          description: The routing-rule from the email notification channel
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.channels:read_write
      summary: Create a Routing-rule in the Email Notification Channel
      tags:
      - Email Settings
  /api/v1/email/channels/{channel_id}/routing-rules/{routing_rule_id}:
    delete:
      description: To delete a routing-rule from the specific email notification channel
        in your workspace.
      operationId: delete_email_channel_routing_rule
      parameters:
      - description: The ID of the Channel
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the Routing-rule
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: routing_rule_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: The action was successful and the response body is empty.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.channels:read_write
      summary: Delete a Routing-rule from the Email Notification Channel
      tags:
      - Email Settings
    get:
      description: To get details about the specific routing-rule of the email notification
        channel in your workspace.
      operationId: get_email_channel_routing_rule
      parameters:
      - description: The ID of the Channel
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the Routing-rule
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: routing_rule_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailChannelRoutingRuleResponse'
          description: The routing-rule from the email notification channel
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.channels:read
        - email.channels:read_write
      summary: Retrieve an Existing Routing-rule from the Email Notification Channel
      tags:
      - Email Settings
    put:
      description: Update to a routing-rule in the email notification channel in your
        workspace.
      operationId: update_email_channel_routing_rule
      parameters:
      - description: The ID of the Channel
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the Routing-rule
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: routing_rule_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailRoutingRuleUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailChannelRoutingRuleResponse'
          description: The routing-rule from the email notification channel
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.channels:read_write
      summary: Update a Routing-rule in the Email Notification Channel
      tags:
      - Email Settings
  /api/v1/email/send:
    post:
      description: To send an email notification using your workspace resources.
      operationId: send_email
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailSendRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSendResponse'
          description: The notification sent result
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.notifications:send
      summary: Send Email
      tags:
      - Sending
  /api/v1/email/send/batch:
    post:
      description: To send batch of email notifications using your workspace resources.
      operationId: send_email_batch
      requestBody:
        content:
          application/json:
            examples:
              default:
                $ref: '#/components/examples/EmailSendBatch'
            schema:
              $ref: '#/components/schemas/EmailSendBatchRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSendBatchResponse'
          description: The notification sent result
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.notifications:send
      summary: Send Email Batch
      tags:
      - Sending
  /api/v1/email/senders:
    get:
      description: To retrieve a list of all email notification senders in your workspace.
      operationId: list_email_senders
      parameters:
      - description: Which 'cursor' of paginated results to return.
        example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Number of items returned per page
        example: 2
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: The field to order the results by
        example: latest
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - latest
          - oldest
          type: string
        style: form
      - description: The filter value for show the records of the senders that have
          a specific name.
        example: John Doe
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSenderCollectionResponse'
          description: The list of email notification senders
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.senders:read
        - email.senders:read_write
      summary: List All Email Notification Senders
      tags:
      - Email Settings
    post:
      description: To create a new email notification sender in your workspace.
      operationId: create_email_sender
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailSenderCreateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSenderResponse'
          description: The email notification sender
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.senders:read_write
      summary: Create a New Email Notification Sender
      tags:
      - Email Settings
  /api/v1/email/senders/{sender_id}:
    delete:
      description: To delete a email notification sender in your workspace.
      operationId: delete_email_sender
      parameters:
      - description: The ID of the Sender
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: sender_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: The action was successful and the response body is empty.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.senders:read_write
      summary: Delete a Email Notification Sender
      tags:
      - Email Settings
    get:
      description: To get details about a specific email notification sender in your
        workspace.
      operationId: get_email_sender
      parameters:
      - description: The ID of the Sender
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: sender_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSenderResponse'
          description: The email notification sender
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.senders:read
        - email.senders:read_write
      summary: Retrieve an Existing Email Notification Sender
      tags:
      - Email Settings
    put:
      description: To update details about a specific email notification sender in
        your workspace.
      operationId: update_email_sender
      parameters:
      - description: The ID of the Sender
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: sender_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailSenderUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSenderResponse'
          description: The email notification sender
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.senders:read_write
      summary: Update a Email Notification Sender
      tags:
      - Email Settings
  /api/v1/email/templates:
    get:
      description: To retrieve a list of all email notification templates in your
        workspace.
      operationId: list_email_templates
      parameters:
      - description: Which 'cursor' of paginated results to return.
        example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Number of items returned per page
        example: 2
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: The field to order the results by
        example: latest
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - latest
          - oldest
          type: string
        style: form
      - description: The name of the Template.
        example: welcome_to_documentation
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: The status of the Template.
        example: active
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - active
          - inactive
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplateCollectionResponse'
          description: The list of email notification templates
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.templates:read
        - email.templates:read_write
      summary: List All Email Notification Templates
      tags:
      - Email Templates
    post:
      description: To create a new email notification template in your workspace.
      operationId: create_email_template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailTemplateCreateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplateResponse'
          description: The email notification template
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.templates:read_write
      summary: Create a New Email Notification Template
      tags:
      - Email Templates
  /api/v1/email/templates/{template_id}:
    delete:
      description: To delete a email notification template in your workspace.
      operationId: delete_email_template
      parameters:
      - description: The ID of the Template
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: template_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: The action was successful and the response body is empty.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.templates:read_write
      summary: Delete a Email Notification Template
      tags:
      - Email Templates
    get:
      description: To get details about a specific email notification template in
        your workspace.
      operationId: get_email_template
      parameters:
      - description: The ID of the Template
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: template_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplateResponse'
          description: The email notification template
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.templates:read
        - email.templates:read_write
      summary: Retrieve an Existing Email Notification Template
      tags:
      - Email Templates
    put:
      description: To update details about a specific email notification template
        in your workspace.
      operationId: update_email_template
      parameters:
      - description: The ID of the Template
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: template_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailTemplateUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplateResponse'
          description: The email notification template
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.templates:read_write
      summary: Update a Email Notification Template
      tags:
      - Email Templates
  /api/v1/email/templates/{template_id}/contents:
    get:
      description: To retrieve a list of all contents from the specific email notification
        template in your workspace.
      operationId: list_email_template_contents
      parameters:
      - description: The ID of the Template
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: template_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Which 'cursor' of paginated results to return.
        example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Number of items returned per page
        example: 2
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: The field to order the results by
        example: latest
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - latest
          - oldest
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplateContentCollectionResponse'
          description: The list of contents from the email notification template
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.templates:read
        - email.templates:read_write
      summary: List All Contents from the Email Notification Template
      tags:
      - Email Templates
  /api/v1/email/templates/{template_id}/contents/{template_content_locale}:
    delete:
      description: To delete a content from the specific email notification template
        in your workspace.
      operationId: delete_email_template_content
      parameters:
      - description: The ID of the Template
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: template_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The locale of the Template Content
        example: en
        explode: false
        in: path
        name: template_content_locale
        required: true
        schema:
          $ref: '#/components/schemas/LocaleCode'
        style: simple
      responses:
        "204":
          description: The action was successful and the response body is empty.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.templates:read_write
      summary: Delete a Content from the Email Notification Template
      tags:
      - Email Templates
    get:
      description: To get details about the specific content of the email notification
        template in your workspace.
      operationId: get_email_template_content
      parameters:
      - description: The ID of the Template
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: template_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The locale of the Template Content
        example: en
        explode: false
        in: path
        name: template_content_locale
        required: true
        schema:
          $ref: '#/components/schemas/LocaleCode'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplateContentResponse'
          description: The content from the email notification template
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.templates:read
        - email.templates:read_write
      summary: Retrieve an Existing Content from the Email Notification Template
      tags:
      - Email Templates
    post:
      description: Create to a content in the email notification template in your
        workspace.
      operationId: create_email_template_content
      parameters:
      - description: The ID of the Template
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: template_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The locale of the Template Content
        example: en
        explode: false
        in: path
        name: template_content_locale
        required: true
        schema:
          $ref: '#/components/schemas/LocaleCode'
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              default:
                $ref: '#/components/examples/EmailTemplateContentDefault'
              with_text_plain:
                $ref: '#/components/examples/EmailTemplateContentWithTextPlain'
              with_text_amp:
                $ref: '#/components/examples/EmailTemplateContentWithTextAMP'
              with_builder_html:
                $ref: '#/components/examples/EmailTemplateContentWithBuilderHTML'
              with_all_fields:
                $ref: '#/components/examples/EmailTemplateContentWithAllFields'
            schema:
              $ref: '#/components/schemas/EmailTemplateContentCreateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplateContentResponse'
          description: The content from the email notification template
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.templates:read_write
      summary: Create a Content in the Email Notification Template
      tags:
      - Email Templates
    put:
      description: Update to a content in the email notification template in your
        workspace.
      operationId: update_email_template_content
      parameters:
      - description: The ID of the Template
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: template_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The locale of the Template Content
        example: en
        explode: false
        in: path
        name: template_content_locale
        required: true
        schema:
          $ref: '#/components/schemas/LocaleCode'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailTemplateContentUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplateContentResponse'
          description: The content from the email notification template
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.templates:read_write
      summary: Update a Content in the Email Notification Template
      tags:
      - Email Templates
  /api/v1/email/notifications:
    get:
      description: To retrieve a list of all email notifications in your workspace.
      operationId: list_email_notifications
      parameters:
      - description: Which 'cursor' of paginated results to return.
        example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Number of items returned per page
        example: 2
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: The field to order the results by
        example: latest
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - latest
          - oldest
          type: string
        style: form
      - description: The email address of the Notification
        example: example@axample.com
        explode: true
        in: query
        name: to_email_address
        required: false
        schema:
          type: string
        style: form
      - description: The template id of the Notification
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: true
        in: query
        name: template_id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The template name of the Notification
        example: welcome_to_documentation
        explode: true
        in: query
        name: template_name
        required: false
        schema:
          type: string
        style: form
      - description: The recipient id of the Notification
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: true
        in: query
        name: recipient_id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailNotificationCollectionResponse'
          description: The list of email notifications
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.notifications:read
      summary: List All Email Notifications
      tags:
      - Notifications
  /api/v1/email/notifications/{notification_id}:
    get:
      description: To get details about a specific email notification in your workspace.
      operationId: get_email_notification
      parameters:
      - description: The ID of the Notification
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: notification_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailNotificationResponse'
          description: The email notification
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.notifications:read
      summary: Retrieve an Existing Email Notification
      tags:
      - Notifications
  /api/v1/email/notifications/{notification_id}/states:
    get:
      description: To get details about a specific email notification status states
        in your workspace.
      operationId: get_email_notification_states
      parameters:
      - description: The ID of the Notification
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: notification_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailNotificationStateResponse'
          description: The email notification state
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - email.notification.states:read
      summary: Retrieve an Existing Email Notification States
      tags:
      - Notifications
  /api/v1/push/platforms:
    get:
      description: To retrieve a list of all push notification platforms in your workspace.
      operationId: list_push_platforms
      parameters:
      - description: Which 'cursor' of paginated results to return.
        example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Number of items returned per page
        example: 2
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: The field to order the results by
        example: latest
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - latest
          - oldest
          type: string
        style: form
      - description: The filter value for show the records of the platforms that have
          a specific status.
        example: 1
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - 1
          - 2
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushPlatformCollectionResponse'
          description: The list of push notification platforms
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - push.platforms:read
        - push.platforms:read_write
      summary: List All Push Notification Platforms
      tags:
      - Push Settings
    post:
      description: To create a new push notification platform in your workspace.
      operationId: create_push_platform
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushPlatformRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushPlatformResponse'
          description: The push notification platform
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - push.platforms:read_write
      summary: Create a New Push Notification Platform
      tags:
      - Push Settings
  /api/v1/push/platforms/{platform_id}:
    delete:
      description: To delete a push notification platform in your workspace.
      operationId: delete_push_platforms
      parameters:
      - description: The ID of the Platform
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: platform_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: The action was successful and the response body is empty.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - push.platforms:read_write
      summary: Delete a Push Notification Platform
      tags:
      - Push Settings
    get:
      description: To get details about a specific push notification platform in your
        workspace.
      operationId: get_push_platform
      parameters:
      - description: The ID of the Platform
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: platform_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushPlatformResponse'
          description: The push notification platform
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - push.platforms:read
        - push.platforms:read_write
      summary: Retrieve an Existing Push Notification Platform
      tags:
      - Push Settings
    put:
      description: To update details about a specific push notification platform in
        your workspace.
      operationId: update_push_platform
      parameters:
      - description: The ID of the Platform
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: platform_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushPlatformRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushPlatformResponse'
          description: The push notification platform
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - push.platforms:read_write
      summary: Update a Push Notification Platform
      tags:
      - Push Settings
  /api/v1/push/templates:
    get:
      description: To retrieve a list of all push notification templates in your workspace.
      operationId: list_push_templates
      parameters:
      - description: Which 'cursor' of paginated results to return.
        example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Number of items returned per page
        example: 2
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: The field to order the results by
        example: latest
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - latest
          - oldest
          type: string
        style: form
      - description: The name of the Template.
        example: welcome_to_documentation
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: The status of the Template.
        example: 1
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - 1
          - 2
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushTemplateCollectionResponse'
          description: The list of push notification templates
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - push.templates:read
        - push.templates:read_write
      summary: List All Push Notification Templates
      tags:
      - Push Templates
    post:
      description: To create a new push notification template in your workspace.
      operationId: create_push_template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushTemplateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushTemplateResponse'
          description: The push notification template
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - push.templates:read_write
      summary: Create a New Push Notification Template
      tags:
      - Push Templates
  /api/v1/push/templates/{template_id}:
    delete:
      description: To delete a push notification template in your workspace.
      operationId: delete_push_template
      parameters:
      - description: The ID of the Template
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: template_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: The action was successful and the response body is empty.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - push.templates:read_write
      summary: Delete a Push Notification Template
      tags:
      - Push Templates
    get:
      description: To get details about a specific push notification template in your
        workspace.
      operationId: get_push_template
      parameters:
      - description: The ID of the Template
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: template_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushTemplateResponse'
          description: The push notification template
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - push.templates:read
        - push.templates:read_write
      summary: Retrieve an Existing Push Notification Template
      tags:
      - Push Templates
    put:
      description: To update details about a specific push notification template in
        your workspace.
      operationId: update_push_template
      parameters:
      - description: The ID of the Template
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: template_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushTemplateUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushTemplateResponse'
          description: The push notification template
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - push.templates:read_write
      summary: Update a Push Notification Template
      tags:
      - Push Templates
  /api/v1/push/templates/{template_id}/contents:
    get:
      description: To retrieve a list of all contents from the specific push notification
        template in your workspace.
      operationId: list_push_template_contents
      parameters:
      - description: The ID of the Template
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: template_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Which 'cursor' of paginated results to return.
        example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Number of items returned per page
        example: 2
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: The field to order the results by
        example: latest
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - latest
          - oldest
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushTemplateContentCollectionResponse'
          description: The list of contents from the push notification template
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - push.templates:read
        - push.templates:read_write
      summary: List All Contents from the Push Notification Template
      tags:
      - Push Templates
  /api/v1/push/templates/{template_id}/contents/{template_content_locale}:
    delete:
      description: To delete a content from the specific push notification template
        in your workspace.
      operationId: delete_push_template_content
      parameters:
      - description: The ID of the Template
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: template_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The locale of the Template Content
        example: en
        explode: false
        in: path
        name: template_content_locale
        required: true
        schema:
          $ref: '#/components/schemas/LocaleCode'
        style: simple
      responses:
        "204":
          description: The action was successful and the response body is empty.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - push.templates:read_write
      summary: Delete a Content from the Push Notification Template
      tags:
      - Push Templates
    get:
      description: To get details about the specific content of the push notification
        template in your workspace.
      operationId: get_push_template_content
      parameters:
      - description: The ID of the Template
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: template_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The locale of the Template Content
        example: en
        explode: false
        in: path
        name: template_content_locale
        required: true
        schema:
          $ref: '#/components/schemas/LocaleCode'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushTemplateContentResponse'
          description: The content from the push notification template
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - push.templates:read
        - push.templates:read_write
      summary: Retrieve an Existing Content from the Push Notification Template
      tags:
      - Push Templates
    post:
      description: To create a content in the push notification template in your workspace.
      operationId: create_push_template_content
      parameters:
      - description: The ID of the Template
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: template_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The locale of the Template Content
        example: en
        explode: false
        in: path
        name: template_content_locale
        required: true
        schema:
          $ref: '#/components/schemas/LocaleCode'
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              default:
                $ref: '#/components/examples/PushTemplateContentDefault'
            schema:
              $ref: '#/components/schemas/PushTemplateContentRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushTemplateContentResponse'
          description: The content from the push notification template
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - push.templates:read_write
      summary: Create a Content in the Push Notification Template
      tags:
      - Push Templates
    put:
      description: Update to a content in the push notification template in your workspace.
      operationId: update_push_template_content
      parameters:
      - description: The ID of the Template
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: template_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The locale of the Template Content
        example: en
        explode: false
        in: path
        name: template_content_locale
        required: true
        schema:
          $ref: '#/components/schemas/LocaleCode'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushTemplateContentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushTemplateContentResponse'
          description: The content from the push notification template
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - push.templates:read_write
      summary: Update a Content in the Push Notification Template
      tags:
      - Push Templates
  /api/v1/push/notifications:
    get:
      description: To retrieve a list of all push notifications in your workspace.
      operationId: list_push_notifications
      parameters:
      - description: Which 'cursor' of paginated results to return.
        example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Number of items returned per page
        example: 2
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: The field to order the results by
        example: latest
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - latest
          - oldest
          type: string
        style: form
      - description: The recipient id of the Notification
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: true
        in: query
        name: recipient_id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The device token of the Notification
        example: 01234567890:ABCDEFGpERNZ7em...aB06VJ-ABCD_XB34UgMJ6_abc_mJqnne8KxuHYxmemu21othozA3hqdNpKcmMr
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: The template id of the Notification
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: true
        in: query
        name: template_id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The template name of the Notification
        example: welcome_to_documentation
        explode: true
        in: query
        name: template_name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushNotificationCollectionResponse'
          description: The list of push notifications
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - push.notifications:read
      summary: List All Push Notifications
      tags:
      - Notifications
  /api/v1/push/notifications/{notification_id}:
    get:
      description: To get details about a specific push notification in your workspace.
      operationId: get_push_notification
      parameters:
      - description: The ID of the Notification
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: notification_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushNotificationResponse'
          description: The push notification
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - push.notifications:read
      summary: Retrieve an Existing Push Notification
      tags:
      - Notifications
  /api/v1/push/notifications/{notification_id}/states:
    get:
      description: To get details about a specific push notification status states
        in your workspace.
      operationId: get_push_notification_states
      parameters:
      - description: The ID of the Notification
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: notification_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushNotificationStateResponse'
          description: The push notification state
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - push.notification.states:read
      summary: Retrieve an Existing Push Notification States
      tags:
      - Notifications
  /api/v1/push/send:
    post:
      description: To send a new push notification using your workspace resources.
      operationId: send_push
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushNotificationSendRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushNotificationSentResponse'
          description: The notification sent result
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - push.notifications:send
      summary: Send Push Notification
      tags:
      - Sending
  /api/v1/sms/transports:
    get:
      description: To retrieve a list of all sms transports in your workspace.
      operationId: list_sms_transports
      parameters:
      - description: Which 'cursor' of paginated results to return.
        example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Number of items returned per page
        example: 2
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: The field to order the results by
        example: latest
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - latest
          - oldest
          type: string
        style: form
      - description: The filter value for show the records of the transports that
          have a specific type.
        example: twilio
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - twilio
          type: string
        style: form
      - description: The filter value for show the records of the transports that
          have a specific status.
        example: 1
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - 1
          - 2
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTransportCollectionResponse'
          description: The transports collection response
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.transports:read
        - sms.transports:read_write
      summary: List All SMS Transports
      tags:
      - SMS Settings
    post:
      description: To create a new sms transport in your workspace.
      operationId: create_sms_transport
      requestBody:
        content:
          application/json:
            examples:
              twilio:
                $ref: '#/components/examples/SmsTransportTwilio'
              vonage:
                $ref: '#/components/examples/SmsTransportVonage'
              amazon_sns:
                $ref: '#/components/examples/SmsTransportAmazonSNS'
              telesign:
                $ref: '#/components/examples/SmsTransportTelesign'
              message_bird:
                $ref: '#/components/examples/SmsTransportMessageBird'
            schema:
              $ref: '#/components/schemas/SmsTransportCreateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTransportResponse'
          description: The transport resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.transports:read_write
      summary: Create a New SMS Transport
      tags:
      - SMS Settings
  /api/v1/sms/transports/{transport_id}:
    delete:
      description: To delete a sms transport in your workspace.
      operationId: delete_sms_transport
      parameters:
      - description: The ID of the Transport
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: transport_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: The action was successful and the response body is empty.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.transports:read_write
      summary: Delete a SMS Transport
      tags:
      - SMS Settings
    get:
      description: To get details about a specific sms transport in your workspace.
      operationId: get_sms_transport
      parameters:
      - description: The ID of the Transport
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: transport_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTransportResponse'
          description: The transport resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.transports:read
        - sms.transports:read_write
      summary: Retrieve an Existing SMS Transport
      tags:
      - SMS Settings
    put:
      description: To update details about a specific sms transport in your workspace.
      operationId: update_sms_transport
      parameters:
      - description: The ID of the Transport
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: transport_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsTransportUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTransportResponse'
          description: The transport resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.transports:read_write
      summary: Update a SMS Transport
      tags:
      - SMS Settings
  /api/v1/sms/transports/{transport_id}/generate-webhook:
    get:
      description: You can generate webhook to set it manually into transport provider
        like amazon.
      operationId: get_webhook_by_transport
      parameters:
      - description: The ID of the Transport
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: transport_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransportWebhookGenerateResponse'
          description: The transport webhook resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.transports:read
        - sms.transports:read_write
      summary: Webhook url generated by transport
      tags:
      - SMS Settings
  /api/v1/sms/transports/all/senders:
    get:
      description: To retrieve a list of all sms transport senders in your workspace.
      operationId: list_all_sms_senders
      parameters:
      - description: Which 'cursor' of paginated results to return.
        example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Number of items returned per page
        example: 2
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: The field to order the results by
        example: latest
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - latest
          - oldest
          type: string
        style: form
      - description: The filter value for show the records of the transports that
          have a specific status.
        example: 1
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - 1
          - 2
          type: integer
        style: form
      - description: The name of the Sender
        example: My Twilio Sender
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: The filter value for show a record of the senders that have a
          specific id.
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: true
        in: query
        name: sender_id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsSenderCollectionResponse'
          description: The transport senders collection response
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.transports:read
        - sms.transports:read_write
      summary: List All SMS Transport Numbers
      tags:
      - SMS Settings
  /api/v1/sms/transports/{transport_id}/senders:
    get:
      description: To retrieve a list of all senders from the specific SMS transport
        in your workspace.
      operationId: list_sms_senders
      parameters:
      - description: The ID of the Transport
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: transport_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Which 'cursor' of paginated results to return.
        example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Number of items returned per page
        example: 2
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: The field to order the results by
        example: latest
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - latest
          - oldest
          type: string
        style: form
      - description: The filter value for show the records of the transport senders
          that have a specific type.
        example: 1
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - 1
          - 2
          type: integer
        style: form
      - description: The name of the Sender
        example: My Twilio Sender
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsSenderCollectionResponse'
          description: The transport senders collection response
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.transports:read
        - sms.transports:read_write
      summary: List All Numbers from the SMS Transport
      tags:
      - SMS Settings
  /api/v1/sms/transports/{transport_id}/senders/{sender_id}:
    get:
      description: To get details about the specific number of the SMS transport in
        your workspace.
      operationId: get_sms_sender
      parameters:
      - description: The ID of the Transport
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: transport_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the Transport Number
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: sender_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsSenderResponse'
          description: The transport number resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.transports:read
        - sms.transports:read_write
      summary: Retrieve an Existing Number from the SMS Transport
      tags:
      - SMS Settings
  /api/v1/sms/channels:
    get:
      description: To retrieve a list of all sms channels in your workspace.
      operationId: list_sms_channels
      parameters:
      - description: Which 'cursor' of paginated results to return.
        example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Number of items returned per page
        example: 2
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: The field to order the results by
        example: latest
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - latest
          - oldest
          type: string
        style: form
      - description: The name of the Channel
        example: Main Channel
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsChannelCollectionResponse'
          description: The template collection response
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.channels:read
        - sms.channels:read_write
      summary: List All SMS Channels
      tags:
      - SMS Settings
    post:
      description: To create a new sms channel in your workspace.
      operationId: create_sms_channel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsChannelRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsChannelResponse'
          description: The template resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.channels:read_write
      summary: Create a New SMS Channel
      tags:
      - SMS Settings
  /api/v1/sms/channels/{channel_id}:
    delete:
      description: To delete a sms channel in your workspace.
      operationId: delete_sms_channel
      parameters:
      - description: The ID of the Channel
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: The action was successful and the response body is empty.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.channels:read_write
      summary: Delete a SMS Channel
      tags:
      - SMS Settings
    get:
      description: To get details about a specific sms channel in your workspace.
      operationId: get_sms_channel
      parameters:
      - description: The ID of the Channel
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsChannelResponse'
          description: The template resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.channels:read
        - sms.channels:read_write
      summary: Retrieve an Existing SMS Channel
      tags:
      - SMS Settings
    put:
      description: To update details about a specific sms channel in your workspace.
      operationId: update_sms_channel
      parameters:
      - description: The ID of the Channel
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsChannelRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsChannelResponse'
          description: The template resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.channels:read_write
      summary: Update a SMS Channel
      tags:
      - SMS Settings
  /api/v1/sms/channels/{channel_id}/rules:
    get:
      description: To retrieve a list of all contents from the specific sms channel
        in your workspace.
      operationId: list_sms_channels_rules
      parameters:
      - description: The ID of the Channel
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Which 'cursor' of paginated results to return.
        example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Number of items returned per page
        example: 2
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: The field to order the results by
        example: latest
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - latest
          - oldest
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsRoutingRuleRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsRoutingRuleCollectionResponse'
          description: The channel rule collection response
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.channels:read
        - sms.channels:read_write
      summary: List of all Rules from the SMS Channel
      tags:
      - SMS Settings
    post:
      description: To save configured channel rule in your workspace.
      operationId: save_sms_routing_rule
      parameters:
      - description: The ID of the Channel Rule
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsRoutingRuleRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsRoutingRuleResponse'
          description: The channel rule resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.channels:read_write
      summary: Save a parameters SMS Channel Rule
      tags:
      - SMS Settings
  /api/v1/sms/channels/{channel_id}/rules/{routing_rule_id}:
    delete:
      description: To delete channel rule from your workspace.
      operationId: delete_sms_routing_rule
      parameters:
      - description: The ID of the Channel
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the Channel Rule
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: routing_rule_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: The action was successful and the response body is empty.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.channels:read_write
      summary: Delete a SMS Channel Rule
      tags:
      - SMS Settings
    get:
      description: To get details about the channel rule of your workspace.
      operationId: get_sms_routing_rule
      parameters:
      - description: The ID of the Channel
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the Channel Rule
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: routing_rule_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsRoutingRuleResponse'
          description: The channel rule resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.channels:read
        - sms.channels:read_write
      summary: Retrieve an Existing SMS Channel Rule
      tags:
      - SMS Settings
    put:
      description: To update details about a specific sms channel rule in your workspace.
      operationId: update_sms_routing_rule
      parameters:
      - description: The ID of the Channel Rule
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The ID of the Channel Rule
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: routing_rule_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsRoutingRuleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsRoutingRuleResponse'
          description: The channel rule resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.channels:read_write
      summary: Update a SMS Channel Rule
      tags:
      - SMS Settings
  /api/v1/sms/templates:
    get:
      description: To retrieve a list of all sms templates in your workspace.
      operationId: list_sms_templates
      parameters:
      - description: Which 'cursor' of paginated results to return.
        example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Number of items returned per page
        example: 2
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: The field to order the results by
        example: latest
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - latest
          - oldest
          type: string
        style: form
      - description: The name of the Template
        example: welcome_to_documentation
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: The status of the Template
        example: 1
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - 1
          - 2
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplateCollectionResponse'
          description: The template collection response
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.templates:read
        - sms.templates:read_write
      summary: List All SMS Templates
      tags:
      - SMS Templates
    post:
      description: To create a new sms template in your workspace.
      operationId: create_sms_template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsTemplateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplateResponse'
          description: The template resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.templates:read_write
      summary: Create a New SMS Template
      tags:
      - SMS Templates
  /api/v1/sms/templates/{template_id}:
    delete:
      description: To delete a sms template in your workspace.
      operationId: delete_sms_template
      parameters:
      - description: The ID of the Template
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: template_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: The action was successful and the response body is empty.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.templates:read_write
      summary: Delete a SMS Template
      tags:
      - SMS Templates
    get:
      description: To get details about a specific sms template in your workspace.
      operationId: get_sms_template
      parameters:
      - description: The ID of the Template
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: template_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplateResponse'
          description: The template resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.templates:read
        - sms.templates:read_write
      summary: Retrieve an Existing SMS Template
      tags:
      - SMS Templates
    put:
      description: To update details about a specific sms template in your workspace.
      operationId: update_sms_template
      parameters:
      - description: The ID of the Template
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: template_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsTemplateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplateResponse'
          description: The template resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.templates:read_write
      summary: Update a SMS Template
      tags:
      - SMS Templates
  /api/v1/sms/templates/{template_id}/contents:
    get:
      description: To retrieve a list of all contents from the specific sms template
        in your workspace.
      operationId: list_sms_template_contents
      parameters:
      - description: The ID of the Template
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: template_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Which 'cursor' of paginated results to return.
        example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Number of items returned per page
        example: 2
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: The field to order the results by
        example: latest
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - latest
          - oldest
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplateContentCollectionResponse'
          description: The template content collection response
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.templates:read
        - sms.templates:read_write
      summary: List All Contents from the SMS Template
      tags:
      - SMS Templates
  /api/v1/sms/templates/{template_id}/contents/{template_content_locale}:
    delete:
      description: To delete a content from the specific sms template in your workspace.
      operationId: delete_sms_template_content
      parameters:
      - description: The ID of the Template
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: template_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The locale of the Template Content
        example: en
        explode: false
        in: path
        name: template_content_locale
        required: true
        schema:
          $ref: '#/components/schemas/LocaleCode'
        style: simple
      responses:
        "204":
          description: The action was successful and the response body is empty.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.templates:read_write
      summary: Delete a Content from the SMS Template
      tags:
      - SMS Templates
    get:
      description: To get details about the specific content of the sms template in
        your workspace.
      operationId: get_sms_template_content
      parameters:
      - description: The ID of the Template
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: template_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The locale of the Template Content
        example: en
        explode: false
        in: path
        name: template_content_locale
        required: true
        schema:
          $ref: '#/components/schemas/LocaleCode'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplateContentResponse'
          description: The template content resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.templates:read
        - sms.templates:read_write
      summary: Retrieve an Existing Content from the SMS Template
      tags:
      - SMS Templates
    post:
      description: To save content of the sms template in your workspace.
      operationId: save_sms_template_content
      parameters:
      - description: The ID of the Template
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: template_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The locale of the Template Content
        example: en
        explode: false
        in: path
        name: template_content_locale
        required: true
        schema:
          $ref: '#/components/schemas/LocaleCode'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsTemplateContentRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplateContentResponse'
          description: The template content resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.templates:read_write
      summary: Save a Content in the SMS Template
      tags:
      - SMS Templates
    put:
      description: Update to a content in the SMS notification template in your workspace.
      operationId: update_sms_template_content
      parameters:
      - description: The ID of the Template
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: template_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The locale of the Template Content
        example: en
        explode: false
        in: path
        name: template_content_locale
        required: true
        schema:
          $ref: '#/components/schemas/LocaleCode'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsTemplateContentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsTemplateContentResponse'
          description: The template content resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.templates:read_write
      summary: Update a Content in the SMS Notification Template
      tags:
      - SMS Templates
  /api/v1/sms/notifications:
    get:
      description: To retrieve a list of all sms notifications in your workspace.
      operationId: list_sms_notifications
      parameters:
      - description: Which 'cursor' of paginated results to return.
        example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Number of items returned per page
        example: 2
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: The field to order the results by
        example: latest
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - latest
          - oldest
          type: string
        style: form
      - description: To filter records by the template name of the Notification.
        example: welcome_to_documentation
        explode: true
        in: query
        name: template_name
        required: false
        schema:
          type: string
        style: form
      - description: The template id of the Notification
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: true
        in: query
        name: template_id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: The filter value for getting records with provided from number.
        example: "+17779091327"
        explode: true
        in: query
        name: from_number
        required: false
        schema:
          type: string
        style: form
      - description: The filter value for show the records of the notifications that
          have a similar to number.
        example: "+19379091324"
        explode: true
        in: query
        name: to_number
        required: false
        schema:
          type: string
        style: form
      - description: The recipient id of the Notification
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: true
        in: query
        name: recipient_id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsNotificationCollectionResponse'
          description: The notification collection response
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.notifications:read
      summary: List All SMS Notifications
      tags:
      - Notifications
  /api/v1/sms/send:
    post:
      description: To send a new sms notification using your workspace resources.
      operationId: send_sms_notification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsNotificationSendRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsNotificationSentResponse'
          description: The notification resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.notifications:send
      summary: Send SMS Notification
      tags:
      - Sending
  /api/v1/sms/send/batch:
    post:
      description: To send a new sms batch notification using your workspace resources.
      operationId: send_sms_batch_notification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsNotificationSendMultipleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsMultipleNotificationSentResponse'
          description: The multiple notification resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.notifications:send
      summary: Send SMS Batch Notification
      tags:
      - Sending
  /api/v1/sms/notifications/{notification_id}:
    get:
      description: To get details about a specific sms notification in your workspace.
      operationId: get_sms_notification
      parameters:
      - description: The ID of the Notification
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: notification_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsNotificationResponse'
          description: The notification resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.notifications:read
      summary: Retrieve an Existing SMS Notification
      tags:
      - Notifications
  /api/v1/sms/notifications/{notification_id}/states:
    get:
      description: To get details about a specific sms notification status states
        in your workspace.
      operationId: get_sms_notification_states
      parameters:
      - description: The ID of the Notification
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: notification_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsNotificationStateResponse'
          description: The sms notification state
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth:
        - sms.notification.states:read
      summary: Retrieve an Existing Sms Notification States
      tags:
      - Notifications
  /api/v1/webhook/subscriptions:
    get:
      description: To retrieve a list of all webhook subscriptions in your workspace.
      operationId: list_webhook_subscriptions
      parameters:
      - description: Which 'cursor' of paginated results to return.
        example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Number of items returned per page
        example: 2
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 1
          type: integer
        style: form
      - description: The field to order the results by
        example: latest
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - latest
          - oldest
          type: string
        style: form
      - description: The name of the Subscription.
        example: example_subscription
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: The status of the Subscription.
        example: 1
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - 1
          - 2
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionCollectionResponse'
          description: Subscription paginated collection
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth: []
      summary: List All webhook Subscriptions
      tags:
      - Webhooks
    post:
      description: To create a new subscription in your workspace.
      operationId: create_webhook_subscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCreateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
          description: Tha subscription resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth: []
      summary: Create a New Subscription
      tags:
      - Webhooks
  /api/v1/webhook/subscriptions/{webhook_subscription_id}:
    delete:
      description: To delete a webhook subscription in your workspace.
      operationId: delete_webhook_subscription
      parameters:
      - description: The ID of the Webhook subscription
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: webhook_subscription_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: The action was successful and the response body is empty.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth: []
      summary: Delete a webhook subscription
      tags:
      - Webhooks
    get:
      description: To get details about a specific subscription in your workspace.
      operationId: get_webhook_subscription
      parameters:
      - description: The ID of the Webhook subscription
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: webhook_subscription_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
          description: Tha subscription resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth: []
      summary: Retrieve an Existing webhook subscription
      tags:
      - Webhooks
    put:
      description: To update details about a specific webhook subscription in your
        workspace.
      operationId: update_webhook_subscription
      parameters:
      - description: The ID of the webhook subscription
        example: 00112233-4455-6677-8899-aabbccddeeff
        explode: false
        in: path
        name: webhook_subscription_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
          description: Tha subscription resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "400":
          content:
            application/json:
              example:
                message: Validation failed
                errors:
                  field1:
                  - The field1 field is required.
                  - The field1 field must be a string.
                  field2:
                  - The field2 field is required.
              schema:
                $ref: '#/components/schemas/ErrorMultiple'
          description: The request could not be understood by the server due to malformed
            syntax. The client SHOULD NOT repeat the request without modifications.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "404":
          content:
            application/json:
              example:
                message: The resource you requested could not be found.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server has not found anything matching the Request-URI.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth: []
      summary: Update a webhook subscription
      tags:
      - Webhooks
  /api/v1/webhook/events:
    get:
      description: To retrieve a list of all webhook events.
      operationId: list_webhook_events
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
          description: Tha event resource
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "401":
          content:
            application/json:
              example:
                message: Unauthenticated.
              schema:
                $ref: '#/components/schemas/Error'
          description: The request requires user authentication.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "403":
          content:
            application/json:
              example:
                message: Invalid scope(s) provided.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server understood the request but refuses to authorize
            it.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        "500":
          content:
            application/json:
              example:
                message: Unexpected server-side error.
              schema:
                $ref: '#/components/schemas/Error'
          description: The server encountered an unexpected condition which prevented
            it from fulfilling the request.
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
        default:
          content:
            application/json:
              example:
                message: some error message
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
          headers:
            request-id:
              $ref: '#/components/headers/request-id'
      security:
      - bearerAuth: []
      summary: List All Webhook events
      tags:
      - Webhooks
components:
  examples:
    EmailTransportSMTP:
      value:
        name: main
        type: smtp
        credentials:
          host: smtp.example.com
          port: 5877
          username: username
          password: password
        headers:
          Reply-To: test@example.com
          List-Unsubscribe: test@example.com
    EmailTransportSendgrid:
      value:
        name: main
        type: sendgrid
        credentials:
          api_key: SG.test-key-1234567890
        headers:
          Reply-To: test@example.com
          List-Unsubscribe: test@example.com
    EmailTransportMailgun:
      value:
        name: main
        type: mailgun
        credentials:
          api_key: key-1234567890
          domain: example.com
    EmailTransportGmail:
      value:
        name: main
        type: gmail
        credentials:
          client_id: 123456789012-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.apps.googleusercontent.com
          client_secret: tqEt0Ii3QDA0XI0rlyUsPv029
          refresh_token: example-token-0gHk4Zm6T9C-FCg
    EmailSendBatch:
      value:
        notifications:
        - template:
            name: welcome_to_documentation
            locale: en
            variables:
              name: Jane Doe
          to:
            name: Jane Doe
            email_address: jane.doe@example.com
          from:
            name: John Doe
            email_address: john.doe@example.com
          attachments:
          - content_type: text/plain
            file_name: test.txt
            content_base64: 77u/MQo=
          - content_type: text/plain
            file_name: test.txt
            content_base64: 77u/MQo=
        - template:
            name: welcome_to_documentation-v2
            locale: en
          to:
            name: Jim Doe
            email_address: jim.doe@example.com
          attachments:
          - content_type: text/plain
            file_name: test.txt
            content_base64: 77u/MQo=
          - content_type: text/plain
            file_name: test.txt
            content_base64: 77u/MQo=
          custom_params:
            param1: value1
            param2: value2
    EmailTemplateContentDefault:
      value:
        subject: "Welcome to documentation {{ name }}."
        text_html: "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\
          \ \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n  <html\
          \ lang=\"en\">\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"\
          text/html\" charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width,\
          \ initial-scale=1.0, user-scalable=yes, maximum-scale=5\">\n    <title>Welcome</title>\n\
          \  </head>\n  <body>\n  \t<p>Welcome {{ name }}. This is welcome email.\
          \ It is sent to new users.</p>\n    <p><img src={{ link }}></p>\n  </body>\n\
          \  </html>"
    EmailTemplateContentWithTextPlain:
      value:
        subject: "Welcome to documentation {{ name }}."
        text_plain: "Welcome {{ name }}. This is welcome email. It is sent to new\
          \ users."
        text_html: "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\
          \ \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n  <html\
          \ lang=\"en\">\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"\
          text/html\" charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width,\
          \ initial-scale=1.0, user-scalable=yes, maximum-scale=5\">\n    <title>Welcome</title>\n\
          \  </head>\n  <body>\n  \t<p>Welcome {{ name }}. This is welcome email.\
          \ It is sent to new users.</p>\n    <p><img src={{ link }}></p>\n  </body>\n\
          \  </html>"
    EmailTemplateContentWithTextAMP:
      value:
        subject: "Welcome to documentation {{ name }}."
        text_html: "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\
          \ \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n  <html\
          \ lang=\"en\">\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"\
          text/html\" charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width,\
          \ initial-scale=1.0, user-scalable=yes, maximum-scale=5\">\n    <title>Welcome</title>\n\
          \  </head>\n  <body>\n  \t<p>Welcome {{ name }}. This is welcome email.\
          \ It is sent to new users.</p>\n    <p><img src={{ link }}></p>\n  </body>\n\
          \  </html>"
        text_amp: "<!DOCTYPE html>\n  <html ⚡4email>\n  <head>\n    <meta charset=\"\
          utf-8\">\n    <style amp4email-boilerplate>body{visibility:hidden}</style>\n\
          \    <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n\
          \    <style amp-custom>\n      body {\n        visibility: hidden;\n   \
          \   }\n    </style>\n  </head>\n  <body>\n  \t<p>Welcome {{ name }}. This\
          \ is welcome email. It is sent to new users.</p>\n    <p><img src={{ link\
          \ }}></p>\n  </body>\n  </html>"
    EmailTemplateContentWithBuilderHTML:
      value:
        subject: "Welcome to documentation {{ name }}."
        text_html: "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\
          \ \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n  <html\
          \ lang=\"en\">\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"\
          text/html\" charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width,\
          \ initial-scale=1.0, user-scalable=yes, maximum-scale=5\">\n    <title>Welcome</title>\n\
          \  </head>\n  <body>\n  \t<p>Welcome {{ name }}. This is welcome email.\
          \ It is sent to new users.</p>\n    <p><img src={{ link }}></p>\n  </body>\n\
          \  </html>"
        builder_html: |-
          {
            "blocks": [
                {
                "key": "9h9o9",
                "text": "Welcome. This is welcome email. It is sent to new users.",
                "type": "unstyled",
                "depth": 0,
                "inlineStyleRanges": [],
                "entityRanges": [],
                "data": {}
                }
            ],
            "entityMap": {}
          }
    EmailTemplateContentWithAllFields:
      value:
        subject: "Welcome to documentation {{ name }}."
        text_plain: "Welcome {{ name }}. This is welcome email. It is sent to new\
          \ users."
        text_html: "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\
          \ \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n  <html\
          \ lang=\"en\">\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"\
          text/html\" charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width,\
          \ initial-scale=1.0, user-scalable=yes, maximum-scale=5\">\n    <title>Welcome</title>\n\
          \  </head>\n  <body>\n  \t<p>Welcome {{ name }}. This is welcome email.\
          \ It is sent to new users.</p>\n    <p><img src={{ link }}></p>\n  </body>\n\
          \  </html>"
        text_amp: "<!DOCTYPE html>\n  <html ⚡4email>\n  <head>\n    <meta charset=\"\
          utf-8\">\n    <style amp4email-boilerplate>body{visibility:hidden}</style>\n\
          \    <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n\
          \    <style amp-custom>\n      body {\n        visibility: hidden;\n   \
          \   }\n    </style>\n  </head>\n  <body>\n  \t<p>Welcome {{ name }}. This\
          \ is welcome email. It is sent to new users.</p>\n    <p><img src={{ link\
          \ }}></p>\n  </body>\n  </html>"
        builder_html: |-
          {
            "blocks": [
                {
                "key": "9h9o9",
                "text": "Welcome. This is welcome email. It is sent to new users.",
                "type": "unstyled",
                "depth": 0,
                "inlineStyleRanges": [],
                "entityRanges": [],
                "data": {}
                }
            ],
            "entityMap": {}
          }
    PushTemplateContentDefault:
      value:
        title: Documents
        body: "Hi, You have need to sign documents!"
    SmsTransportTwilio:
      value:
        name: Twilio
        type: twilio
        credentials:
          account_sid: xxxxxxxxx
          auth_token: xxxxxxxxx
    SmsTransportVonage:
      value:
        name: Vonage
        type: vonage
        credentials:
          api_key: xxxxxxxxx
          api_secret: xx/xxxxxxxxx
    SmsTransportAmazonSNS:
      value:
        name: AmazonSNS
        type: amazon_sns
        credentials:
          access_key_id: xxxxxxxxx
          access_key_secret: xxxxxxxxx
          region: us-east-1
    SmsTransportTelesign:
      value:
        name: Telesign
        type: telesign
        credentials:
          customer_id: xxxxxxxxx-xxx-xxx-xxx-xxxxxxxxx
          api_key: xxxxxxxxx/xxxxxxxxx+/xxxxxxxxx+E==
    SmsTransportMessageBird:
      value:
        name: MessageBird
        type: message_bird
        credentials:
          access_key: xxxxxxxxx
  headers:
    request-id:
      description: The unique ID of the operation.
      example: 515850a0-a812-50bf-aa3c-d0d21d287e40
      explode: false
      schema:
        format: uuid
        type: string
      style: simple
  parameters:
    cursor:
      description: Which 'cursor' of paginated results to return.
      example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
      explode: true
      in: query
      name: cursor
      required: false
      schema:
        nullable: true
        type: string
      style: form
    per_page:
      description: Number of items returned per page
      example: 2
      explode: true
      in: query
      name: per_page
      required: false
      schema:
        default: 20
        maximum: 200
        minimum: 1
        type: integer
      style: form
    order_by:
      description: The field to order the results by
      example: latest
      explode: true
      in: query
      name: order_by
      required: false
      schema:
        enum:
        - latest
        - oldest
        type: string
      style: form
  responses:
    UnexpectedError:
      content:
        application/json:
          example:
            message: some error message
          schema:
            $ref: '#/components/schemas/Error'
      description: Unexpected error
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    AudienceSegmentList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AudienceSegmentCollectionResponse'
      description: The list of audience segments
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    Unauthorized:
      content:
        application/json:
          example:
            message: Unauthenticated.
          schema:
            $ref: '#/components/schemas/Error'
      description: The request requires user authentication.
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    Forbidden:
      content:
        application/json:
          example:
            message: Invalid scope(s) provided.
          schema:
            $ref: '#/components/schemas/Error'
      description: The server understood the request but refuses to authorize it.
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    ServerError:
      content:
        application/json:
          example:
            message: Unexpected server-side error.
          schema:
            $ref: '#/components/schemas/Error'
      description: The server encountered an unexpected condition which prevented
        it from fulfilling the request.
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    AudienceSegment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AudienceSegmentResponse'
      description: The audience segment resource
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    BadRequest:
      content:
        application/json:
          example:
            message: Validation failed
            errors:
              field1:
              - The field1 field is required.
              - The field1 field must be a string.
              field2:
              - The field2 field is required.
          schema:
            $ref: '#/components/schemas/ErrorMultiple'
      description: The request could not be understood by the server due to malformed
        syntax. The client SHOULD NOT repeat the request without modifications.
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    NotFound:
      content:
        application/json:
          example:
            message: The resource you requested could not be found.
          schema:
            $ref: '#/components/schemas/Error'
      description: The server has not found anything matching the Request-URI.
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    NoContent:
      description: The action was successful and the response body is empty.
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    AudienceFilterList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AudienceFilterCollectionResponse'
      description: The list of audience filters
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    AudienceFilter:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AudienceFilterResponse'
      description: The audience filter resource
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    AudienceTagList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AudienceTagCollectionResponse'
      description: The list of audience tags
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    AudienceTag:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AudienceTagResponse'
      description: The audience tag resource
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    AudienceRecipientList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AudienceRecipientCollectionResponse'
      description: The list of audience recipients
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    AudienceRecipient:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AudienceRecipientResponse'
      description: The audience recipient resource
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    AudienceRecipientSegmentList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AudienceRecipientSegmentCollectionResponse'
      description: The list of audience segments
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    AuthToken:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthTokenResponse'
      description: Client access token resource
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    EmailTransportList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmailTransportCollectionResponse'
      description: The list of email notification transports
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    EmailTransport:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmailTransportResponse'
      description: The email notification transport
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    EmailChannelList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmailChannelCollectionResponse'
      description: The list of email notification channels
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    EmailChannel:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmailChannelResponse'
      description: The email notification channel
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    EmailChannelRoutingRulesList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmailChannelRoutingRulesCollectionResponse'
      description: The list of routing-rules from the email notification channel
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    EmailChannelRoutingRule:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmailChannelRoutingRuleResponse'
      description: The routing-rule from the email notification channel
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    EmailSend:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmailSendResponse'
      description: The notification sent result
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    EmailSendBatch:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmailSendBatchResponse'
      description: The notification sent result
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    EmailSenderList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmailSenderCollectionResponse'
      description: The list of email notification senders
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    EmailSender:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmailSenderResponse'
      description: The email notification sender
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    EmailTemplateList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmailTemplateCollectionResponse'
      description: The list of email notification templates
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    EmailTemplate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmailTemplateResponse'
      description: The email notification template
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    EmailTemplateContentList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmailTemplateContentCollectionResponse'
      description: The list of contents from the email notification template
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    EmailTemplateContent:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmailTemplateContentResponse'
      description: The content from the email notification template
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    EmailNotificationList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmailNotificationCollectionResponse'
      description: The list of email notifications
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    EmailNotification:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmailNotificationResponse'
      description: The email notification
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    EmailNotificationState:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmailNotificationStateResponse'
      description: The email notification state
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    PushPlatformList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PushPlatformCollectionResponse'
      description: The list of push notification platforms
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    PushPlatform:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PushPlatformResponse'
      description: The push notification platform
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    PushTemplateList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PushTemplateCollectionResponse'
      description: The list of push notification templates
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    PushTemplate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PushTemplateResponse'
      description: The push notification template
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    PushTemplateContentList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PushTemplateContentCollectionResponse'
      description: The list of contents from the push notification template
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    PushTemplateContent:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PushTemplateContentResponse'
      description: The content from the push notification template
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    PushNotificationList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PushNotificationCollectionResponse'
      description: The list of push notifications
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    PushNotification:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PushNotificationResponse'
      description: The push notification
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    PushNotificationState:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PushNotificationStateResponse'
      description: The push notification state
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    PushNotificationSent:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PushNotificationSentResponse'
      description: The notification sent result
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    SmsTransportList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SmsTransportCollectionResponse'
      description: The transports collection response
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    SmsTransport:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SmsTransportResponse'
      description: The transport resource
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    TransportWebhookGenerated:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransportWebhookGenerateResponse'
      description: The transport webhook resource
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    SmsSenderList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SmsSenderCollectionResponse'
      description: The transport senders collection response
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    SmsSender:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SmsSenderResponse'
      description: The transport number resource
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    SmsChannelList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SmsChannelCollectionResponse'
      description: The template collection response
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    SmsChannel:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SmsChannelResponse'
      description: The template resource
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    SmsRoutingRuleList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SmsRoutingRuleCollectionResponse'
      description: The channel rule collection response
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    SmsRoutingRule:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SmsRoutingRuleResponse'
      description: The channel rule resource
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    SmsTemplateList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SmsTemplateCollectionResponse'
      description: The template collection response
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    SmsTemplate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SmsTemplateResponse'
      description: The template resource
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    SmsTemplateContentList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SmsTemplateContentCollectionResponse'
      description: The template content collection response
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    SmsTemplateContent:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SmsTemplateContentResponse'
      description: The template content resource
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    SmsNotificationList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SmsNotificationCollectionResponse'
      description: The notification collection response
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    SmsNotificationSent:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SmsNotificationSentResponse'
      description: The notification resource
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    SmsMultipleNotificationSent:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SmsMultipleNotificationSentResponse'
      description: The multiple notification resource
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    SmsNotification:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SmsNotificationResponse'
      description: The notification resource
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    SmsNotificationState:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SmsNotificationStateResponse'
      description: The sms notification state
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    SubscriptionList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubscriptionCollectionResponse'
      description: Subscription paginated collection
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    Subscription:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubscriptionResponse'
      description: Tha subscription resource
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
    Event:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EventResponse'
      description: Tha event resource
      headers:
        request-id:
          $ref: '#/components/headers/request-id'
  schemas:
    Error:
      properties:
        message:
          description: A message providing information about the error.
          example: Invalid credentials
          type: string
      required:
      - message
      type: object
    AudienceSegment:
      example:
        name: Active recipients
        created_at: 2020-01-01T00:00:00Z
        id: 00112233-4455-6677-8899-aabbccddeeff
        status: 1
      properties:
        id:
          description: The unique identifier of the Segment.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        name:
          description: The name of the Segment.
          example: Active recipients
          type: string
        status:
          description: The status of the Segment.
          enum:
          - 1
          - 2
          example: 1
          type: integer
        created_at:
          description: The datetime when the Platform was created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    Collection:
      properties:
        links:
          $ref: '#/components/schemas/Collection_links'
        meta:
          $ref: '#/components/schemas/Collection_meta'
      type: object
    AudienceSegmentCollectionResponse:
      allOf:
      - properties:
          data:
            items:
              $ref: '#/components/schemas/AudienceSegment'
            type: array
        type: object
      - $ref: '#/components/schemas/Collection'
    AudienceSegmentRequest:
      example:
        name: Active recipients
      properties:
        name:
          description: The name of the Segment.
          example: Active recipients
          type: string
      type: object
    AudienceSegmentResponse:
      example:
        data:
          name: Active recipients
          created_at: 2020-01-01T00:00:00Z
          id: 00112233-4455-6677-8899-aabbccddeeff
          status: 1
      properties:
        data:
          $ref: '#/components/schemas/AudienceSegment'
      type: object
    ErrorMultiple:
      properties:
        message:
          description: A message providing information about the error.
          example: Validation error
          type: string
        errors:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
      required:
      - errors
      - message
      type: object
    AudienceRule:
      example:
        property:
          name: language
          key: key
        value: en
        operator: string_equal
      properties:
        property:
          $ref: '#/components/schemas/AudienceRule_property'
        operator:
          description: The operator of the filter.
          enum:
          - string_equal
          - string_not_equal
          - number_equal
          - number_not_equal
          - number_greater_than
          - number_less_than
          - time_greater_than
          - time_less_than
          - time_greater_than_ago
          - time_greater_than_before
          - key_exist
          - key_not_exist
          example: string_equal
          type: string
        value:
          description: The value of the filter.
          example: en
          type: string
      type: object
    AudienceFilter:
      example:
        created_at: 2020-01-01T00:00:00Z
        rules:
        - property:
            name: language
            key: key
          value: en
          operator: string_equal
        - property:
            name: language
            key: key
          value: en
          operator: string_equal
        id: 00112233-4455-6677-8899-aabbccddeeff
      properties:
        id:
          description: The unique identifier of the Segment.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        rules:
          description: The rules of the Filter.
          items:
            $ref: '#/components/schemas/AudienceRule'
          type: array
        created_at:
          description: The datetime when the Platform was created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    AudienceFilterCollectionResponse:
      allOf:
      - properties:
          data:
            items:
              $ref: '#/components/schemas/AudienceFilter'
            type: array
        type: object
      - $ref: '#/components/schemas/Collection'
    AudienceFilterRequest:
      example:
        rules:
        - property:
            name: language
            key: key
          value: en
          operator: string_equal
        - property:
            name: language
            key: key
          value: en
          operator: string_equal
      properties:
        rules:
          description: The multiple filter rules.
          items:
            $ref: '#/components/schemas/AudienceRule'
          type: array
      type: object
    AudienceFilterResponse:
      example:
        data:
          created_at: 2020-01-01T00:00:00Z
          rules:
          - property:
              name: language
              key: key
            value: en
            operator: string_equal
          - property:
              name: language
              key: key
            value: en
            operator: string_equal
          id: 00112233-4455-6677-8899-aabbccddeeff
      properties:
        data:
          $ref: '#/components/schemas/AudienceFilter'
      type: object
    AudienceTag:
      example:
        name: paid_recipients
        created_at: 2020-01-01T00:00:00Z
      properties:
        name:
          description: The name of the Tag.
          example: paid_recipients
          type: string
        created_at:
          description: The datetime when the Tag was created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    AudienceTagCollectionResponse:
      allOf:
      - properties:
          data:
            items:
              $ref: '#/components/schemas/AudienceTag'
            type: array
        type: object
      - $ref: '#/components/schemas/Collection'
    AudienceTagRequest:
      example:
        name: paid_recipients
      properties:
        name:
          description: The name of the Tag.
          example: paid_recipients
          type: string
      type: object
    AudienceTagResponse:
      example:
        data:
          name: paid_recipients
          created_at: 2020-01-01T00:00:00Z
      properties:
        data:
          $ref: '#/components/schemas/AudienceTag'
      type: object
    LocaleCode:
      description: "The language code of the locale. The language code is a two-letter\
        \ code defined in ISO 639-1. The language code is followed by an underscore\
        \ and a two-letter country code defined in ISO 3166-1 alpha-2. For example,\
        \ en_US represents the English language used in the United States."
      enum:
      - en
      - ar
      - az
      - bs
      - ca
      - hr
      - cs
      - da
      - nl
      - et
      - fi
      - fr
      - ka
      - bg
      - de
      - el
      - hi
      - he
      - hu
      - id
      - it
      - ja
      - ko
      - lv
      - lt
      - ms
      - nb
      - fa
      - pl
      - pt
      - pa
      - ro
      - ru
      - sr
      - sk
      - es
      - sv
      - th
      - tr
      - uk
      - vi
      example: en
      type: string
    AudienceRecipientContact:
      example:
        address: john.doe@example.com
        created_at: 2020-01-01T00:00:00Z
        type: email
      properties:
        type:
          description: The type of the Contact.
          enum:
          - email
          - phone
          - push
          - push_web
          - push_ios
          - push_android
          example: email
          type: string
        address:
          description: The address of the Contact.
          example: john.doe@example.com
          nullable: true
          type: string
        created_at:
          description: The datetime when the Contact was created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    AudienceRecipientTag:
      example:
        name: paid_recipients
        created_at: 2020-01-01T00:00:00Z
        id: 00112233-4455-6677-8899-aabbccddeeff
      properties:
        id:
          description: The unique identifier of the Tag.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        name:
          description: The name of the Tag.
          example: paid_recipients
          type: string
        created_at:
          description: The datetime when the Recipient was added to the Tag.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    AudienceRecipient:
      example:
        last_login_at: 2020-01-01T00:00:00Z
        timezone: Europe/Amsterdam
        last_activity_type: email
        custom_fields:
          key1: value1
          key2: value2
        created_at: 2020-01-01T00:00:00Z
        external_id: "123456789"
        language: en
        tags:
        - name: paid_recipients
          created_at: 2020-01-01T00:00:00Z
          id: 00112233-4455-6677-8899-aabbccddeeff
        - name: paid_recipients
          created_at: 2020-01-01T00:00:00Z
          id: 00112233-4455-6677-8899-aabbccddeeff
        logins_count: 1
        last_activity_event: email.opened
        last_activity_at: 2020-01-01T00:00:00Z
        id: 00112233-4455-6677-8899-aabbccddeeff
        contacts:
        - address: john.doe@example.com
          created_at: 2020-01-01T00:00:00Z
          type: email
        - address: john.doe@example.com
          created_at: 2020-01-01T00:00:00Z
          type: email
        status: 1
      properties:
        id:
          description: The unique identifier of the Recipient.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        external_id:
          description: An external identifier of the Recipient. This is optional and
            can be used to link the Recipient to an external system.
          example: "123456789"
          nullable: true
          type: string
        timezone:
          description: The timezone of the Recipient. This is optional and can be
            used to set the timezone of the Recipient.
          example: Europe/Amsterdam
          nullable: true
          type: string
        language:
          $ref: '#/components/schemas/LocaleCode'
        last_activity_at:
          description: Datetime of last activity of the Recipient.
          example: 2020-01-01T00:00:00Z
          format: date-time
          nullable: true
          type: string
        last_activity_type:
          description: The last activity type of the Recipient.
          enum:
          - email
          - push
          - sms
          example: email
          nullable: true
          type: string
        last_activity_event:
          description: The last activity event of the Recipient.
          example: email.opened
          nullable: true
          type: string
        last_login_at:
          description: Datetime of last login of the Recipient.
          example: 2020-01-01T00:00:00Z
          format: date-time
          nullable: true
          type: string
        logins_count:
          description: The number of logins of the Recipient.
          example: 1
          nullable: true
          type: integer
        custom_fields:
          additionalProperties:
            type: string
          description: A json object of the custom data of the Recipient.
          example:
            key1: value1
            key2: value2
          type: object
        contacts:
          description: The contacts of the Recipient.
          items:
            $ref: '#/components/schemas/AudienceRecipientContact'
          type: array
        tags:
          description: The tags of the Recipient.
          items:
            $ref: '#/components/schemas/AudienceRecipientTag'
          type: array
        status:
          description: "The status of the Recipient. Every digit matters: 1 - active,\
            \ 2 - inactive."
          enum:
          - 1
          - 2
          example: 1
          type: integer
        created_at:
          description: The datetime when the Recipient was created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    AudienceRecipientCollectionResponse:
      allOf:
      - properties:
          data:
            items:
              $ref: '#/components/schemas/AudienceRecipient'
            type: array
        type: object
      - $ref: '#/components/schemas/Collection'
    AudienceRecipientRequest:
      example:
        logins_count: 1
        last_login_at: 2020-01-01T00:00:00Z
        timezone: Europe/Amsterdam
        custom_fields:
          key1: value1
          key2: value2
        external_id: "123456789"
        language: en
      properties:
        external_id:
          description: An external identifier of the Recipient. This is optional and
            can be used to link the Recipient to an external system.
          example: "123456789"
          nullable: true
          type: string
        timezone:
          description: The timezone of the Recipient. This is optional and can be
            used to set the timezone of the Recipient.
          example: Europe/Amsterdam
          nullable: true
          type: string
        language:
          $ref: '#/components/schemas/LocaleCode'
        last_login_at:
          description: Datetime of last login of the Recipient.
          example: 2020-01-01T00:00:00Z
          format: date-time
          nullable: true
          type: string
        logins_count:
          description: The number of logins of the Recipient.
          example: 1
          nullable: true
          type: integer
        custom_fields:
          additionalProperties:
            type: string
          description: A json object of the custom data of the Recipient.
          example:
            key1: value1
            key2: value2
          type: object
      type: object
    AudienceRecipientResponse:
      example:
        data:
          last_login_at: 2020-01-01T00:00:00Z
          timezone: Europe/Amsterdam
          last_activity_type: email
          custom_fields:
            key1: value1
            key2: value2
          created_at: 2020-01-01T00:00:00Z
          external_id: "123456789"
          language: en
          tags:
          - name: paid_recipients
            created_at: 2020-01-01T00:00:00Z
            id: 00112233-4455-6677-8899-aabbccddeeff
          - name: paid_recipients
            created_at: 2020-01-01T00:00:00Z
            id: 00112233-4455-6677-8899-aabbccddeeff
          logins_count: 1
          last_activity_event: email.opened
          last_activity_at: 2020-01-01T00:00:00Z
          id: 00112233-4455-6677-8899-aabbccddeeff
          contacts:
          - address: john.doe@example.com
            created_at: 2020-01-01T00:00:00Z
            type: email
          - address: john.doe@example.com
            created_at: 2020-01-01T00:00:00Z
            type: email
          status: 1
      properties:
        data:
          $ref: '#/components/schemas/AudienceRecipient'
      type: object
    AudienceRecipientContactRequest:
      example:
        address: john.doe@example.com
      properties:
        address:
          description: The address of the Contact.
          example: john.doe@example.com
          type: string
      type: object
    AudienceRecipientSegment:
      properties:
        id:
          description: The unique identifier of the Segment.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        name:
          description: The name of the Segment.
          example: Active recipients
          type: string
        created_at:
          description: The datetime when the Recipient was added to the Segment.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    AudienceRecipientSegmentCollectionResponse:
      allOf:
      - properties:
          data:
            items:
              $ref: '#/components/schemas/AudienceRecipientSegment'
            type: array
        type: object
      - $ref: '#/components/schemas/Collection'
    AuthTokenForServiceAccountRequest:
      example:
        client_secret: QtapiJV3pdOjTN4xDnwKJwXCUmcLEvqEi5rKNNrptW7nFKqvJJRHZ1AFkquVXjlQ
        client_id: 00112233-4455-6677-8899-aabbccddeeff
      properties:
        client_id:
          description: The client id of the Service Account.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        client_secret:
          description: The client secret of the Service Account.
          example: QtapiJV3pdOjTN4xDnwKJwXCUmcLEvqEi5rKNNrptW7nFKqvJJRHZ1AFkquVXjlQ
          type: string
      type: object
    AuthToken:
      example:
        access_token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiI5NzQzMWExMi0wNWExLTRmNDQtYjA2ZS0yMzA1NzVhNDRlZjAiLCJqdGkiOiIzYjQwY2QzMjRjYmE4ZjVkNzZiYzQ4YWQ2OTE2ZTU4NWJkYzYyOTA1OTVjZTAwNWUxZGU4OWRhZTI3OWJiZmE4ODM3M2E3YmFhYTY4YzNkNyIsImlhdCI6MTY2NDI3MzgwNS43MDUyNTUsIm5iZiI6MTY2NDI3MzgwNS43MDUyNzMsImV4cCI6MTY2NTEzNzgwNS42ODE4ODYsInN1YiI6IjE4MjUyMGI3LTBhYWEtNGNlYi1hMTM2LTUzNGVkMGVmNTYwNiIsImlzcyI6ImF1dGguYWlyZW1sLnN2Yy5jbHVzdGVyLmxvY2FsIiwic2NvcGVzIjpbIndvcmtzcGFjZXM6Y3JlYXRlIiwid29ya3NwYWNlczppbmRleCJdLCJ3b3Jrc3BhY2VfaWQiOm51bGx9.GuY07GHcYeoozs82GYX_2B4ogu7VZtuD3kTRYlhT6XGqOZmrCshIXNHSAapSN9oUYB8mNvODpXVhopGxIFSzEjX9TWM8Z8-IH4HPYjxkrhlUgOK5ELTdlOkioOeQ6uCp4RZbNT6AR862L9f2moLhA6zmYZj2LxmKmNTSq6XyTnhWm2crfOBHrv4SoXLKF19tXFA1sNci9gEqi2aQDAHgzj0HbTM9DNry3VuZHZrKUrmlkbO59V1TCq-9MzeYzuYgll31ldGQmQvS00MDlM9AqSIZTRCtYX1JK0FAY6JM4rHA-Ir4-Y5GqIbh7HKSBnD1H6yFIWa5HcZTu5Msy2p3VXJ523_rVT6ohk8ac_CkpfucRAzreGkDEnmqT23AZIy_3HzGVkciy1IsaSqMPZBGhJYCQAXc0I2QQG8NAoaMnNiS8D46EuqyUlx_wM5seC39A4NyAOBBugtztPjoNp4BVBLajF7qCLcWtr2Mw4fPtBwV3Nawb2RT33zVDanFqWgSV8ozUvefOfUDuFqLePxJI4EQ60iaK_qmTckR-GRgrwBTZ_ZNg_WZzzh7YAcyPvgPWV3mPyB9oW6izsVSg_mrcpFcSTQbEQnpAVhfbkv6Shsjk0gzZu8PA6i9_8eQArNCIhtM9Zm3BSlLIwLhB4QFe98uJFxpX5nny--2M8uYI1o
        token_type: Bearer
        expires_in: 2023-12-08T18:16:25Z
      properties:
        access_token:
          description: A JSON Web Token (JWT) that can be used to authenticate requests
            to the API.
          example: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiI5NzQzMWExMi0wNWExLTRmNDQtYjA2ZS0yMzA1NzVhNDRlZjAiLCJqdGkiOiIzYjQwY2QzMjRjYmE4ZjVkNzZiYzQ4YWQ2OTE2ZTU4NWJkYzYyOTA1OTVjZTAwNWUxZGU4OWRhZTI3OWJiZmE4ODM3M2E3YmFhYTY4YzNkNyIsImlhdCI6MTY2NDI3MzgwNS43MDUyNTUsIm5iZiI6MTY2NDI3MzgwNS43MDUyNzMsImV4cCI6MTY2NTEzNzgwNS42ODE4ODYsInN1YiI6IjE4MjUyMGI3LTBhYWEtNGNlYi1hMTM2LTUzNGVkMGVmNTYwNiIsImlzcyI6ImF1dGguYWlyZW1sLnN2Yy5jbHVzdGVyLmxvY2FsIiwic2NvcGVzIjpbIndvcmtzcGFjZXM6Y3JlYXRlIiwid29ya3NwYWNlczppbmRleCJdLCJ3b3Jrc3BhY2VfaWQiOm51bGx9.GuY07GHcYeoozs82GYX_2B4ogu7VZtuD3kTRYlhT6XGqOZmrCshIXNHSAapSN9oUYB8mNvODpXVhopGxIFSzEjX9TWM8Z8-IH4HPYjxkrhlUgOK5ELTdlOkioOeQ6uCp4RZbNT6AR862L9f2moLhA6zmYZj2LxmKmNTSq6XyTnhWm2crfOBHrv4SoXLKF19tXFA1sNci9gEqi2aQDAHgzj0HbTM9DNry3VuZHZrKUrmlkbO59V1TCq-9MzeYzuYgll31ldGQmQvS00MDlM9AqSIZTRCtYX1JK0FAY6JM4rHA-Ir4-Y5GqIbh7HKSBnD1H6yFIWa5HcZTu5Msy2p3VXJ523_rVT6ohk8ac_CkpfucRAzreGkDEnmqT23AZIy_3HzGVkciy1IsaSqMPZBGhJYCQAXc0I2QQG8NAoaMnNiS8D46EuqyUlx_wM5seC39A4NyAOBBugtztPjoNp4BVBLajF7qCLcWtr2Mw4fPtBwV3Nawb2RT33zVDanFqWgSV8ozUvefOfUDuFqLePxJI4EQ60iaK_qmTckR-GRgrwBTZ_ZNg_WZzzh7YAcyPvgPWV3mPyB9oW6izsVSg_mrcpFcSTQbEQnpAVhfbkv6Shsjk0gzZu8PA6i9_8eQArNCIhtM9Zm3BSlLIwLhB4QFe98uJFxpX5nny--2M8uYI1o
          format: JWT
          type: string
        expires_in:
          description: The number of seconds until the token expires.
          example: 2023-12-08T18:16:25Z
          format: date-time
          type: string
        token_type:
          description: The type of the token.
          example: Bearer
          type: string
      type: object
    AuthTokenResponse:
      example:
        data:
          access_token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiI5NzQzMWExMi0wNWExLTRmNDQtYjA2ZS0yMzA1NzVhNDRlZjAiLCJqdGkiOiIzYjQwY2QzMjRjYmE4ZjVkNzZiYzQ4YWQ2OTE2ZTU4NWJkYzYyOTA1OTVjZTAwNWUxZGU4OWRhZTI3OWJiZmE4ODM3M2E3YmFhYTY4YzNkNyIsImlhdCI6MTY2NDI3MzgwNS43MDUyNTUsIm5iZiI6MTY2NDI3MzgwNS43MDUyNzMsImV4cCI6MTY2NTEzNzgwNS42ODE4ODYsInN1YiI6IjE4MjUyMGI3LTBhYWEtNGNlYi1hMTM2LTUzNGVkMGVmNTYwNiIsImlzcyI6ImF1dGguYWlyZW1sLnN2Yy5jbHVzdGVyLmxvY2FsIiwic2NvcGVzIjpbIndvcmtzcGFjZXM6Y3JlYXRlIiwid29ya3NwYWNlczppbmRleCJdLCJ3b3Jrc3BhY2VfaWQiOm51bGx9.GuY07GHcYeoozs82GYX_2B4ogu7VZtuD3kTRYlhT6XGqOZmrCshIXNHSAapSN9oUYB8mNvODpXVhopGxIFSzEjX9TWM8Z8-IH4HPYjxkrhlUgOK5ELTdlOkioOeQ6uCp4RZbNT6AR862L9f2moLhA6zmYZj2LxmKmNTSq6XyTnhWm2crfOBHrv4SoXLKF19tXFA1sNci9gEqi2aQDAHgzj0HbTM9DNry3VuZHZrKUrmlkbO59V1TCq-9MzeYzuYgll31ldGQmQvS00MDlM9AqSIZTRCtYX1JK0FAY6JM4rHA-Ir4-Y5GqIbh7HKSBnD1H6yFIWa5HcZTu5Msy2p3VXJ523_rVT6ohk8ac_CkpfucRAzreGkDEnmqT23AZIy_3HzGVkciy1IsaSqMPZBGhJYCQAXc0I2QQG8NAoaMnNiS8D46EuqyUlx_wM5seC39A4NyAOBBugtztPjoNp4BVBLajF7qCLcWtr2Mw4fPtBwV3Nawb2RT33zVDanFqWgSV8ozUvefOfUDuFqLePxJI4EQ60iaK_qmTckR-GRgrwBTZ_ZNg_WZzzh7YAcyPvgPWV3mPyB9oW6izsVSg_mrcpFcSTQbEQnpAVhfbkv6Shsjk0gzZu8PA6i9_8eQArNCIhtM9Zm3BSlLIwLhB4QFe98uJFxpX5nny--2M8uYI1o
          token_type: Bearer
          expires_in: 2023-12-08T18:16:25Z
      properties:
        data:
          $ref: '#/components/schemas/AuthToken'
      type: object
    EmailTransport:
      example:
        headers:
          Reply-To: test@example.com
          List-Unsubscribe: "{{ channel_id }}@example.com"
        name: main
        created_at: 2020-01-01T00:00:00Z
        id: 00112233-4455-6677-8899-aabbccddeeff
        type: smtp
        status: 1
      properties:
        id:
          description: The unique identifier of the Platform.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        name:
          description: The name of the Platform.
          example: main
          type: string
        type:
          description: The type of the Platform.
          enum:
          - smtp
          - sendgrid
          - mailgun
          - gmail
          example: smtp
          type: string
        headers:
          description: The headers of the Transport.
          example:
            Reply-To: test@example.com
            List-Unsubscribe: "{{ channel_id }}@example.com"
          type: object
        status:
          description: "The status of the Transport. Every digit matters: 1 - active,\
            \ 2 - inactive, 3 - incomplete."
          enum:
          - 1
          - 2
          - 3
          example: 1
          type: integer
        created_at:
          description: The datetime when the Platform was created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    EmailTransportCollectionResponse:
      allOf:
      - properties:
          data:
            items:
              $ref: '#/components/schemas/EmailTransport'
            type: array
        type: object
      - $ref: '#/components/schemas/Collection'
    EmailTransportCreateRequest:
      example:
        headers:
          Reply-To: test@example.com
          List-Unsubscribe: "{{ channel_id }}@example.com"
        credentials:
          host: smtp.example.com
          port: 5877
          username: username
          password: password
        name: main
        type: smtp
      properties:
        name:
          description: The name of the Transport.
          example: main
          type: string
        type:
          description: The type of the Transport.
          enum:
          - smtp
          - mailgun
          - gmail
          - sendgrid
          example: smtp
          type: string
        credentials:
          description: The credentials of the Transport for type.
          example:
            host: smtp.example.com
            port: 5877
            username: username
            password: password
          type: object
        headers:
          description: The headers of the Transport.
          example:
            Reply-To: test@example.com
            List-Unsubscribe: "{{ channel_id }}@example.com"
          nullable: true
          type: object
      required:
      - credentials
      - name
      - type
      type: object
    EmailTransportResponse:
      example:
        data:
          headers:
            Reply-To: test@example.com
            List-Unsubscribe: "{{ channel_id }}@example.com"
          name: main
          created_at: 2020-01-01T00:00:00Z
          id: 00112233-4455-6677-8899-aabbccddeeff
          type: smtp
          status: 1
      properties:
        data:
          $ref: '#/components/schemas/EmailTransport'
      type: object
    EmailTransportUpdateRequest:
      example:
        headers:
          Reply-To: test@example.com
          List-Unsubscribe: "{{ channel_id }}@example.com"
        credentials:
          host: smtp.example.com
          port: 5877
          username: username
          password: password
        name: main
        status: 1
      properties:
        name:
          description: The name of the Transport.
          example: main
          nullable: true
          type: string
        status:
          description: "The status of the Transport. Every digit matters: 1 - active,\
            \ 2 - inactive, 3 - incomplete."
          enum:
          - 1
          - 2
          - 3
          example: 1
          nullable: true
          type: integer
        credentials:
          description: The credentials of the Transport for type.
          example:
            host: smtp.example.com
            port: 5877
            username: username
            password: password
          nullable: true
          type: object
        headers:
          description: The headers of the Transport.
          example:
            Reply-To: test@example.com
            List-Unsubscribe: "{{ channel_id }}@example.com"
          nullable: true
          type: object
      type: object
    EmailChannel:
      example:
        name: example channel
        created_at: 2020-01-01T00:00:00Z
        id: 00112233-4455-6677-8899-aabbccddeeff
      properties:
        id:
          description: The unique identifier of the Channel.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        name:
          description: The name of the Channel.
          example: example channel
          type: string
        created_at:
          description: The datetime when the Sender was created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    EmailChannelCollectionResponse:
      allOf:
      - properties:
          data:
            items:
              $ref: '#/components/schemas/EmailChannel'
            type: array
        type: object
      - $ref: '#/components/schemas/Collection'
    EmailChannelRequest:
      example:
        name: example channel
      properties:
        name:
          description: The name of the Channel.
          example: example channel
          type: string
      required:
      - name
      type: object
    EmailChannelResponse:
      example:
        data:
          name: example channel
          created_at: 2020-01-01T00:00:00Z
          id: 00112233-4455-6677-8899-aabbccddeeff
      properties:
        data:
          $ref: '#/components/schemas/EmailChannel'
      type: object
    EmailChannelRoutingRules:
      example:
        is_reserved: true
        transport_id: 00112233-4455-6677-8899-aabbccddeeff
        created_at: 2020-01-01T00:00:00Z
        id: 00112233-4455-6677-8899-aabbccddeeff
        sender_id: 00112233-4455-6677-8899-aabbccddeeff
        status: 1
      properties:
        id:
          description: The ID of the Routing-rule
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        transport_id:
          description: The ID of the Transport
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        sender_id:
          description: The ID of the Sender
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        is_reserved:
          description: Whether the Routing-rule is reserved or not
          example: true
          type: boolean
        status:
          description: "The status of the Routing-rule. Every digit matters: 1 - active,\
            \ 2 - inactive."
          enum:
          - 1
          - 2
          example: 1
          type: integer
        created_at:
          description: The datetime when the Template Content was created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    EmailChannelRoutingRulesCollectionResponse:
      allOf:
      - properties:
          data:
            items:
              $ref: '#/components/schemas/EmailChannelRoutingRules'
            type: array
        type: object
      - $ref: '#/components/schemas/Collection'
    EmailRoutingRuleCreateRequest:
      example:
        is_reserved: true
        transport_id: 00112233-4455-6677-8899-aabbccddeeff
        sender_id: 00112233-4455-6677-8899-aabbccddeeff
      properties:
        transport_id:
          description: The ID of the Transport
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        sender_id:
          description: The ID of the Sender
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        is_reserved:
          description: Whether the Routing-rule is reserved or not
          example: true
          type: boolean
      required:
      - sender_id
      - transport_id
      type: object
    EmailChannelRoutingRuleResponse:
      example:
        data:
          is_reserved: true
          transport_id: 00112233-4455-6677-8899-aabbccddeeff
          created_at: 2020-01-01T00:00:00Z
          id: 00112233-4455-6677-8899-aabbccddeeff
          sender_id: 00112233-4455-6677-8899-aabbccddeeff
          status: 1
      properties:
        data:
          $ref: '#/components/schemas/EmailChannelRoutingRules'
      type: object
    EmailRoutingRuleUpdateRequest:
      example:
        is_reserved: true
        transport_id: 00112233-4455-6677-8899-aabbccddeeff
        sender_id: 00112233-4455-6677-8899-aabbccddeeff
        status: 1
      properties:
        transport_id:
          description: The ID of the Transport
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          nullable: true
          type: string
        sender_id:
          description: The ID of the Sender
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        is_reserved:
          description: Whether the Routing-rule is reserved or not
          example: true
          nullable: true
          type: boolean
        status:
          description: "The status of the Routing-rule. Every digit matters: 1 - active,\
            \ 2 - inactive."
          enum:
          - 1
          - 2
          example: 1
          nullable: true
          type: integer
      type: object
    EmailSendRequest:
      example:
        template:
          variables:
            name: Jim Doe
            email: jim.doe@example.com
            link: https://example.com/
          name: welcome_to_documentation
          id: 00112233-4455-6677-8899-aabbccddeeff
          locale: en
        custom_params:
          param1: value1
          param2: value2
        attachments:
        - content_type: text/plain
          file_name: test.txt
          content_base64: 77u/MQo=
        - content_type: text/plain
          file_name: test.txt
          content_base64: 77u/MQo=
        from:
          email_address: john.doe@example.com
          name: John Doe
        to:
          email_address: jim.doe@example.com
          name: Jim Doe
          external_id: "11223344"
          recipient_id: 00112233-4455-6677-8899-aabbccddeeff
      properties:
        template:
          $ref: '#/components/schemas/EmailSendRequest_template'
        to:
          $ref: '#/components/schemas/EmailSendRequest_to'
        from:
          $ref: '#/components/schemas/EmailSendRequest_from'
        attachments:
          items:
            $ref: '#/components/schemas/EmailSendRequest_attachments_inner'
          type: array
        custom_params:
          description: The custom parameters of the notification.
          example:
            param1: value1
            param2: value2
          nullable: true
          type: object
      type: object
    EmailSendResponse:
      example:
        data:
          id: 00112233-4455-6677-8899-aabbccddeeff
      properties:
        data:
          $ref: '#/components/schemas/EmailSendResponse_data'
      type: object
    EmailSendBatchRequest:
      example:
        notifications:
        - template:
            variables:
              name: Jim Doe
              email: jim.doe@example.com
              link: https://example.com/
            name: welcome_to_documentation
            id: 00112233-4455-6677-8899-aabbccddeeff
            locale: en
          custom_params:
            param1: value1
            param2: value2
          attachments:
          - content_type: text/plain
            file_name: test.txt
            content_base64: 77u/MQo=
          - content_type: text/plain
            file_name: test.txt
            content_base64: 77u/MQo=
          from:
            email_address: john.doe@example.com
            name: John Doe
          to:
            email_address: jim.doe@example.com
            name: Jim Doe
            external_id: "11223344"
            recipient_id: 00112233-4455-6677-8899-aabbccddeeff
        - template:
            variables:
              name: Jim Doe
              email: jim.doe@example.com
              link: https://example.com/
            name: welcome_to_documentation
            id: 00112233-4455-6677-8899-aabbccddeeff
            locale: en
          custom_params:
            param1: value1
            param2: value2
          attachments:
          - content_type: text/plain
            file_name: test.txt
            content_base64: 77u/MQo=
          - content_type: text/plain
            file_name: test.txt
            content_base64: 77u/MQo=
          from:
            email_address: john.doe@example.com
            name: John Doe
          to:
            email_address: jim.doe@example.com
            name: Jim Doe
            external_id: "11223344"
            recipient_id: 00112233-4455-6677-8899-aabbccddeeff
      properties:
        notifications:
          description: Array of notifications which need to send
          items:
            $ref: '#/components/schemas/EmailSendRequest'
          type: array
      required:
      - notifications
      type: object
    EmailSendBatchResponse:
      example:
        data:
        - null
        - null
      properties:
        data:
          items:
            $ref: '#/components/schemas/EmailSendBatchResponse_data_inner'
          type: array
      type: object
    EmailSender:
      example:
        email_address: john.doe@example.com
        name: John Doe
        restrict_customization: false
        created_at: 2020-01-01T00:00:00Z
        id: 00112233-4455-6677-8899-aabbccddeeff
      properties:
        id:
          description: The unique identifier of the Sender.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        name:
          description: The name of the Sender.
          example: John Doe
          type: string
        email_address:
          description: The email address of the Sender.
          example: john.doe@example.com
          type: string
        restrict_customization:
          description: Indicates to prevent the sender from applying custom values.
            Default value is false.
          example: false
          type: boolean
        created_at:
          description: The datetime when the Sender was created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    EmailSenderCollectionResponse:
      allOf:
      - properties:
          data:
            items:
              $ref: '#/components/schemas/EmailSender'
            type: array
        type: object
      - $ref: '#/components/schemas/Collection'
    EmailSenderCreateRequest:
      example:
        email_address: john.doe@example.com
        name: John Doe
        restrict_customization: false
      properties:
        name:
          description: The name of the Sender.
          example: John Doe
          type: string
        email_address:
          description: The email address of the Sender.
          example: john.doe@example.com
          type: string
        restrict_customization:
          description: Indicates to prevent the sender from applying custom values.
            Default value is false.
          example: false
          type: boolean
      required:
      - email_address
      - name
      type: object
    EmailSenderResponse:
      example:
        data:
          email_address: john.doe@example.com
          name: John Doe
          restrict_customization: false
          created_at: 2020-01-01T00:00:00Z
          id: 00112233-4455-6677-8899-aabbccddeeff
      properties:
        data:
          $ref: '#/components/schemas/EmailSender'
      type: object
    EmailSenderUpdateRequest:
      example:
        email_address: john.doe@example.com
        name: John Doe
        restrict_customization: true
      properties:
        name:
          description: The name of the Sender.
          example: John Doe
          nullable: true
          type: string
        email_address:
          description: The email address of the Sender.
          example: john.doe@example.com
          nullable: true
          type: string
        restrict_customization:
          description: Indicates to prevent the sender from applying custom values.
            Default value is false.
          example: true
          type: boolean
      type: object
    EmailTemplate:
      example:
        locales:
        - en
        - ed
        - uk
        name: welcome_to_documentation
        description: This is a test description of the template
        created_at: 2020-01-01T00:00:00Z
        id: 00112233-4455-6677-8899-aabbccddeeff
        channel_id: 00112233-4455-6677-8899-aabbccddeeff
        status: 1
      properties:
        id:
          description: The unique identifier of the Template.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        channel_id:
          description: The unique identifier of the Channel.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        name:
          description: The name of the Template.
          example: welcome_to_documentation
          type: string
        description:
          description: The description of the Template.
          example: This is a test description of the template
          type: string
        locales:
          description: List of locales Contents available for this Template.
          example:
          - en
          - ed
          - uk
          items:
            type: string
          type: array
        status:
          description: "The status of the Template. Every digit matters: 1 - active,\
            \ 2 - inactive."
          enum:
          - 1
          - 2
          example: 1
          type: integer
        created_at:
          description: The datetime when the Template was created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    EmailTemplateCollectionResponse:
      allOf:
      - properties:
          data:
            items:
              $ref: '#/components/schemas/EmailTemplate'
            type: array
        type: object
      - $ref: '#/components/schemas/Collection'
    EmailTemplateCreateRequest:
      example:
        name: welcome_to_documentation
        description: This is a test description of the template.
        channel_id: 00112233-4455-6677-8899-aabbccddeeff
      properties:
        channel_id:
          description: The unique identifier of the Channel.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        name:
          description: The name of the Template.
          example: welcome_to_documentation
          type: string
        description:
          description: The description of the Template.
          example: This is a test description of the template.
          type: string
      required:
      - channel_id
      - name
      type: object
    EmailTemplateResponse:
      example:
        data:
          locales:
          - en
          - ed
          - uk
          name: welcome_to_documentation
          description: This is a test description of the template
          created_at: 2020-01-01T00:00:00Z
          id: 00112233-4455-6677-8899-aabbccddeeff
          channel_id: 00112233-4455-6677-8899-aabbccddeeff
          status: 1
      properties:
        data:
          $ref: '#/components/schemas/EmailTemplate'
      type: object
    EmailTemplateUpdateRequest:
      example:
        name: welcome_to_documentation
        description: This is a test description of the template.
        channel_id: 00112233-4455-6677-8899-aabbccddeeff
      properties:
        channel_id:
          description: The unique identifier of the Channel.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          nullable: true
          type: string
        name:
          description: The name of the Template.
          example: welcome_to_documentation
          nullable: true
          type: string
        description:
          description: The description of the Template.
          example: This is a test description of the template.
          nullable: true
          type: string
      type: object
    EmailTemplateContentVariablesSettings:
      items:
        $ref: '#/components/schemas/EmailTemplateContentVariablesSettings_inner'
      type: array
    EmailTemplateContent:
      example:
        text_amp: "<!DOCTYPE html>\n  <html ⚡4email>\n  <head>\n    <meta charset=\"\
          utf-8\">\n    <style amp4email-boilerplate>body{visibility:hidden}</style>\n\
          \    <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n\
          \    <style amp-custom>\n      body {\n        visibility: hidden;\n   \
          \   }\n    </style>\n  </head>\n  <body>\n  \t<p>Welcome {{ name }}. This\
          \ is welcome email. It is sent to new users.</p>\n      <p><img src={{ link\
          \ }}></p>\n  </body>\n  </html>"
        subject: "Welcome to documentation {{ name }}."
        text_plain: "Welcome {{ name }}. This is welcome email. It is sent to new\
          \ users."
        variables_settings:
        - path: customer.name
          recipient_property:
            name: custom_fields
            key: name
          default_value: Customer
        - path: customer.name
          recipient_property:
            name: custom_fields
            key: name
          default_value: Customer
        created_at: 2020-01-01T00:00:00Z
        builder_html: |-
          {
            "blocks": [
              {
                "type": "text",
                "data": {
                  "text": "Welcome. This is welcome email. It is sent to new users."
                }
              }
            ]
          }
        locale: en
        text_html: "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\
          \ \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n  <html\
          \ lang=\"en\">\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"\
          text/html\" charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width,\
          \ initial-scale=1.0, user-scalable=yes, maximum-scale=5\">\n    <title>Welcome</title>\n\
          \  </head>\n  <body>\n  \t<p>Welcome {{ name }}. This is welcome email.\
          \ It is sent to new users.</p>\n      <p><img src={{ link }}></p>\n  </body>\n\
          \  </html>"
      properties:
        locale:
          $ref: '#/components/schemas/LocaleCode'
        subject:
          description: The is a subject of the email notification.
          example: "Welcome to documentation {{ name }}."
          type: string
        text_plain:
          description: The is a text body of the email notification.
          example: "Welcome {{ name }}. This is welcome email. It is sent to new users."
          type: string
        text_html:
          description: The is a html body of the email notification. Must be valid
            HTML.
          example: "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\
            \ \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n  <html\
            \ lang=\"en\">\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"\
            text/html\" charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"\
            width=device-width, initial-scale=1.0, user-scalable=yes, maximum-scale=5\"\
            >\n    <title>Welcome</title>\n  </head>\n  <body>\n  \t<p>Welcome {{\
            \ name }}. This is welcome email. It is sent to new users.</p>\n     \
            \ <p><img src={{ link }}></p>\n  </body>\n  </html>"
          type: string
        text_amp:
          description: The is a amp body of the email notification.
          example: "<!DOCTYPE html>\n  <html ⚡4email>\n  <head>\n    <meta charset=\"\
            utf-8\">\n    <style amp4email-boilerplate>body{visibility:hidden}</style>\n\
            \    <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n\
            \    <style amp-custom>\n      body {\n        visibility: hidden;\n \
            \     }\n    </style>\n  </head>\n  <body>\n  \t<p>Welcome {{ name }}.\
            \ This is welcome email. It is sent to new users.</p>\n      <p><img src={{\
            \ link }}></p>\n  </body>\n  </html>"
          type: string
        builder_html:
          description: This is settings for UI Template Builder. Must be valid JSON.
          example: |-
            {
              "blocks": [
                {
                  "type": "text",
                  "data": {
                    "text": "Welcome. This is welcome email. It is sent to new users."
                  }
                }
              ]
            }
          type: string
        variables_settings:
          items:
            $ref: '#/components/schemas/EmailTemplateContentVariablesSettings_inner'
          type: array
        created_at:
          description: The datetime when the Template Content was created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    EmailTemplateContentCollectionResponse:
      allOf:
      - properties:
          data:
            items:
              $ref: '#/components/schemas/EmailTemplateContent'
            type: array
        type: object
      - $ref: '#/components/schemas/Collection'
    EmailTemplateContentResponse:
      example:
        data:
          text_amp: "<!DOCTYPE html>\n  <html ⚡4email>\n  <head>\n    <meta charset=\"\
            utf-8\">\n    <style amp4email-boilerplate>body{visibility:hidden}</style>\n\
            \    <script async src=\"https://cdn.ampproject.org/v0.js\"></script>\n\
            \    <style amp-custom>\n      body {\n        visibility: hidden;\n \
            \     }\n    </style>\n  </head>\n  <body>\n  \t<p>Welcome {{ name }}.\
            \ This is welcome email. It is sent to new users.</p>\n      <p><img src={{\
            \ link }}></p>\n  </body>\n  </html>"
          subject: "Welcome to documentation {{ name }}."
          text_plain: "Welcome {{ name }}. This is welcome email. It is sent to new\
            \ users."
          variables_settings:
          - path: customer.name
            recipient_property:
              name: custom_fields
              key: name
            default_value: Customer
          - path: customer.name
            recipient_property:
              name: custom_fields
              key: name
            default_value: Customer
          created_at: 2020-01-01T00:00:00Z
          builder_html: |-
            {
              "blocks": [
                {
                  "type": "text",
                  "data": {
                    "text": "Welcome. This is welcome email. It is sent to new users."
                  }
                }
              ]
            }
          locale: en
          text_html: "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\
            \ \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n  <html\
            \ lang=\"en\">\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"\
            text/html\" charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"\
            width=device-width, initial-scale=1.0, user-scalable=yes, maximum-scale=5\"\
            >\n    <title>Welcome</title>\n  </head>\n  <body>\n  \t<p>Welcome {{\
            \ name }}. This is welcome email. It is sent to new users.</p>\n     \
            \ <p><img src={{ link }}></p>\n  </body>\n  </html>"
      properties:
        data:
          $ref: '#/components/schemas/EmailTemplateContent'
      type: object
    EmailTemplateContentUpdateRequest:
      example:
        text_amp: |-
          <!doctype html> <html ⚡4email>
            <head>
              <meta charset="utf-8">
              <style amp4email-boilerplate>body{visibility:hidden}</style>
              <script async src="https://cdn.ampproject.org/v0.js"></script>
            </head>
            <body>
              <p>Welcome {{ name }}. This is welcome email. It is sent to new users.</p>
              <p><img src={{ link }}></p>
            </body>
          </html>
        subject: "Welcome to documentation {{ name }}."
        text_plain: "Welcome {{ name }}. This is welcome email. It is sent to new\
          \ users."
        builder_html: |-
          {
            "blocks": [
              {
                "type": "text",
                "data": {
                  "text": "Welcome. This is welcome email. It is sent to new users."
                }
              }
            ]
          }
        text_html: "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\
          \ \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n  <html\
          \ lang=\"en\">\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"\
          text/html\" charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width,\
          \ initial-scale=1.0, user-scalable=yes, maximum-scale=5\">\n    <title>Welcome</title>\n\
          \  </head>\n  <body>\n  \t<p>Welcome {{ name }}. This is welcome email.\
          \ It is sent to new users.</p>\n      <p><img src={{ link }}></p>\n  </body>\n\
          \  </html>"
      properties:
        subject:
          description: The is a subject of the email notification.
          example: "Welcome to documentation {{ name }}."
          nullable: true
          type: string
        text_html:
          description: This is an HTML part of the body of the email notification.
          example: "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\
            \ \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n  <html\
            \ lang=\"en\">\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"\
            text/html\" charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"\
            width=device-width, initial-scale=1.0, user-scalable=yes, maximum-scale=5\"\
            >\n    <title>Welcome</title>\n  </head>\n  <body>\n  \t<p>Welcome {{\
            \ name }}. This is welcome email. It is sent to new users.</p>\n     \
            \ <p><img src={{ link }}></p>\n  </body>\n  </html>"
          nullable: true
          type: string
        text_plain:
          description: This is a TXT part of the body of the email notification.
          example: "Welcome {{ name }}. This is welcome email. It is sent to new users."
          nullable: true
          type: string
        text_amp:
          description: This is an AMP part of the body of the email notification.
          example: |-
            <!doctype html> <html ⚡4email>
              <head>
                <meta charset="utf-8">
                <style amp4email-boilerplate>body{visibility:hidden}</style>
                <script async src="https://cdn.ampproject.org/v0.js"></script>
              </head>
              <body>
                <p>Welcome {{ name }}. This is welcome email. It is sent to new users.</p>
                <p><img src={{ link }}></p>
              </body>
            </html>
          nullable: true
          type: string
        builder_html:
          description: This is settings for UI Template Builder. Must be valid JSON.
          example: |-
            {
              "blocks": [
                {
                  "type": "text",
                  "data": {
                    "text": "Welcome. This is welcome email. It is sent to new users."
                  }
                }
              ]
            }
          nullable: true
          type: string
      type: object
    EmailTemplateContentCreateRequest:
      example:
        text_amp: |-
          <!doctype html> <html ⚡4email>
            <head>
              <meta charset="utf-8">
              <style amp4email-boilerplate>body{visibility:hidden}</style>
              <script async src="https://cdn.ampproject.org/v0.js"></script>
            </head>
            <body>
              <p>Welcome {{ name }}. This is welcome email. It is sent to new users.</p>
              <p><img src={{ link }}></p>
            </body>
          </html>
        subject: "Welcome to documentation {{ name }}."
        text_plain: "Welcome {{ name }}. This is welcome email. It is sent to new\
          \ users."
        builder_html: |-
          {
            "blocks": [
              {
                "type": "text",
                "data": {
                  "text": "Welcome. This is welcome email. It is sent to new users."
                }
              }
            ]
          }
        text_html: "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\
          \ \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n  <html\
          \ lang=\"en\">\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"\
          text/html\" charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width,\
          \ initial-scale=1.0, user-scalable=yes, maximum-scale=5\">\n    <title>Welcome</title>\n\
          \  </head>\n  <body>\n  \t<p>Welcome {{ name }}. This is welcome email.\
          \ It is sent to new users.</p>\n      <p><img src={{ link }}></p>\n  </body>\n\
          \  </html>"
      properties:
        subject:
          description: The is a subject of the email notification.
          example: "Welcome to documentation {{ name }}."
          type: string
        text_html:
          description: This is an HTML part of the body of the email notification.
          example: "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\
            \ \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n  <html\
            \ lang=\"en\">\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"\
            text/html\" charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"\
            width=device-width, initial-scale=1.0, user-scalable=yes, maximum-scale=5\"\
            >\n    <title>Welcome</title>\n  </head>\n  <body>\n  \t<p>Welcome {{\
            \ name }}. This is welcome email. It is sent to new users.</p>\n     \
            \ <p><img src={{ link }}></p>\n  </body>\n  </html>"
          type: string
        text_plain:
          description: This is a TXT part of the body of the email notification.
          example: "Welcome {{ name }}. This is welcome email. It is sent to new users."
          type: string
        text_amp:
          description: This is an AMP part of the body of the email notification.
          example: |-
            <!doctype html> <html ⚡4email>
              <head>
                <meta charset="utf-8">
                <style amp4email-boilerplate>body{visibility:hidden}</style>
                <script async src="https://cdn.ampproject.org/v0.js"></script>
              </head>
              <body>
                <p>Welcome {{ name }}. This is welcome email. It is sent to new users.</p>
                <p><img src={{ link }}></p>
              </body>
            </html>
          type: string
        builder_html:
          description: This is settings for UI Template Builder. Must be valid JSON.
          example: |-
            {
              "blocks": [
                {
                  "type": "text",
                  "data": {
                    "text": "Welcome. This is welcome email. It is sent to new users."
                  }
                }
              ]
            }
          type: string
      required:
      - subject
      - text_html
      type: object
    EmailNotification:
      properties:
        id:
          description: The unique identifier of the Notification.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        locale:
          $ref: '#/components/schemas/LocaleCode'
        recipient_id:
          description: The ID of recipient.
          example: 00112233-4455-6677-8899-aabbccddeeff
          type: string
        to_name:
          description: The name of the recipient.
          example: example-name
          type: string
        to_email_address:
          description: The email address of the recipient.
          example: example@example.com
          type: string
        from_name:
          description: The name of the sender.
          example: example-name
          type: string
        from_email_address:
          description: The email address of the sender.
          example: example@example.com
          type: string
        status:
          description: |-
            The state of the Notification status.
             - 1: Notification Accepted
             - 2: Notification Blocked
             - 3: Notification Sent
             - 4: Notification Not Sent
             - 5: Notification Delivered
             - 6: Notification Not Delivered
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          example: 2
          type: integer
        custom_params:
          description: The custom parameters of the notification.
          example:
            param1: value1
            param2: value2
          type: object
        created_at:
          description: The datetime when the Notification was created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    EmailNotificationCollectionResponse:
      allOf:
      - properties:
          data:
            items:
              $ref: '#/components/schemas/EmailNotification'
            type: array
        type: object
      - $ref: '#/components/schemas/Collection'
    EmailNotificationOpen:
      properties:
        id:
          description: The unique identifier of the Open.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        ip:
          description: The IP address from which the Open was made.
          example: 8.8.8.8
          type: string
        user_agent:
          description: The user agent from which the Open was made.
          example: "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like\
            \ Gecko) Chrome/80.0.3987.122 Safari/537.36"
          type: string
        time:
          description: The datetime when the Open was made.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    EmailNotificationClick:
      properties:
        id:
          description: The unique identifier of the Click.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        ip:
          description: The IP address from which the Click was made.
          example: 8.8.8.8
          type: string
        user_agent:
          description: The user agent from which the Click was made.
          example: "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like\
            \ Gecko) Chrome/80.0.3987.122 Safari/537.36"
          type: string
        url:
          description: The URL that was clicked.
          example: https://example.com/some-page
          type: string
        time:
          description: The datetime when the Click was made.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    EmailNotificationDetails:
      allOf:
      - $ref: '#/components/schemas/EmailNotification'
      - properties:
          opens:
            items:
              $ref: '#/components/schemas/EmailNotificationOpen'
            type: array
          clicks:
            items:
              $ref: '#/components/schemas/EmailNotificationClick'
            type: array
        type: object
    EmailNotificationResponse:
      example:
        data: null
      properties:
        data:
          $ref: '#/components/schemas/EmailNotificationDetails'
      type: object
    EmailNotificationState:
      description: Notification States
      items:
        $ref: '#/components/schemas/EmailNotificationState_inner'
      type: array
    EmailNotificationStateResponse:
      example:
        data:
        - reason: The recipient is unsubscribed
          data:
            routing_rule_id: 00112233-4455-6677-8899-aab5c3dd4gff
          time: 2020-01-01T00:00:00Z
          status: 2
        - reason: The recipient is unsubscribed
          data:
            routing_rule_id: 00112233-4455-6677-8899-aab5c3dd4gff
          time: 2020-01-01T00:00:00Z
          status: 2
      properties:
        data:
          description: Notification States
          items:
            $ref: '#/components/schemas/EmailNotificationState_inner'
          type: array
      type: object
    PushPlatform:
      example:
        updated_at: 2020-01-01T00:00:00Z
        name: main
        created_at: 2020-01-01T00:00:00Z
        id: 00112233-4455-6677-8899-aabbccddeeff
        status: 1
      properties:
        id:
          description: The unique identifier of the Platform.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        name:
          description: The name of the Platform.
          example: main
          type: string
        status:
          description: "The status of the Platform. Every digit matters: 1 - active,\
            \ 2 - inactive."
          enum:
          - 1
          - 2
          example: 1
          type: integer
        created_at:
          description: The datetime when the Platform was created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
        updated_at:
          description: The datetime when the Platform was updated.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    PushPlatformCollectionResponse:
      allOf:
      - properties:
          data:
            items:
              $ref: '#/components/schemas/PushPlatform'
            type: array
        type: object
      - $ref: '#/components/schemas/Collection'
    PushPlatformRequest:
      example:
        credentials: "{\"key\":\"value\"}"
        name: main
      properties:
        name:
          description: The name of the Platform.
          example: main
          type: string
        credentials:
          description: The credentials for the Platform.
          example: "{\"key\":\"value\"}"
          type: string
      type: object
    PushPlatformResponse:
      example:
        data:
          updated_at: 2020-01-01T00:00:00Z
          name: main
          created_at: 2020-01-01T00:00:00Z
          id: 00112233-4455-6677-8899-aabbccddeeff
          status: 1
      properties:
        data:
          $ref: '#/components/schemas/PushPlatform'
      type: object
    PushTemplate:
      example:
        badge: 1
        locales:
        - en
        - ed
        - uk
        name: welcome_to_documentation
        created_at: 2020-01-01T00:00:00Z
        id: 00112233-4455-6677-8899-aabbccddeeff
        priority: 2
        channel_id: 00112233-4455-6677-8899-aabbccddeeff
        ttl: 60
        status: 1
      properties:
        id:
          description: The unique identifier of the Template.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        channel_id:
          description: The unique identifier of the Channel.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        name:
          description: The name of the Template.
          example: welcome_to_documentation
          type: string
        badge:
          description: The badge number to display on the app icon.
          example: 1
          minimum: 1
          type: integer
        priority:
          description: "The notification delivery priority. Pass 2 to send the notification\
            \ immediately, or pass 1 to send the notification at a time that conserves\
            \ the battery on the user's device."
          enum:
          - 1
          - 2
          example: 2
          type: integer
        ttl:
          description: "The time-to-live (TTL) value, in seconds, for the notification.\
            \ The TTL value is the amount of time that FCM attempts to deliver the\
            \ notification. If the notification is not delivered within the TTL value,\
            \ FCM no longer attempts to deliver the notification."
          example: 60
          type: integer
        status:
          description: "The status of the Template. Every digit matters: 1 - active,\
            \ 2 - inactive."
          enum:
          - 1
          - 2
          example: 1
          type: integer
        locales:
          description: List of locales available for this Template.
          example:
          - en
          - ed
          - uk
          items:
            type: string
          type: array
        created_at:
          description: The datetime when the Template was created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    PushTemplateCollectionResponse:
      allOf:
      - properties:
          data:
            items:
              $ref: '#/components/schemas/PushTemplate'
            type: array
        type: object
      - $ref: '#/components/schemas/Collection'
    PushTemplateRequest:
      example:
        badge: 1
        name: welcome_to_documentation
        priority: 2
        channel_id: 00112233-4455-6677-8899-aabbccddeeff
        ttl: 60
      properties:
        name:
          description: The name of the Template.
          example: welcome_to_documentation
          type: string
        badge:
          description: The badge number to display on the app icon.
          example: 1
          minimum: 1
          type: integer
        priority:
          description: "The notification delivery priority. Pass 2 to send the notification\
            \ immediately, or pass 1 to send the notification at a time that conserves\
            \ the battery on the user's device."
          enum:
          - 1
          - 2
          example: 2
          type: integer
        channel_id:
          description: The unique identifier of the Channel.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        ttl:
          description: "The time-to-live (TTL) value, in seconds, for the notification.\
            \ The TTL value is the amount of time that FCM attempts to deliver the\
            \ notification. If the notification is not delivered within the TTL value,\
            \ FCM no longer attempts to deliver the notification."
          example: 60
          type: integer
      required:
      - name
      type: object
    PushTemplateResponse:
      example:
        data:
          badge: 1
          locales:
          - en
          - ed
          - uk
          name: welcome_to_documentation
          created_at: 2020-01-01T00:00:00Z
          id: 00112233-4455-6677-8899-aabbccddeeff
          priority: 2
          channel_id: 00112233-4455-6677-8899-aabbccddeeff
          ttl: 60
          status: 1
      properties:
        data:
          $ref: '#/components/schemas/PushTemplate'
      type: object
    PushTemplateUpdateRequest:
      example:
        badge: 1
        name: welcome_to_documentation
        priority: 2
        ttl: 60
        status: 1
      properties:
        name:
          description: The name of the Template.
          example: welcome_to_documentation
          type: string
        badge:
          description: The badge number to display on the app icon.
          example: 1
          minimum: 1
          type: integer
        priority:
          description: "The notification delivery priority. Pass 2 to send the notification\
            \ immediately, or pass 1 to send the notification at a time that conserves\
            \ the battery on the user's device."
          enum:
          - 1
          - 2
          example: 2
          type: integer
        ttl:
          description: "The time-to-live (TTL) value, in seconds, for the notification.\
            \ The TTL value is the amount of time that FCM attempts to deliver the\
            \ notification. If the notification is not delivered within the TTL value,\
            \ FCM no longer attempts to deliver the notification."
          example: 60
          type: integer
        status:
          description: The status of the Template.
          enum:
          - 1
          - 2
          example: 1
          type: integer
      type: object
    PushTemplateContentVariablesSettings:
      items:
        $ref: '#/components/schemas/EmailTemplateContentVariablesSettings_inner'
      type: array
    PushTemplateContent:
      example:
        image: https://example.com/image.png
        data:
          some_value: value
          other: test value
        icon: https://example.com/icon.png
        link: https://example.com/link
        variables_settings:
        - path: customer.name
          recipient_property:
            name: custom_fields
            key: name
          default_value: Customer
        - path: customer.name
          recipient_property:
            name: custom_fields
            key: name
          default_value: Customer
        created_at: 2020-01-01T00:00:00Z
        locale: en
        title: Welcome to documentation
        body: This is a body of the push notification. It can be a long text with
          multiple lines.
      properties:
        locale:
          $ref: '#/components/schemas/LocaleCode'
        title:
          description: The is a title of the push notification.
          example: Welcome to documentation
          type: string
        body:
          description: The is a body of the push notification.
          example: This is a body of the push notification. It can be a long text
            with multiple lines.
          type: string
        icon:
          description: |-
            The notification's icon.
            Sets the notification icon to myicon for drawable resource myicon.
            If you don't send this key in the request, FCM displays the launcher icon specified in your app manifest.
          example: https://example.com/icon.png
          format: uri
          nullable: true
          type: string
        image:
          description: |
            Contains the URL of an image that is going to be downloaded on the device and displayed in a notification.
            JPEG, PNG, BMP have full support across platforms.
            Animated GIF and video only work on iOS.
            WebP and HEIF have varying levels of support across platforms and platform versions.
            Android has 1MB image size limit.
          example: https://example.com/image.png
          format: uri
          nullable: true
          type: string
        link:
          description: "The link to open when the user clicks on the notification.\
            \ For all URL values, HTTPS is required."
          example: https://example.com/link
          format: uri
          nullable: true
          type: string
        variables_settings:
          items:
            $ref: '#/components/schemas/EmailTemplateContentVariablesSettings_inner'
          type: array
        data:
          additionalProperties:
            type: string
          description: The additional data used for send push notification if user
            wants to add some custom data in request
          example:
            some_value: value
            other: test value
          type: object
        created_at:
          description: The datetime when the Template Content was created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    PushTemplateContentCollectionResponse:
      allOf:
      - properties:
          data:
            items:
              $ref: '#/components/schemas/PushTemplateContent'
            type: array
        type: object
      - $ref: '#/components/schemas/Collection'
    PushTemplateContentResponse:
      example:
        data:
          image: https://example.com/image.png
          data:
            some_value: value
            other: test value
          icon: https://example.com/icon.png
          link: https://example.com/link
          variables_settings:
          - path: customer.name
            recipient_property:
              name: custom_fields
              key: name
            default_value: Customer
          - path: customer.name
            recipient_property:
              name: custom_fields
              key: name
            default_value: Customer
          created_at: 2020-01-01T00:00:00Z
          locale: en
          title: Welcome to documentation
          body: This is a body of the push notification. It can be a long text with
            multiple lines.
      properties:
        data:
          $ref: '#/components/schemas/PushTemplateContent'
      type: object
    PushTemplateContentRequest:
      example:
        image: https://example.com/image.png
        data:
          some_value: value
          other: test value
        icon: https://example.com/icon.png
        link: https://example.com/link
        title: Welcome to documentation
        body: This is a body of the push notification. It can be a long text with
          multiple lines.
      properties:
        title:
          description: The is a title of the push notification.
          example: Welcome to documentation
          type: string
        body:
          description: The is a body of the push notification.
          example: This is a body of the push notification. It can be a long text
            with multiple lines.
          type: string
        icon:
          description: |-
            The notification's icon.
            Sets the notification icon to myicon for drawable resource myicon.
            If you don't send this key in the request, FCM displays the launcher icon specified in your app manifest.
          example: https://example.com/icon.png
          format: uri
          nullable: true
          type: string
        image:
          description: |
            Contains the URL of an image that is going to be downloaded on the device and displayed in a notification.
            JPEG, PNG, BMP have full support across platforms.
            Animated GIF and video only work on iOS.
            WebP and HEIF have varying levels of support across platforms and platform versions.
            Android has 1MB image size limit.
          example: https://example.com/image.png
          format: uri
          nullable: true
          type: string
        link:
          description: "The link to open when the user clicks on the notification.\
            \ For all URL values, HTTPS is required."
          example: https://example.com/link
          format: uri
          nullable: true
          type: string
        data:
          additionalProperties:
            type: string
          description: The additional data used for send push notification if user
            wants to add some custom data in request
          example:
            some_value: value
            other: test value
          type: object
      required:
      - body
      - title
      type: object
    PushNotification:
      example:
        opened_at: 2020-01-01T00:00:00Z
        custom_params:
          param1: value1
          param2: value2
        created_at: 2020-01-01T00:00:00Z
        id: 00112233-4455-6677-8899-aabbccddeeff
        locale: en
        delivered_at: 2020-01-01T00:00:00Z
        token: 01234567890:ABCDEFGpERNZ7em...aB06VJ-ABCD_XB34UgMJ6_abc_mJqnne8KxuHYxmemu21othozA3hqdNpKcmMr
        recipient_id: 00112233-4455-6677-8899-aabbccddeeff
        status: 2
      properties:
        id:
          description: The unique identifier of the Notification.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        locale:
          $ref: '#/components/schemas/LocaleCode'
        token:
          description: The recipient token of the Notification.
          example: 01234567890:ABCDEFGpERNZ7em...aB06VJ-ABCD_XB34UgMJ6_abc_mJqnne8KxuHYxmemu21othozA3hqdNpKcmMr
          type: string
        recipient_id:
          description: The ID of recipient.
          example: 00112233-4455-6677-8899-aabbccddeeff
          type: string
        status:
          description: |-
            The state of the Notification status.
             - 1: Notification Accepted
             - 2: Notification Blocked
             - 3: Notification Sent
             - 4: Notification Not Sent
             - 5: Notification Delivered
             - 6: Notification Not Delivered
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          example: 2
          type: integer
        custom_params:
          description: The custom parameters of the Notification.
          example:
            param1: value1
            param2: value2
          type: object
        delivered_at:
          description: The datetime when the Notification was delivered.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
        opened_at:
          description: The datetime when the Notification was opened.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
        created_at:
          description: The datetime when the Notification was created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    PushNotificationCollectionResponse:
      allOf:
      - properties:
          data:
            items:
              $ref: '#/components/schemas/PushNotification'
            type: array
        type: object
      - $ref: '#/components/schemas/Collection'
    PushNotificationResponse:
      example:
        data:
          opened_at: 2020-01-01T00:00:00Z
          custom_params:
            param1: value1
            param2: value2
          created_at: 2020-01-01T00:00:00Z
          id: 00112233-4455-6677-8899-aabbccddeeff
          locale: en
          delivered_at: 2020-01-01T00:00:00Z
          token: 01234567890:ABCDEFGpERNZ7em...aB06VJ-ABCD_XB34UgMJ6_abc_mJqnne8KxuHYxmemu21othozA3hqdNpKcmMr
          recipient_id: 00112233-4455-6677-8899-aabbccddeeff
          status: 2
      properties:
        data:
          $ref: '#/components/schemas/PushNotification'
      type: object
    PushNotificationState:
      description: Notification States
      items:
        $ref: '#/components/schemas/EmailNotificationState_inner'
      type: array
    PushNotificationStateResponse:
      example:
        data:
        - reason: The recipient is unsubscribed
          data:
            routing_rule_id: 00112233-4455-6677-8899-aab5c3dd4gff
          time: 2020-01-01T00:00:00Z
          status: 2
        - reason: The recipient is unsubscribed
          data:
            routing_rule_id: 00112233-4455-6677-8899-aab5c3dd4gff
          time: 2020-01-01T00:00:00Z
          status: 2
      properties:
        data:
          description: Notification States
          items:
            $ref: '#/components/schemas/EmailNotificationState_inner'
          type: array
      type: object
    PushNotificationSendRequest:
      example:
        template:
          variables:
            title: Example title 1 EN
            link: https://example.com/
          data:
            some_value: value
            other: test value
          name: welcome_to_documentation
          id: 00112233-4455-6677-8899-aabbccddeeff
          locale: en
        custom_params:
          param1: value1
          param2: value2
        to:
          external_id: "11223344"
          platform: web
          recipient_id: 00112233-4455-6677-8899-aabbccddeeff
          token: 00:32fsfzsd3qgdfgdthhhhg2222fff
      properties:
        template:
          $ref: '#/components/schemas/PushNotificationSendRequest_template'
        to:
          $ref: '#/components/schemas/PushNotificationSendRequest_to'
        custom_params:
          description: The custom parameters of the notification.
          example:
            param1: value1
            param2: value2
          nullable: true
          type: object
      type: object
    PushNotificationSentResponse:
      example:
        data:
          id: 00112233-4455-6677-8899-aabbccddeeff
      properties:
        data:
          $ref: '#/components/schemas/EmailSendResponse_data'
      type: object
    SmsTransport:
      example:
        name: main
        created_at: 2020-01-01T00:00:00Z
        id: 00112233-4455-6677-8899-aabbccddeeff
        type: twilio
        status: 1
      properties:
        id:
          description: The unique identifier of the Transport.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        name:
          description: The name of the Transport.
          example: main
          type: string
        type:
          description: The type of the Transport.
          enum:
          - twilio
          example: twilio
          type: string
        status:
          description: "The status of the Transport. Every digit matters: 1 - active,\
            \ 2 - inactive."
          enum:
          - 1
          - 2
          example: 1
          type: integer
        created_at:
          description: The datetime when the Transport was created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    SmsTransportCollectionResponse:
      allOf:
      - properties:
          data:
            items:
              $ref: '#/components/schemas/SmsTransport'
            type: array
        type: object
      - $ref: '#/components/schemas/Collection'
    SmsTransportCreateRequest:
      example:
        credentials:
          account_sid: xxxxxx
          auth_token: xxxxxx
        name: main
        type: twilio
      properties:
        name:
          description: The name of the Transport.
          example: main
          type: string
        type:
          description: The type of the Transport.
          enum:
          - twilio
          - vonage
          - amazon_sns
          - telesign
          - message_bird
          example: twilio
          type: string
        credentials:
          description: The credentials of the Transport for type.
          example:
            account_sid: xxxxxx
            auth_token: xxxxxx
          type: object
      required:
      - credentials
      - name
      - type
      type: object
    SmsTransportResponse:
      example:
        data:
          name: main
          created_at: 2020-01-01T00:00:00Z
          id: 00112233-4455-6677-8899-aabbccddeeff
          type: twilio
          status: 1
      properties:
        data:
          $ref: '#/components/schemas/SmsTransport'
      type: object
    SmsTransportUpdateRequest:
      example:
        credentials:
          account_sid: xxxxxx
          auth_token: xxxxxx
        name: main
        status: 1
      properties:
        name:
          description: The name of the Transport.
          example: main
          nullable: true
          type: string
        status:
          description: "The status of the Transport. Every digit matters: 1 - active,\
            \ 2 - inactive,"
          enum:
          - 1
          - 2
          example: 1
          nullable: true
          type: integer
        credentials:
          description: The credentials of the Transport for type.
          example:
            account_sid: xxxxxx
            auth_token: xxxxxx
          nullable: true
          type: object
      type: object
    TransportWebhookGenerateResponse:
      example:
        data:
          webhook_url: http:://site.com/webhook-link
      properties:
        data:
          $ref: '#/components/schemas/TransportWebhookGenerateResponse_data'
      type: object
    SmsSender:
      example:
        transport_id: 00112233-4455-6677-8899-aabbccddeeff
        name: Arianna Labadie
        created_at: 2020-01-01T00:00:00Z
        phone_number: "+19379091324"
        id: 00112233-4455-6677-8899-aabbccddeeff
        status: 1
      properties:
        id:
          description: The unique identifier of the Transport Number.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        transport_id:
          description: The unique identifier Transport ID of the Sender.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        name:
          description: The name of the Transport Number.
          example: Arianna Labadie
          type: string
        phone_number:
          description: The phone number of the Transport Number.
          example: "+19379091324"
          type: string
        status:
          description: "The status of the Sender. Every digit matters: 1 - active,\
            \ 2 - inactive."
          enum:
          - 1
          - 2
          example: 1
          type: integer
        created_at:
          description: The datetime when the Transport Number was created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    SmsSenderCollectionResponse:
      allOf:
      - properties:
          data:
            items:
              $ref: '#/components/schemas/SmsSender'
            type: array
        type: object
      - $ref: '#/components/schemas/Collection'
    SmsSenderResponse:
      example:
        data:
          transport_id: 00112233-4455-6677-8899-aabbccddeeff
          name: Arianna Labadie
          created_at: 2020-01-01T00:00:00Z
          phone_number: "+19379091324"
          id: 00112233-4455-6677-8899-aabbccddeeff
          status: 1
      properties:
        data:
          $ref: '#/components/schemas/SmsSender'
      type: object
    SmsChannel:
      example:
        name: Main Channel
        created_at: 2020-01-01T00:00:00Z
        id: 00112233-4455-6677-8899-aabbccddeeff
      properties:
        id:
          description: The unique identifier of the Channel.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        name:
          description: The name of the Channel.
          example: Main Channel
          type: string
        created_at:
          description: The datetime when the Channel was created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    SmsChannelCollectionResponse:
      allOf:
      - properties:
          data:
            items:
              $ref: '#/components/schemas/SmsChannel'
            type: array
        type: object
      - $ref: '#/components/schemas/Collection'
    SmsChannelRequest:
      example:
        name: Main Channel
      properties:
        name:
          description: The name of the Template.
          example: Main Channel
          type: string
      type: object
    SmsChannelResponse:
      example:
        data:
          name: Main Channel
          created_at: 2020-01-01T00:00:00Z
          id: 00112233-4455-6677-8899-aabbccddeeff
      properties:
        data:
          $ref: '#/components/schemas/SmsChannel'
      type: object
    SmsRoutingRuleRequest:
      example:
        is_reserved: false
        country_code: en
        priority: 1
        sender_id: 00112233-4455-6677-8899-aabbccddeeff
        alpha_number: airSlate
        excluded_countries:
        - en
        - en
        status: 1
      properties:
        sender_id:
          description: The unique identifier of the Sender.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        country_code:
          $ref: '#/components/schemas/LocaleCode'
        excluded_countries:
          items:
            $ref: '#/components/schemas/LocaleCode'
          type: array
        is_reserved:
          description: You can mark your number true and use it when main number can't
            send sms
          example: false
          type: boolean
        alpha_number:
          description: "You can use short alias, text Alphanumeric Sender ID instead\
            \ digital number"
          example: airSlate
          type: string
        priority:
          description: Priority number will try to send sms firstly
          example: 1
          type: integer
        status:
          description: "The status of the Routing-rule. Every digit matters: 1 - active,\
            \ 2 - inactive."
          enum:
          - 1
          - 2
          example: 1
          type: integer
      required:
      - sender_id
      type: object
    SmsRoutingRule:
      example:
        is_reserved: false
        country_code: en
        created_at: 2020-01-01T00:00:00Z
        id: 00112233-4455-6677-8899-aabbccddeeff
        priority: 1
        sender_id: 00112233-4455-6677-8899-aabbccddeeff
        alpha_number: airSlate
        status: 1
        excluded_countries:
        - ps
        - ru
        - ir
      properties:
        id:
          description: The unique identifier of the routing rules.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        sender_id:
          description: The unique identifier of the Sender.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        is_reserved:
          description: You can mark your number as Spare true and use it when main
            number can't send sms.
          example: false
          type: boolean
        alpha_number:
          description: "You can use short alias, text Alphanumeric Sender ID instead\
            \ digital number"
          example: airSlate
          type: string
        priority:
          description: Priority number will try to send sms firstly.
          example: 1
          type: integer
        status:
          description: "The status of the Routing-rule. Every digit matters: 1 - active,\
            \ 2 - inactive."
          enum:
          - 1
          - 2
          example: 1
          type: integer
        country_code:
          $ref: '#/components/schemas/LocaleCode'
        excluded_countries:
          description: List of excluded to send countries.
          example:
          - ps
          - ru
          - ir
          items:
            $ref: '#/components/schemas/LocaleCode'
          type: array
        created_at:
          description: The datetime when the Channel Rule was created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    SmsRoutingRuleCollectionResponse:
      allOf:
      - properties:
          data:
            items:
              $ref: '#/components/schemas/SmsRoutingRule'
            type: array
        type: object
      - $ref: '#/components/schemas/Collection'
    SmsRoutingRuleResponse:
      example:
        data:
          is_reserved: false
          country_code: en
          created_at: 2020-01-01T00:00:00Z
          id: 00112233-4455-6677-8899-aabbccddeeff
          priority: 1
          sender_id: 00112233-4455-6677-8899-aabbccddeeff
          alpha_number: airSlate
          status: 1
          excluded_countries:
          - ps
          - ru
          - ir
      properties:
        data:
          $ref: '#/components/schemas/SmsRoutingRule'
      type: object
    SmsTemplate:
      example:
        locales:
        - en
        - ed
        - uk
        name: welcome_to_documentation
        description: Simple template description
        created_at: 2020-01-01T00:00:00Z
        id: 00112233-4455-6677-8899-aabbccddeeff
        channel_id: 00112233-4455-6677-8899-aabbccddeeff
        status: 1
      properties:
        id:
          description: The unique identifier of the Template.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        channel_id:
          description: The unique identifier of the Channel.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        name:
          description: The name of the Template.
          example: welcome_to_documentation
          type: string
        description:
          description: The description of the Template.
          example: Simple template description
          type: string
        locales:
          description: List of locales available for this Template.
          example:
          - en
          - ed
          - uk
          items:
            type: string
          type: array
        status:
          description: "The status of the Template. Every digit matters: 1 - active,\
            \ 2 - inactive."
          enum:
          - 1
          - 2
          example: 1
          type: integer
        created_at:
          description: The datetime when the Template was created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    SmsTemplateCollectionResponse:
      allOf:
      - properties:
          data:
            items:
              $ref: '#/components/schemas/SmsTemplate'
            type: array
        type: object
      - $ref: '#/components/schemas/Collection'
    SmsTemplateRequest:
      example:
        name: welcome_to_documentation
        description: Simple template description
        channel_id: 00112233-4455-6677-8899-aabbccddeeff
        status: 1
      properties:
        channel_id:
          description: The unique identifier of the Channel.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        name:
          description: The name of the Template.
          example: welcome_to_documentation
          type: string
        description:
          description: The description of the Template.
          example: Simple template description
          type: string
        status:
          description: The status of the Template.
          enum:
          - 1
          - 2
          example: 1
          type: integer
      type: object
    SmsTemplateResponse:
      example:
        data:
          locales:
          - en
          - ed
          - uk
          name: welcome_to_documentation
          description: Simple template description
          created_at: 2020-01-01T00:00:00Z
          id: 00112233-4455-6677-8899-aabbccddeeff
          channel_id: 00112233-4455-6677-8899-aabbccddeeff
          status: 1
      properties:
        data:
          $ref: '#/components/schemas/SmsTemplate'
      type: object
    SmsTemplateContentVariablesSettings:
      items:
        $ref: '#/components/schemas/EmailTemplateContentVariablesSettings_inner'
      type: array
    SmsTemplateContent:
      example:
        variables_settings:
        - path: customer.name
          recipient_property:
            name: custom_fields
            key: name
          default_value: Customer
        - path: customer.name
          recipient_property:
            name: custom_fields
            key: name
          default_value: Customer
        created_at: 2020-01-01T00:00:00Z
        locale: en
        body: This is a body of the sms notification. It can be a long text with multiple
          lines.
      properties:
        locale:
          $ref: '#/components/schemas/LocaleCode'
        body:
          description: This is the body for SMS Notification.
          example: This is a body of the sms notification. It can be a long text with
            multiple lines.
          type: string
        variables_settings:
          items:
            $ref: '#/components/schemas/EmailTemplateContentVariablesSettings_inner'
          type: array
        created_at:
          description: The datetime when the Template Content was created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    SmsTemplateContentCollectionResponse:
      allOf:
      - properties:
          data:
            items:
              $ref: '#/components/schemas/SmsTemplateContent'
            type: array
        type: object
      - $ref: '#/components/schemas/Collection'
    SmsTemplateContentResponse:
      example:
        data:
          variables_settings:
          - path: customer.name
            recipient_property:
              name: custom_fields
              key: name
            default_value: Customer
          - path: customer.name
            recipient_property:
              name: custom_fields
              key: name
            default_value: Customer
          created_at: 2020-01-01T00:00:00Z
          locale: en
          body: This is a body of the sms notification. It can be a long text with
            multiple lines.
      properties:
        data:
          $ref: '#/components/schemas/SmsTemplateContent'
      type: object
    SmsTemplateContentRequest:
      example:
        body: This is a body of the sms notification. It can be a long text with multiple
          lines.
      properties:
        body:
          description: This is the body for SMS Notification.
          example: This is a body of the sms notification. It can be a long text with
            multiple lines.
          type: string
      type: object
    SmsNotification:
      example:
        to_number: "+18179091378"
        custom_params:
          param1: value1
          param2: value2
        price: "2.23"
        created_at: 2020-01-01T00:00:00Z
        id: 00112233-4455-6677-8899-aabbccddeeff
        locale: en
        message_sid: SM00112233-4455-6677-8899-aabbccddeeff
        sender_id: 00112233-4455-6677-8899-aabbccddeeff
        recipient_id: 00112233-4455-6677-8899-aabbccddeeff
        status: 2
      properties:
        id:
          description: The unique identifier of the Notification.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        locale:
          description: The locale of the Notification.
          example: en
          type: string
        price:
          description: The price of the SMS.
          example: "2.23"
          type: string
        sender_id:
          description: The ID of sender.
          example: 00112233-4455-6677-8899-aabbccddeeff
          type: string
        recipient_id:
          description: The ID of recipient.
          example: 00112233-4455-6677-8899-aabbccddeeff
          type: string
        message_sid:
          description: The unique identifier of the SMS.
          example: SM00112233-4455-6677-8899-aabbccddeeff
          type: string
        to_number:
          description: The phone number to send the SMS to.
          example: "+18179091378"
          type: string
        status:
          description: |-
            The state of the Notification status.
             - 1: Notification Accepted
             - 2: Notification Blocked
             - 3: Notification Sent
             - 4: Notification Not Sent
             - 5: Notification Delivered
             - 6: Notification Not Delivered
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          example: 2
          type: integer
        custom_params:
          description: The custom parameters of the notification.
          example:
            param1: value1
            param2: value2
          type: object
        created_at:
          description: The datetime when the Notification was created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    SmsNotificationCollectionResponse:
      allOf:
      - properties:
          data:
            items:
              $ref: '#/components/schemas/SmsNotification'
            type: array
        type: object
      - $ref: '#/components/schemas/Collection'
    SmsNotificationSendRequest:
      example:
        template:
          variables:
            title: Example title 1 EN
            link: https://example.com/
          name: welcome_to_documentation
          id: 00112233-4455-6677-8899-aabbccddeeff
          locale: en
        custom_params:
          param1: value1
          param2: value2
        to:
          number: "+18179091378"
          external_id: "112233"
          recipient_id: 00112233-4455-6677-8899-aabbccddeeff
      properties:
        template:
          $ref: '#/components/schemas/SmsNotificationSendRequest_template'
        to:
          $ref: '#/components/schemas/SmsNotificationSendRequest_to'
        custom_params:
          example:
            param1: value1
            param2: value2
          nullable: true
          type: object
      type: object
    SmsNotificationSentResponse:
      example:
        data:
          id: 00112233-4455-6677-8899-aabbccddeeff
      properties:
        data:
          $ref: '#/components/schemas/EmailSendResponse_data'
      type: object
    SmsNotificationSendMultipleRequest:
      example:
        messages:
        - template:
            variables:
              title: Example title 1 EN
              link: https://example.com/
            name: welcome_to_documentation
            id: 00112233-4455-6677-8899-aabbccddeeff
            locale: en
          custom_params:
            param1: value1
            param2: value2
          to:
            number: "+18179091378"
            external_id: "112233"
            recipient_id: 00112233-4455-6677-8899-aabbccddeeff
        - template:
            variables:
              title: Example title 1 EN
              link: https://example.com/
            name: welcome_to_documentation
            id: 00112233-4455-6677-8899-aabbccddeeff
            locale: en
          custom_params:
            param1: value1
            param2: value2
          to:
            number: "+18179091378"
            external_id: "112233"
            recipient_id: 00112233-4455-6677-8899-aabbccddeeff
      properties:
        messages:
          description: Array of notifications which need to send
          items:
            $ref: '#/components/schemas/SmsNotificationSendRequest'
          type: array
      required:
      - notifications
      type: object
    SmsMultipleNotificationSentResponse:
      allOf:
      - properties:
          data:
            items:
              $ref: '#/components/schemas/EmailSendResponse_data'
            type: array
        type: object
    SmsNotificationResponse:
      example:
        data:
          to_number: "+18179091378"
          custom_params:
            param1: value1
            param2: value2
          price: "2.23"
          created_at: 2020-01-01T00:00:00Z
          id: 00112233-4455-6677-8899-aabbccddeeff
          locale: en
          message_sid: SM00112233-4455-6677-8899-aabbccddeeff
          sender_id: 00112233-4455-6677-8899-aabbccddeeff
          recipient_id: 00112233-4455-6677-8899-aabbccddeeff
          status: 2
      properties:
        data:
          $ref: '#/components/schemas/SmsNotification'
      type: object
    SmsNotificationState:
      description: Notification States
      items:
        $ref: '#/components/schemas/EmailNotificationState_inner'
      type: array
    SmsNotificationStateResponse:
      example:
        data:
        - reason: The recipient is unsubscribed
          data:
            routing_rule_id: 00112233-4455-6677-8899-aab5c3dd4gff
          time: 2020-01-01T00:00:00Z
          status: 2
        - reason: The recipient is unsubscribed
          data:
            routing_rule_id: 00112233-4455-6677-8899-aab5c3dd4gff
          time: 2020-01-01T00:00:00Z
          status: 2
      properties:
        data:
          description: Notification States
          items:
            $ref: '#/components/schemas/EmailNotificationState_inner'
          type: array
      type: object
    Subscription:
      example:
        metadata:
          isTest: "true,"
          externalId: 1
          source: gclick_123
        description: Using for check sms status
        created_at: 2020-01-01T00:00:00Z
        id: 00112233-4455-6677-8899-aabbccddeeff
        events:
        - sms.notification.not_send
        - sms.notification.send
        url: https://aireml.com/api/callback
        status: 2
      properties:
        id:
          description: A unique identifier for webhook subscription resource
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
        description:
          description: "A short explanation, what about this webhook subscription"
          example: Using for check sms status
          type: string
        events:
          description: List of events which webhook subscription subscribed
          example:
          - sms.notification.not_send
          - sms.notification.send
          items:
            type: string
          type: array
        metadata:
          example:
            isTest: "true,"
            externalId: 1
            source: gclick_123
          type: object
        status:
          description: |-
            The status of the webhook subscription. Every digit matters:
              1 - active,
              2 - inactive.
          enum:
          - 1
          - 2
          example: 2
          type: integer
        url:
          description: The url address to where need make post request
          example: https://aireml.com/api/callback
          type: string
        created_at:
          description: The datetime when the webhook subscription was created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    SubscriptionCollectionResponse:
      allOf:
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Subscription'
            type: array
        type: object
      - $ref: '#/components/schemas/Collection'
    SubscriptionCreateRequest:
      example:
        metadata:
          isTest: true
          externalId: 1
          source: gclick_123
        description: Using for check sms status
        events:
        - sms.notification.send
        - sms.notification.not_send
        url: https://aireml.com/api/callback
        status: 2
      properties:
        description:
          description: "A short explanation, what about this webhook subscription"
          example: Using for check sms status
          type: string
        events:
          description: List of events which webhook subscription subscribed
          example:
          - sms.notification.send
          - sms.notification.not_send
          items:
            type: string
          type: array
        metadata:
          example:
            isTest: true
            externalId: 1
            source: gclick_123
          type: object
        status:
          description: |-
            The status of the webhook subscription. Every digit matters:
              1 - active,
              2 - inactive.
          enum:
          - 1
          - 2
          example: 2
          type: integer
        url:
          description: The url address to where need make post request
          example: https://aireml.com/api/callback
          type: string
      required:
      - description
      - url
      type: object
    SubscriptionResponse:
      example:
        data:
          metadata:
            isTest: "true,"
            externalId: 1
            source: gclick_123
          description: Using for check sms status
          created_at: 2020-01-01T00:00:00Z
          id: 00112233-4455-6677-8899-aabbccddeeff
          events:
          - sms.notification.not_send
          - sms.notification.send
          url: https://aireml.com/api/callback
          status: 2
      properties:
        data:
          $ref: '#/components/schemas/Subscription'
      type: object
    SubscriptionUpdateRequest:
      example:
        metadata:
          isTest: true
          externalId: 1
          source: gclick_123
        description: Using for check sms status
        events:
        - sms.notification.send
        - sms.notification.not_send
        url: https://aireml.com/api/callback
        status: 2
      properties:
        description:
          description: "A short explanation, what about this webhook subscription"
          example: Using for check sms status
          type: string
        events:
          description: List of events which webhook subscription subscribed
          example:
          - sms.notification.send
          - sms.notification.not_send
          items:
            type: string
          type: array
        metadata:
          example:
            isTest: true
            externalId: 1
            source: gclick_123
          type: object
        status:
          description: |-
            The status of the webhook subscription. Every digit matters:
              1 - active,
              2 - inactive.
          enum:
          - 1
          - 2
          example: 2
          type: integer
        url:
          description: The url address to where need make post request
          example: https://aireml.com/api/callback
          type: string
      required:
      - description
      - events
      - metadata
      - status
      - url
      type: object
    Event:
      example:
        sms:
        - notification.send
        - notification.not_send
        email:
        - notification.send
        - notification.not_send
        push:
        - notification.send
        - notification.not_send
      properties:
        sms:
          example:
          - notification.send
          - notification.not_send
          items:
            type: string
          type: array
        email:
          example:
          - notification.send
          - notification.not_send
          items:
            type: string
          type: array
        push:
          example:
          - notification.send
          - notification.not_send
          items:
            type: string
          type: array
      type: object
    EventResponse:
      example:
        data:
          sms:
          - notification.send
          - notification.not_send
          email:
          - notification.send
          - notification.not_send
          push:
          - notification.send
          - notification.not_send
      properties:
        data:
          $ref: '#/components/schemas/Event'
      type: object
    Collection_links:
      description: The links are related to resource pagination.
      properties:
        first:
          description: The URI to the first page of the results.
          format: uri
          nullable: true
          type: string
          example: null
        last:
          description: The URI to the last page of the results.
          format: uri
          nullable: true
          type: string
          example: null
        prev:
          description: The URI to the previous page of the results.
          example: https://aireml.com/api/v1/example?cursor=eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
          format: uri
          nullable: true
          type: string
        next:
          description: The URI to the next page of the results.
          example: https://aireml.com/api/v1/example?cursor=eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODowNCIsImlkIjoiZjZmNTQ1YTEtYzcxMi0zZGIzLTkzMzYtZGUyMjUwNmUxYmJjIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjp0cnVlfQ
          format: uri
          nullable: true
          type: string
      type: object
    Collection_meta:
      description: The additional information is related to resource pagination.
      properties:
        path:
          description: The base URL for the current request.
          example: https://aireml.com/api/v1/example
          format: uri
          type: string
        per_page:
          description: The number of items to be shown on each page.
          example: 20
          minimum: 1
          type: integer
        next_cursor:
          description: The cursor to the next page of the results.
          example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODowNCIsImlkIjoiZjZmNTQ1YTEtYzcxMi0zZGIzLTkzMzYtZGUyMjUwNmUxYmJjIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjp0cnVlfQ
          nullable: true
          type: string
        prev_cursor:
          description: The cursor to the previous page of the results.
          example: eyJjcmVhdGVkX2F0IjoiMjAyMy0wMS0xOCAxMjo1ODoyMyIsImlkIjoiYWRhM2NkMGItODE2YS0zMDc2LWEyOGUtNzYyMjNkNTRlNDMyIiwiX3BvaW50c1RvTmV4dEl0ZW1zIjpmYWxzZX0
          nullable: true
          type: string
      type: object
    AudienceRule_property:
      example:
        name: language
        key: key
      properties:
        name:
          description: The property of the filter.
          enum:
          - logins_count
          - last_activity_at
          - last_activity_type
          - last_activity_event
          - created_at
          - timezone
          - language
          - custom_fields
          example: language
          type: string
        key:
          description: The key for custom_fields.
          nullable: true
          type: string
          example: null
      type: object
    EmailSendRequest_template:
      example:
        variables:
          name: Jim Doe
          email: jim.doe@example.com
          link: https://example.com/
        name: welcome_to_documentation
        id: 00112233-4455-6677-8899-aabbccddeeff
        locale: en
      properties:
        id:
          description: The ID of the template to use for the notification. The id
            or name parameter must be specified.
          example: 00112233-4455-6677-8899-aabbccddeeff
          type: string
        name:
          description: The name of the template to use for the notification. The id
            or name parameter must be specified.
          example: welcome_to_documentation
          type: string
        locale:
          description: The locale of the template to use for the notification.
          example: en
          type: string
        variables:
          additionalProperties:
            type: string
          description: "The parameters used to replace placeholders of the Template\
            \ Content Where key - is a placeholder name, and value - is a placeholder\
            \ value."
          example:
            name: Jim Doe
            email: jim.doe@example.com
            link: https://example.com/
          type: object
      type: object
    EmailSendRequest_to:
      example:
        email_address: jim.doe@example.com
        name: Jim Doe
        external_id: "11223344"
        recipient_id: 00112233-4455-6677-8899-aabbccddeeff
      properties:
        name:
          description: The full name to which the notification is sent.
          example: Jim Doe
          type: string
        email_address:
          description: The email address to which the notification is sent. The email_address
            or recipient_id parameter must be specified.
          example: jim.doe@example.com
          type: string
        external_id:
          description: "The external ID of recipient. This field creates a single\
            \ recipient across different transports (email, push, SMS)."
          example: "11223344"
          type: string
        recipient_id:
          description: "The ID of recipient. This allows to send notification to existing\
            \ recipient. If the recipient does not exist or does not have fields for\
            \ sending email, then sending is blocked. The email_address or recipient_id\
            \ parameter must be specified."
          example: 00112233-4455-6677-8899-aabbccddeeff
          type: string
      type: object
    EmailSendRequest_from:
      example:
        email_address: john.doe@example.com
        name: John Doe
      properties:
        name:
          description: The full name from which the notification is sent.
          example: John Doe
          type: string
        email_address:
          description: The email address from which the notification is sent.
          example: john.doe@example.com
          type: string
      type: object
    EmailSendRequest_attachments_inner:
      example:
        content_type: text/plain
        file_name: test.txt
        content_base64: 77u/MQo=
      properties:
        content_type:
          description: The MIME type of the attachment file.
          example: text/plain
          type: string
        file_name:
          description: The filename of the attachment file.
          example: test.txt
          type: string
        content_base64:
          description: The content of the attachment file in base64 encoded characters.
          example: 77u/MQo=
          format: base64
          type: string
      type: object
    EmailSendResponse_data:
      example:
        id: 00112233-4455-6677-8899-aabbccddeeff
      properties:
        id:
          description: The unique identifier of the Notification.
          example: 00112233-4455-6677-8899-aabbccddeeff
          format: uuid
          type: string
      type: object
    EmailSendBatchResponse_data_inner:
      oneOf:
      - $ref: '#/components/schemas/EmailSendResponse_data'
      - $ref: '#/components/schemas/ErrorMultiple'
    EmailTemplateContentVariablesSettings_inner_recipient_property:
      example:
        name: custom_fields
        key: name
      properties:
        name:
          description: Mapping to the recipient property name.
          example: custom_fields
          type: string
        key:
          description: Mapping to the recipient custom field key (required if name=custom_fields).
          example: name
          nullable: true
          type: string
      type: object
    EmailTemplateContentVariablesSettings_inner:
      example:
        path: customer.name
        recipient_property:
          name: custom_fields
          key: name
        default_value: Customer
      properties:
        path:
          description: The unique variable path.
          example: customer.name
          type: string
        default_value:
          description: Optional default value for the variable.
          example: Customer
          type: string
        recipient_property:
          $ref: '#/components/schemas/EmailTemplateContentVariablesSettings_inner_recipient_property'
      type: object
    EmailNotificationState_inner:
      example:
        reason: The recipient is unsubscribed
        data:
          routing_rule_id: 00112233-4455-6677-8899-aab5c3dd4gff
        time: 2020-01-01T00:00:00Z
        status: 2
      properties:
        status:
          description: |-
            The state of the Notification status.
             - 1: Notification Accepted
             - 2: Notification Blocked
             - 3: Notification Sent
             - 4: Notification Not Sent
             - 5: Notification Delivered
             - 6: Notification Not Delivered
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          example: 2
          type: integer
        reason:
          description: The message of the Notification status. Contains the error
            message if the Notification was not sent or additional information about
            status state.
          example: The recipient is unsubscribed
          type: string
        data:
          description: "Json string Data about this notification state step.  Helps\
            \ to debug or understanding problem or just information. Notice: fields\
            \ can be differently depends status and errors."
          example:
            routing_rule_id: 00112233-4455-6677-8899-aab5c3dd4gff
          type: object
        time:
          description: The datetime when the Notification Status was updated.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      type: object
    PushNotificationSendRequest_template:
      example:
        variables:
          title: Example title 1 EN
          link: https://example.com/
        data:
          some_value: value
          other: test value
        name: welcome_to_documentation
        id: 00112233-4455-6677-8899-aabbccddeeff
        locale: en
      properties:
        id:
          description: The ID of the template to use for the notification. The id
            or name parameter must be specified.
          example: 00112233-4455-6677-8899-aabbccddeeff
          type: string
        name:
          description: The name of the template to use for the notification. The id
            or name parameter must be specified.
          example: welcome_to_documentation
          type: string
        locale:
          description: The locale of the template to use for the notification.
          example: en
          type: string
        variables:
          description: "The parameters used to replace placeholders of the Template\
            \ Content Where key - is a placeholder name, and value - is a placeholder\
            \ value. If the value is not provided, the placeholder will use the default\
            \ value from the Template Content."
          example:
            title: Example title 1 EN
            link: https://example.com/
          type: object
        data:
          additionalProperties:
            type: string
          description: The additional data used for send push notification if user
            wants to add some custom data in request
          example:
            some_value: value
            other: test value
          type: object
      type: object
    PushNotificationSendRequest_to:
      example:
        external_id: "11223344"
        platform: web
        recipient_id: 00112233-4455-6677-8899-aabbccddeeff
        token: 00:32fsfzsd3qgdfgdthhhhg2222fff
      properties:
        external_id:
          description: "The external ID of recipient. This field creates a single\
            \ recipient across different transports (email, push, SMS)."
          example: "11223344"
          type: string
        recipient_id:
          description: "The ID of recipient. This allows to send notification to existing\
            \ recipient. If the recipient does not exist or does not have fields for\
            \ sending push, then sending is blocked. The message.token or recipient_id\
            \ parameter must be specified."
          example: 00112233-4455-6677-8899-aabbccddeeff
          type: string
        token:
          description: The Token of recipient.
          example: 00:32fsfzsd3qgdfgdthhhhg2222fff
          type: string
        platform:
          description: The Recipient push token platform.
          enum:
          - web
          - ios
          - android
          example: web
          type: string
      type: object
    TransportWebhookGenerateResponse_data:
      example:
        webhook_url: http:://site.com/webhook-link
      properties:
        webhook_url:
          description: Webhook link.
          example: http:://site.com/webhook-link
          type: string
      type: object
    SmsNotificationSendRequest_template:
      example:
        variables:
          title: Example title 1 EN
          link: https://example.com/
        name: welcome_to_documentation
        id: 00112233-4455-6677-8899-aabbccddeeff
        locale: en
      properties:
        id:
          description: The ID of the template to use for the notification. The id
            or name parameter must be specified.
          example: 00112233-4455-6677-8899-aabbccddeeff
          type: string
        name:
          description: The name of the template to use for the notification. The id
            or name parameter must be specified.
          example: welcome_to_documentation
          type: string
        locale:
          description: The locale of the template to use for the notification.
          example: en
          type: string
        variables:
          additionalProperties:
            type: string
          description: "The parameters used to replace placeholders of the Template\
            \ Content Where key - is a placeholder name, and value - is a placeholder\
            \ value. If the value is not provided, the placeholder will use the default\
            \ value from the Template Content."
          example:
            title: Example title 1 EN
            link: https://example.com/
          type: object
      type: object
    SmsNotificationSendRequest_to:
      example:
        number: "+18179091378"
        external_id: "112233"
        recipient_id: 00112233-4455-6677-8899-aabbccddeeff
      properties:
        number:
          description: The phone number to send the SMS to. The number or recipient_id
            parameter must be specified.
          example: "+18179091378"
          type: string
        external_id:
          description: "The external ID of recipient. This field creates a single\
            \ recipient across different transports (email, push, SMS)."
          example: "112233"
          type: string
        recipient_id:
          description: "The ID of recipient. This allows to send notification to existing\
            \ recipient. If the recipient does not exist or does not have fields for\
            \ sending push, then sending is blocked. The number or recipient_id parameter\
            \ must be specified."
          example: 00112233-4455-6677-8899-aabbccddeeff
          type: string
      type: object
  securitySchemes:
    oAuth2ClientCredentials:
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: https://aireml.com/api/v1/auth/tokens/service-account
      type: oauth2
