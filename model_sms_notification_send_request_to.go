/*
airEml - API

airEml - API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package AirEml

import (
	"encoding/json"
)

// checks if the SmsNotificationSendRequestTo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SmsNotificationSendRequestTo{}

// SmsNotificationSendRequestTo struct for SmsNotificationSendRequestTo
type SmsNotificationSendRequestTo struct {
	// The phone number to send the SMS to. The number or recipient_id parameter must be specified.
	Number *string `json:"number,omitempty"`
	// The external ID of recipient. This field creates a single recipient across different transports (email, push, SMS).
	ExternalId *string `json:"external_id,omitempty"`
	// The ID of recipient. This allows to send notification to existing recipient. If the recipient does not exist or does not have fields for sending push, then sending is blocked. The number or recipient_id parameter must be specified.
	RecipientId *string `json:"recipient_id,omitempty"`
}

// NewSmsNotificationSendRequestTo instantiates a new SmsNotificationSendRequestTo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmsNotificationSendRequestTo() *SmsNotificationSendRequestTo {
	this := SmsNotificationSendRequestTo{}
	return &this
}

// NewSmsNotificationSendRequestToWithDefaults instantiates a new SmsNotificationSendRequestTo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmsNotificationSendRequestToWithDefaults() *SmsNotificationSendRequestTo {
	this := SmsNotificationSendRequestTo{}
	return &this
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *SmsNotificationSendRequestTo) GetNumber() string {
	if o == nil || IsNil(o.Number) {
		var ret string
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsNotificationSendRequestTo) GetNumberOk() (*string, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *SmsNotificationSendRequestTo) HasNumber() bool {
	if o != nil && !IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given string and assigns it to the Number field.
func (o *SmsNotificationSendRequestTo) SetNumber(v string) {
	o.Number = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *SmsNotificationSendRequestTo) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsNotificationSendRequestTo) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *SmsNotificationSendRequestTo) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *SmsNotificationSendRequestTo) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetRecipientId returns the RecipientId field value if set, zero value otherwise.
func (o *SmsNotificationSendRequestTo) GetRecipientId() string {
	if o == nil || IsNil(o.RecipientId) {
		var ret string
		return ret
	}
	return *o.RecipientId
}

// GetRecipientIdOk returns a tuple with the RecipientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsNotificationSendRequestTo) GetRecipientIdOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientId) {
		return nil, false
	}
	return o.RecipientId, true
}

// HasRecipientId returns a boolean if a field has been set.
func (o *SmsNotificationSendRequestTo) HasRecipientId() bool {
	if o != nil && !IsNil(o.RecipientId) {
		return true
	}

	return false
}

// SetRecipientId gets a reference to the given string and assigns it to the RecipientId field.
func (o *SmsNotificationSendRequestTo) SetRecipientId(v string) {
	o.RecipientId = &v
}

func (o SmsNotificationSendRequestTo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SmsNotificationSendRequestTo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Number) {
		toSerialize["number"] = o.Number
	}
	if !IsNil(o.ExternalId) {
		toSerialize["external_id"] = o.ExternalId
	}
	if !IsNil(o.RecipientId) {
		toSerialize["recipient_id"] = o.RecipientId
	}
	return toSerialize, nil
}

type NullableSmsNotificationSendRequestTo struct {
	value *SmsNotificationSendRequestTo
	isSet bool
}

func (v NullableSmsNotificationSendRequestTo) Get() *SmsNotificationSendRequestTo {
	return v.value
}

func (v *NullableSmsNotificationSendRequestTo) Set(val *SmsNotificationSendRequestTo) {
	v.value = val
	v.isSet = true
}

func (v NullableSmsNotificationSendRequestTo) IsSet() bool {
	return v.isSet
}

func (v *NullableSmsNotificationSendRequestTo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmsNotificationSendRequestTo(val *SmsNotificationSendRequestTo) *NullableSmsNotificationSendRequestTo {
	return &NullableSmsNotificationSendRequestTo{value: val, isSet: true}
}

func (v NullableSmsNotificationSendRequestTo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmsNotificationSendRequestTo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


