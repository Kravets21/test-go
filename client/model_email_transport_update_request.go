/*
airEml - API

airEml - API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package AirEml

import (
	"encoding/json"
)

// checks if the EmailTransportUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmailTransportUpdateRequest{}

// EmailTransportUpdateRequest struct for EmailTransportUpdateRequest
type EmailTransportUpdateRequest struct {
	// The name of the Transport.
	Name NullableString `json:"name,omitempty"`
	// The status of the Transport. Every digit matters: 1 - active, 2 - inactive, 3 - incomplete.
	Status NullableInt32 `json:"status,omitempty"`
	// The credentials of the Transport for type.
	Credentials map[string]interface{} `json:"credentials,omitempty"`
	// The headers of the Transport.
	Headers map[string]interface{} `json:"headers,omitempty"`
}

// NewEmailTransportUpdateRequest instantiates a new EmailTransportUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailTransportUpdateRequest() *EmailTransportUpdateRequest {
	this := EmailTransportUpdateRequest{}
	return &this
}

// NewEmailTransportUpdateRequestWithDefaults instantiates a new EmailTransportUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailTransportUpdateRequestWithDefaults() *EmailTransportUpdateRequest {
	this := EmailTransportUpdateRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTransportUpdateRequest) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTransportUpdateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *EmailTransportUpdateRequest) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *EmailTransportUpdateRequest) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *EmailTransportUpdateRequest) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *EmailTransportUpdateRequest) UnsetName() {
	o.Name.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTransportUpdateRequest) GetStatus() int32 {
	if o == nil || IsNil(o.Status.Get()) {
		var ret int32
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTransportUpdateRequest) GetStatusOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *EmailTransportUpdateRequest) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableInt32 and assigns it to the Status field.
func (o *EmailTransportUpdateRequest) SetStatus(v int32) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *EmailTransportUpdateRequest) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *EmailTransportUpdateRequest) UnsetStatus() {
	o.Status.Unset()
}

// GetCredentials returns the Credentials field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTransportUpdateRequest) GetCredentials() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTransportUpdateRequest) GetCredentialsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Credentials) {
		return map[string]interface{}{}, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *EmailTransportUpdateRequest) HasCredentials() bool {
	if o != nil && IsNil(o.Credentials) {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given map[string]interface{} and assigns it to the Credentials field.
func (o *EmailTransportUpdateRequest) SetCredentials(v map[string]interface{}) {
	o.Credentials = v
}

// GetHeaders returns the Headers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTransportUpdateRequest) GetHeaders() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTransportUpdateRequest) GetHeadersOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Headers) {
		return map[string]interface{}{}, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *EmailTransportUpdateRequest) HasHeaders() bool {
	if o != nil && IsNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given map[string]interface{} and assigns it to the Headers field.
func (o *EmailTransportUpdateRequest) SetHeaders(v map[string]interface{}) {
	o.Headers = v
}

func (o EmailTransportUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmailTransportUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.Credentials != nil {
		toSerialize["credentials"] = o.Credentials
	}
	if o.Headers != nil {
		toSerialize["headers"] = o.Headers
	}
	return toSerialize, nil
}

type NullableEmailTransportUpdateRequest struct {
	value *EmailTransportUpdateRequest
	isSet bool
}

func (v NullableEmailTransportUpdateRequest) Get() *EmailTransportUpdateRequest {
	return v.value
}

func (v *NullableEmailTransportUpdateRequest) Set(val *EmailTransportUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailTransportUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailTransportUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailTransportUpdateRequest(val *EmailTransportUpdateRequest) *NullableEmailTransportUpdateRequest {
	return &NullableEmailTransportUpdateRequest{value: val, isSet: true}
}

func (v NullableEmailTransportUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailTransportUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


