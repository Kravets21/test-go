/*
airEml - API

airEml - API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package AirEml

import (
	"encoding/json"
	"time"
)

// checks if the SmsSender type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SmsSender{}

// SmsSender struct for SmsSender
type SmsSender struct {
	// The unique identifier of the Transport Number.
	Id *string `json:"id,omitempty"`
	// The unique identifier Transport ID of the Sender.
	TransportId *string `json:"transport_id,omitempty"`
	// The name of the Transport Number.
	Name *string `json:"name,omitempty"`
	// The phone number of the Transport Number.
	PhoneNumber *string `json:"phone_number,omitempty"`
	// The status of the Sender. Every digit matters: 1 - active, 2 - inactive.
	Status *int32 `json:"status,omitempty"`
	// The datetime when the Transport Number was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
}

// NewSmsSender instantiates a new SmsSender object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmsSender() *SmsSender {
	this := SmsSender{}
	return &this
}

// NewSmsSenderWithDefaults instantiates a new SmsSender object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmsSenderWithDefaults() *SmsSender {
	this := SmsSender{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SmsSender) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsSender) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SmsSender) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SmsSender) SetId(v string) {
	o.Id = &v
}

// GetTransportId returns the TransportId field value if set, zero value otherwise.
func (o *SmsSender) GetTransportId() string {
	if o == nil || IsNil(o.TransportId) {
		var ret string
		return ret
	}
	return *o.TransportId
}

// GetTransportIdOk returns a tuple with the TransportId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsSender) GetTransportIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransportId) {
		return nil, false
	}
	return o.TransportId, true
}

// HasTransportId returns a boolean if a field has been set.
func (o *SmsSender) HasTransportId() bool {
	if o != nil && !IsNil(o.TransportId) {
		return true
	}

	return false
}

// SetTransportId gets a reference to the given string and assigns it to the TransportId field.
func (o *SmsSender) SetTransportId(v string) {
	o.TransportId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SmsSender) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsSender) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SmsSender) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SmsSender) SetName(v string) {
	o.Name = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *SmsSender) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsSender) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *SmsSender) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *SmsSender) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SmsSender) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsSender) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SmsSender) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *SmsSender) SetStatus(v int32) {
	o.Status = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *SmsSender) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsSender) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *SmsSender) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *SmsSender) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

func (o SmsSender) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SmsSender) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.TransportId) {
		toSerialize["transport_id"] = o.TransportId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	return toSerialize, nil
}

type NullableSmsSender struct {
	value *SmsSender
	isSet bool
}

func (v NullableSmsSender) Get() *SmsSender {
	return v.value
}

func (v *NullableSmsSender) Set(val *SmsSender) {
	v.value = val
	v.isSet = true
}

func (v NullableSmsSender) IsSet() bool {
	return v.isSet
}

func (v *NullableSmsSender) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmsSender(val *SmsSender) *NullableSmsSender {
	return &NullableSmsSender{value: val, isSet: true}
}

func (v NullableSmsSender) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmsSender) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


