/*
airEml - API

airEml - API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package AirEml

import (
	"encoding/json"
	"time"
)

// checks if the AudienceTag type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AudienceTag{}

// AudienceTag struct for AudienceTag
type AudienceTag struct {
	// The name of the Tag.
	Name *string `json:"name,omitempty"`
	// The datetime when the Tag was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
}

// NewAudienceTag instantiates a new AudienceTag object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAudienceTag() *AudienceTag {
	this := AudienceTag{}
	return &this
}

// NewAudienceTagWithDefaults instantiates a new AudienceTag object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAudienceTagWithDefaults() *AudienceTag {
	this := AudienceTag{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AudienceTag) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceTag) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AudienceTag) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AudienceTag) SetName(v string) {
	o.Name = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *AudienceTag) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceTag) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *AudienceTag) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *AudienceTag) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

func (o AudienceTag) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AudienceTag) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	return toSerialize, nil
}

type NullableAudienceTag struct {
	value *AudienceTag
	isSet bool
}

func (v NullableAudienceTag) Get() *AudienceTag {
	return v.value
}

func (v *NullableAudienceTag) Set(val *AudienceTag) {
	v.value = val
	v.isSet = true
}

func (v NullableAudienceTag) IsSet() bool {
	return v.isSet
}

func (v *NullableAudienceTag) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAudienceTag(val *AudienceTag) *NullableAudienceTag {
	return &NullableAudienceTag{value: val, isSet: true}
}

func (v NullableAudienceTag) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAudienceTag) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


