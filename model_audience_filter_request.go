/*
airEml - API

airEml - API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package AirEml

import (
	"encoding/json"
)

// checks if the AudienceFilterRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AudienceFilterRequest{}

// AudienceFilterRequest struct for AudienceFilterRequest
type AudienceFilterRequest struct {
	// The multiple filter rules.
	Rules []AudienceRule `json:"rules,omitempty"`
}

// NewAudienceFilterRequest instantiates a new AudienceFilterRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAudienceFilterRequest() *AudienceFilterRequest {
	this := AudienceFilterRequest{}
	return &this
}

// NewAudienceFilterRequestWithDefaults instantiates a new AudienceFilterRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAudienceFilterRequestWithDefaults() *AudienceFilterRequest {
	this := AudienceFilterRequest{}
	return &this
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *AudienceFilterRequest) GetRules() []AudienceRule {
	if o == nil || IsNil(o.Rules) {
		var ret []AudienceRule
		return ret
	}
	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceFilterRequest) GetRulesOk() ([]AudienceRule, bool) {
	if o == nil || IsNil(o.Rules) {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *AudienceFilterRequest) HasRules() bool {
	if o != nil && !IsNil(o.Rules) {
		return true
	}

	return false
}

// SetRules gets a reference to the given []AudienceRule and assigns it to the Rules field.
func (o *AudienceFilterRequest) SetRules(v []AudienceRule) {
	o.Rules = v
}

func (o AudienceFilterRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AudienceFilterRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Rules) {
		toSerialize["rules"] = o.Rules
	}
	return toSerialize, nil
}

type NullableAudienceFilterRequest struct {
	value *AudienceFilterRequest
	isSet bool
}

func (v NullableAudienceFilterRequest) Get() *AudienceFilterRequest {
	return v.value
}

func (v *NullableAudienceFilterRequest) Set(val *AudienceFilterRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAudienceFilterRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAudienceFilterRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAudienceFilterRequest(val *AudienceFilterRequest) *NullableAudienceFilterRequest {
	return &NullableAudienceFilterRequest{value: val, isSet: true}
}

func (v NullableAudienceFilterRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAudienceFilterRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


