/*
airEml - API

airEml - API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package AirEml

import (
	"encoding/json"
)

// checks if the EmailTemplateContentUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmailTemplateContentUpdateRequest{}

// EmailTemplateContentUpdateRequest struct for EmailTemplateContentUpdateRequest
type EmailTemplateContentUpdateRequest struct {
	// The is a subject of the email notification.
	Subject NullableString `json:"subject,omitempty"`
	// This is an HTML part of the body of the email notification.
	TextHtml NullableString `json:"text_html,omitempty"`
	// This is a TXT part of the body of the email notification.
	TextPlain NullableString `json:"text_plain,omitempty"`
	// This is an AMP part of the body of the email notification.
	TextAmp NullableString `json:"text_amp,omitempty"`
	// This is settings for UI Template Builder. Must be valid JSON.
	BuilderHtml NullableString `json:"builder_html,omitempty"`
}

// NewEmailTemplateContentUpdateRequest instantiates a new EmailTemplateContentUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailTemplateContentUpdateRequest() *EmailTemplateContentUpdateRequest {
	this := EmailTemplateContentUpdateRequest{}
	return &this
}

// NewEmailTemplateContentUpdateRequestWithDefaults instantiates a new EmailTemplateContentUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailTemplateContentUpdateRequestWithDefaults() *EmailTemplateContentUpdateRequest {
	this := EmailTemplateContentUpdateRequest{}
	return &this
}

// GetSubject returns the Subject field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateContentUpdateRequest) GetSubject() string {
	if o == nil || IsNil(o.Subject.Get()) {
		var ret string
		return ret
	}
	return *o.Subject.Get()
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateContentUpdateRequest) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Subject.Get(), o.Subject.IsSet()
}

// HasSubject returns a boolean if a field has been set.
func (o *EmailTemplateContentUpdateRequest) HasSubject() bool {
	if o != nil && o.Subject.IsSet() {
		return true
	}

	return false
}

// SetSubject gets a reference to the given NullableString and assigns it to the Subject field.
func (o *EmailTemplateContentUpdateRequest) SetSubject(v string) {
	o.Subject.Set(&v)
}
// SetSubjectNil sets the value for Subject to be an explicit nil
func (o *EmailTemplateContentUpdateRequest) SetSubjectNil() {
	o.Subject.Set(nil)
}

// UnsetSubject ensures that no value is present for Subject, not even an explicit nil
func (o *EmailTemplateContentUpdateRequest) UnsetSubject() {
	o.Subject.Unset()
}

// GetTextHtml returns the TextHtml field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateContentUpdateRequest) GetTextHtml() string {
	if o == nil || IsNil(o.TextHtml.Get()) {
		var ret string
		return ret
	}
	return *o.TextHtml.Get()
}

// GetTextHtmlOk returns a tuple with the TextHtml field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateContentUpdateRequest) GetTextHtmlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TextHtml.Get(), o.TextHtml.IsSet()
}

// HasTextHtml returns a boolean if a field has been set.
func (o *EmailTemplateContentUpdateRequest) HasTextHtml() bool {
	if o != nil && o.TextHtml.IsSet() {
		return true
	}

	return false
}

// SetTextHtml gets a reference to the given NullableString and assigns it to the TextHtml field.
func (o *EmailTemplateContentUpdateRequest) SetTextHtml(v string) {
	o.TextHtml.Set(&v)
}
// SetTextHtmlNil sets the value for TextHtml to be an explicit nil
func (o *EmailTemplateContentUpdateRequest) SetTextHtmlNil() {
	o.TextHtml.Set(nil)
}

// UnsetTextHtml ensures that no value is present for TextHtml, not even an explicit nil
func (o *EmailTemplateContentUpdateRequest) UnsetTextHtml() {
	o.TextHtml.Unset()
}

// GetTextPlain returns the TextPlain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateContentUpdateRequest) GetTextPlain() string {
	if o == nil || IsNil(o.TextPlain.Get()) {
		var ret string
		return ret
	}
	return *o.TextPlain.Get()
}

// GetTextPlainOk returns a tuple with the TextPlain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateContentUpdateRequest) GetTextPlainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TextPlain.Get(), o.TextPlain.IsSet()
}

// HasTextPlain returns a boolean if a field has been set.
func (o *EmailTemplateContentUpdateRequest) HasTextPlain() bool {
	if o != nil && o.TextPlain.IsSet() {
		return true
	}

	return false
}

// SetTextPlain gets a reference to the given NullableString and assigns it to the TextPlain field.
func (o *EmailTemplateContentUpdateRequest) SetTextPlain(v string) {
	o.TextPlain.Set(&v)
}
// SetTextPlainNil sets the value for TextPlain to be an explicit nil
func (o *EmailTemplateContentUpdateRequest) SetTextPlainNil() {
	o.TextPlain.Set(nil)
}

// UnsetTextPlain ensures that no value is present for TextPlain, not even an explicit nil
func (o *EmailTemplateContentUpdateRequest) UnsetTextPlain() {
	o.TextPlain.Unset()
}

// GetTextAmp returns the TextAmp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateContentUpdateRequest) GetTextAmp() string {
	if o == nil || IsNil(o.TextAmp.Get()) {
		var ret string
		return ret
	}
	return *o.TextAmp.Get()
}

// GetTextAmpOk returns a tuple with the TextAmp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateContentUpdateRequest) GetTextAmpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TextAmp.Get(), o.TextAmp.IsSet()
}

// HasTextAmp returns a boolean if a field has been set.
func (o *EmailTemplateContentUpdateRequest) HasTextAmp() bool {
	if o != nil && o.TextAmp.IsSet() {
		return true
	}

	return false
}

// SetTextAmp gets a reference to the given NullableString and assigns it to the TextAmp field.
func (o *EmailTemplateContentUpdateRequest) SetTextAmp(v string) {
	o.TextAmp.Set(&v)
}
// SetTextAmpNil sets the value for TextAmp to be an explicit nil
func (o *EmailTemplateContentUpdateRequest) SetTextAmpNil() {
	o.TextAmp.Set(nil)
}

// UnsetTextAmp ensures that no value is present for TextAmp, not even an explicit nil
func (o *EmailTemplateContentUpdateRequest) UnsetTextAmp() {
	o.TextAmp.Unset()
}

// GetBuilderHtml returns the BuilderHtml field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailTemplateContentUpdateRequest) GetBuilderHtml() string {
	if o == nil || IsNil(o.BuilderHtml.Get()) {
		var ret string
		return ret
	}
	return *o.BuilderHtml.Get()
}

// GetBuilderHtmlOk returns a tuple with the BuilderHtml field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailTemplateContentUpdateRequest) GetBuilderHtmlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BuilderHtml.Get(), o.BuilderHtml.IsSet()
}

// HasBuilderHtml returns a boolean if a field has been set.
func (o *EmailTemplateContentUpdateRequest) HasBuilderHtml() bool {
	if o != nil && o.BuilderHtml.IsSet() {
		return true
	}

	return false
}

// SetBuilderHtml gets a reference to the given NullableString and assigns it to the BuilderHtml field.
func (o *EmailTemplateContentUpdateRequest) SetBuilderHtml(v string) {
	o.BuilderHtml.Set(&v)
}
// SetBuilderHtmlNil sets the value for BuilderHtml to be an explicit nil
func (o *EmailTemplateContentUpdateRequest) SetBuilderHtmlNil() {
	o.BuilderHtml.Set(nil)
}

// UnsetBuilderHtml ensures that no value is present for BuilderHtml, not even an explicit nil
func (o *EmailTemplateContentUpdateRequest) UnsetBuilderHtml() {
	o.BuilderHtml.Unset()
}

func (o EmailTemplateContentUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmailTemplateContentUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Subject.IsSet() {
		toSerialize["subject"] = o.Subject.Get()
	}
	if o.TextHtml.IsSet() {
		toSerialize["text_html"] = o.TextHtml.Get()
	}
	if o.TextPlain.IsSet() {
		toSerialize["text_plain"] = o.TextPlain.Get()
	}
	if o.TextAmp.IsSet() {
		toSerialize["text_amp"] = o.TextAmp.Get()
	}
	if o.BuilderHtml.IsSet() {
		toSerialize["builder_html"] = o.BuilderHtml.Get()
	}
	return toSerialize, nil
}

type NullableEmailTemplateContentUpdateRequest struct {
	value *EmailTemplateContentUpdateRequest
	isSet bool
}

func (v NullableEmailTemplateContentUpdateRequest) Get() *EmailTemplateContentUpdateRequest {
	return v.value
}

func (v *NullableEmailTemplateContentUpdateRequest) Set(val *EmailTemplateContentUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailTemplateContentUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailTemplateContentUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailTemplateContentUpdateRequest(val *EmailTemplateContentUpdateRequest) *NullableEmailTemplateContentUpdateRequest {
	return &NullableEmailTemplateContentUpdateRequest{value: val, isSet: true}
}

func (v NullableEmailTemplateContentUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailTemplateContentUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


