/*
airEml - API

airEml - API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package AirEml

import (
	"encoding/json"
)

// checks if the EmailSendRequestTo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmailSendRequestTo{}

// EmailSendRequestTo struct for EmailSendRequestTo
type EmailSendRequestTo struct {
	// The full name to which the notification is sent.
	Name *string `json:"name,omitempty"`
	// The email address to which the notification is sent. The email_address or recipient_id parameter must be specified.
	EmailAddress *string `json:"email_address,omitempty"`
	// The external ID of recipient. This field creates a single recipient across different transports (email, push, SMS).
	ExternalId *string `json:"external_id,omitempty"`
	// The ID of recipient. This allows to send notification to existing recipient. If the recipient does not exist or does not have fields for sending email, then sending is blocked. The email_address or recipient_id parameter must be specified.
	RecipientId *string `json:"recipient_id,omitempty"`
}

// NewEmailSendRequestTo instantiates a new EmailSendRequestTo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailSendRequestTo() *EmailSendRequestTo {
	this := EmailSendRequestTo{}
	return &this
}

// NewEmailSendRequestToWithDefaults instantiates a new EmailSendRequestTo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailSendRequestToWithDefaults() *EmailSendRequestTo {
	this := EmailSendRequestTo{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EmailSendRequestTo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailSendRequestTo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EmailSendRequestTo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EmailSendRequestTo) SetName(v string) {
	o.Name = &v
}

// GetEmailAddress returns the EmailAddress field value if set, zero value otherwise.
func (o *EmailSendRequestTo) GetEmailAddress() string {
	if o == nil || IsNil(o.EmailAddress) {
		var ret string
		return ret
	}
	return *o.EmailAddress
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailSendRequestTo) GetEmailAddressOk() (*string, bool) {
	if o == nil || IsNil(o.EmailAddress) {
		return nil, false
	}
	return o.EmailAddress, true
}

// HasEmailAddress returns a boolean if a field has been set.
func (o *EmailSendRequestTo) HasEmailAddress() bool {
	if o != nil && !IsNil(o.EmailAddress) {
		return true
	}

	return false
}

// SetEmailAddress gets a reference to the given string and assigns it to the EmailAddress field.
func (o *EmailSendRequestTo) SetEmailAddress(v string) {
	o.EmailAddress = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *EmailSendRequestTo) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailSendRequestTo) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *EmailSendRequestTo) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *EmailSendRequestTo) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetRecipientId returns the RecipientId field value if set, zero value otherwise.
func (o *EmailSendRequestTo) GetRecipientId() string {
	if o == nil || IsNil(o.RecipientId) {
		var ret string
		return ret
	}
	return *o.RecipientId
}

// GetRecipientIdOk returns a tuple with the RecipientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailSendRequestTo) GetRecipientIdOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientId) {
		return nil, false
	}
	return o.RecipientId, true
}

// HasRecipientId returns a boolean if a field has been set.
func (o *EmailSendRequestTo) HasRecipientId() bool {
	if o != nil && !IsNil(o.RecipientId) {
		return true
	}

	return false
}

// SetRecipientId gets a reference to the given string and assigns it to the RecipientId field.
func (o *EmailSendRequestTo) SetRecipientId(v string) {
	o.RecipientId = &v
}

func (o EmailSendRequestTo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmailSendRequestTo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.EmailAddress) {
		toSerialize["email_address"] = o.EmailAddress
	}
	if !IsNil(o.ExternalId) {
		toSerialize["external_id"] = o.ExternalId
	}
	if !IsNil(o.RecipientId) {
		toSerialize["recipient_id"] = o.RecipientId
	}
	return toSerialize, nil
}

type NullableEmailSendRequestTo struct {
	value *EmailSendRequestTo
	isSet bool
}

func (v NullableEmailSendRequestTo) Get() *EmailSendRequestTo {
	return v.value
}

func (v *NullableEmailSendRequestTo) Set(val *EmailSendRequestTo) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailSendRequestTo) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailSendRequestTo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailSendRequestTo(val *EmailSendRequestTo) *NullableEmailSendRequestTo {
	return &NullableEmailSendRequestTo{value: val, isSet: true}
}

func (v NullableEmailSendRequestTo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailSendRequestTo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


