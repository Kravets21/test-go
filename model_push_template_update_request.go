/*
airEml - API

airEml - API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package AirEml

import (
	"encoding/json"
)

// checks if the PushTemplateUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PushTemplateUpdateRequest{}

// PushTemplateUpdateRequest struct for PushTemplateUpdateRequest
type PushTemplateUpdateRequest struct {
	// The name of the Template.
	Name *string `json:"name,omitempty"`
	// The badge number to display on the app icon.
	Badge *int32 `json:"badge,omitempty"`
	// The notification delivery priority. Pass 2 to send the notification immediately, or pass 1 to send the notification at a time that conserves the battery on the user's device.
	Priority *int32 `json:"priority,omitempty"`
	// The time-to-live (TTL) value, in seconds, for the notification. The TTL value is the amount of time that FCM attempts to deliver the notification. If the notification is not delivered within the TTL value, FCM no longer attempts to deliver the notification.
	Ttl *int32 `json:"ttl,omitempty"`
	// The status of the Template.
	Status *int32 `json:"status,omitempty"`
}

// NewPushTemplateUpdateRequest instantiates a new PushTemplateUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPushTemplateUpdateRequest() *PushTemplateUpdateRequest {
	this := PushTemplateUpdateRequest{}
	return &this
}

// NewPushTemplateUpdateRequestWithDefaults instantiates a new PushTemplateUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPushTemplateUpdateRequestWithDefaults() *PushTemplateUpdateRequest {
	this := PushTemplateUpdateRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PushTemplateUpdateRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushTemplateUpdateRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PushTemplateUpdateRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PushTemplateUpdateRequest) SetName(v string) {
	o.Name = &v
}

// GetBadge returns the Badge field value if set, zero value otherwise.
func (o *PushTemplateUpdateRequest) GetBadge() int32 {
	if o == nil || IsNil(o.Badge) {
		var ret int32
		return ret
	}
	return *o.Badge
}

// GetBadgeOk returns a tuple with the Badge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushTemplateUpdateRequest) GetBadgeOk() (*int32, bool) {
	if o == nil || IsNil(o.Badge) {
		return nil, false
	}
	return o.Badge, true
}

// HasBadge returns a boolean if a field has been set.
func (o *PushTemplateUpdateRequest) HasBadge() bool {
	if o != nil && !IsNil(o.Badge) {
		return true
	}

	return false
}

// SetBadge gets a reference to the given int32 and assigns it to the Badge field.
func (o *PushTemplateUpdateRequest) SetBadge(v int32) {
	o.Badge = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *PushTemplateUpdateRequest) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushTemplateUpdateRequest) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *PushTemplateUpdateRequest) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *PushTemplateUpdateRequest) SetPriority(v int32) {
	o.Priority = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *PushTemplateUpdateRequest) GetTtl() int32 {
	if o == nil || IsNil(o.Ttl) {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushTemplateUpdateRequest) GetTtlOk() (*int32, bool) {
	if o == nil || IsNil(o.Ttl) {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *PushTemplateUpdateRequest) HasTtl() bool {
	if o != nil && !IsNil(o.Ttl) {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *PushTemplateUpdateRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PushTemplateUpdateRequest) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushTemplateUpdateRequest) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PushTemplateUpdateRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *PushTemplateUpdateRequest) SetStatus(v int32) {
	o.Status = &v
}

func (o PushTemplateUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PushTemplateUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Badge) {
		toSerialize["badge"] = o.Badge
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.Ttl) {
		toSerialize["ttl"] = o.Ttl
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullablePushTemplateUpdateRequest struct {
	value *PushTemplateUpdateRequest
	isSet bool
}

func (v NullablePushTemplateUpdateRequest) Get() *PushTemplateUpdateRequest {
	return v.value
}

func (v *NullablePushTemplateUpdateRequest) Set(val *PushTemplateUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePushTemplateUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePushTemplateUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePushTemplateUpdateRequest(val *PushTemplateUpdateRequest) *NullablePushTemplateUpdateRequest {
	return &NullablePushTemplateUpdateRequest{value: val, isSet: true}
}

func (v NullablePushTemplateUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePushTemplateUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


