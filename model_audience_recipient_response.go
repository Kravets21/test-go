/*
airEml - API

airEml - API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package AirEml

import (
	"encoding/json"
)

// checks if the AudienceRecipientResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AudienceRecipientResponse{}

// AudienceRecipientResponse struct for AudienceRecipientResponse
type AudienceRecipientResponse struct {
	Data *AudienceRecipient `json:"data,omitempty"`
}

// NewAudienceRecipientResponse instantiates a new AudienceRecipientResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAudienceRecipientResponse() *AudienceRecipientResponse {
	this := AudienceRecipientResponse{}
	return &this
}

// NewAudienceRecipientResponseWithDefaults instantiates a new AudienceRecipientResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAudienceRecipientResponseWithDefaults() *AudienceRecipientResponse {
	this := AudienceRecipientResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *AudienceRecipientResponse) GetData() AudienceRecipient {
	if o == nil || IsNil(o.Data) {
		var ret AudienceRecipient
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudienceRecipientResponse) GetDataOk() (*AudienceRecipient, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *AudienceRecipientResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given AudienceRecipient and assigns it to the Data field.
func (o *AudienceRecipientResponse) SetData(v AudienceRecipient) {
	o.Data = &v
}

func (o AudienceRecipientResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AudienceRecipientResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableAudienceRecipientResponse struct {
	value *AudienceRecipientResponse
	isSet bool
}

func (v NullableAudienceRecipientResponse) Get() *AudienceRecipientResponse {
	return v.value
}

func (v *NullableAudienceRecipientResponse) Set(val *AudienceRecipientResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAudienceRecipientResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAudienceRecipientResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAudienceRecipientResponse(val *AudienceRecipientResponse) *NullableAudienceRecipientResponse {
	return &NullableAudienceRecipientResponse{value: val, isSet: true}
}

func (v NullableAudienceRecipientResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAudienceRecipientResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


