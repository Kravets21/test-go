/*
airEml - API

airEml - API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package AirEml

import (
	"encoding/json"
)

// checks if the PushNotificationSendRequestTo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PushNotificationSendRequestTo{}

// PushNotificationSendRequestTo struct for PushNotificationSendRequestTo
type PushNotificationSendRequestTo struct {
	// The external ID of recipient. This field creates a single recipient across different transports (email, push, SMS).
	ExternalId *string `json:"external_id,omitempty"`
	// The ID of recipient. This allows to send notification to existing recipient. If the recipient does not exist or does not have fields for sending push, then sending is blocked. The message.token or recipient_id parameter must be specified.
	RecipientId *string `json:"recipient_id,omitempty"`
	// The Token of recipient.
	Token *string `json:"token,omitempty"`
	// The Recipient push token platform.
	Platform *string `json:"platform,omitempty"`
}

// NewPushNotificationSendRequestTo instantiates a new PushNotificationSendRequestTo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPushNotificationSendRequestTo() *PushNotificationSendRequestTo {
	this := PushNotificationSendRequestTo{}
	return &this
}

// NewPushNotificationSendRequestToWithDefaults instantiates a new PushNotificationSendRequestTo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPushNotificationSendRequestToWithDefaults() *PushNotificationSendRequestTo {
	this := PushNotificationSendRequestTo{}
	return &this
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *PushNotificationSendRequestTo) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushNotificationSendRequestTo) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *PushNotificationSendRequestTo) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *PushNotificationSendRequestTo) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetRecipientId returns the RecipientId field value if set, zero value otherwise.
func (o *PushNotificationSendRequestTo) GetRecipientId() string {
	if o == nil || IsNil(o.RecipientId) {
		var ret string
		return ret
	}
	return *o.RecipientId
}

// GetRecipientIdOk returns a tuple with the RecipientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushNotificationSendRequestTo) GetRecipientIdOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientId) {
		return nil, false
	}
	return o.RecipientId, true
}

// HasRecipientId returns a boolean if a field has been set.
func (o *PushNotificationSendRequestTo) HasRecipientId() bool {
	if o != nil && !IsNil(o.RecipientId) {
		return true
	}

	return false
}

// SetRecipientId gets a reference to the given string and assigns it to the RecipientId field.
func (o *PushNotificationSendRequestTo) SetRecipientId(v string) {
	o.RecipientId = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *PushNotificationSendRequestTo) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushNotificationSendRequestTo) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *PushNotificationSendRequestTo) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *PushNotificationSendRequestTo) SetToken(v string) {
	o.Token = &v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *PushNotificationSendRequestTo) GetPlatform() string {
	if o == nil || IsNil(o.Platform) {
		var ret string
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushNotificationSendRequestTo) GetPlatformOk() (*string, bool) {
	if o == nil || IsNil(o.Platform) {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *PushNotificationSendRequestTo) HasPlatform() bool {
	if o != nil && !IsNil(o.Platform) {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given string and assigns it to the Platform field.
func (o *PushNotificationSendRequestTo) SetPlatform(v string) {
	o.Platform = &v
}

func (o PushNotificationSendRequestTo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PushNotificationSendRequestTo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExternalId) {
		toSerialize["external_id"] = o.ExternalId
	}
	if !IsNil(o.RecipientId) {
		toSerialize["recipient_id"] = o.RecipientId
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.Platform) {
		toSerialize["platform"] = o.Platform
	}
	return toSerialize, nil
}

type NullablePushNotificationSendRequestTo struct {
	value *PushNotificationSendRequestTo
	isSet bool
}

func (v NullablePushNotificationSendRequestTo) Get() *PushNotificationSendRequestTo {
	return v.value
}

func (v *NullablePushNotificationSendRequestTo) Set(val *PushNotificationSendRequestTo) {
	v.value = val
	v.isSet = true
}

func (v NullablePushNotificationSendRequestTo) IsSet() bool {
	return v.isSet
}

func (v *NullablePushNotificationSendRequestTo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePushNotificationSendRequestTo(val *PushNotificationSendRequestTo) *NullablePushNotificationSendRequestTo {
	return &NullablePushNotificationSendRequestTo{value: val, isSet: true}
}

func (v NullablePushNotificationSendRequestTo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePushNotificationSendRequestTo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


