/*
airEml - API

airEml - API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package AirEml

import (
	"encoding/json"
	"time"
)

// checks if the PushTemplateContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PushTemplateContent{}

// PushTemplateContent struct for PushTemplateContent
type PushTemplateContent struct {
	Locale *LocaleCode `json:"locale,omitempty"`
	// The is a title of the push notification.
	Title *string `json:"title,omitempty"`
	// The is a body of the push notification.
	Body *string `json:"body,omitempty"`
	// The notification's icon. Sets the notification icon to myicon for drawable resource myicon. If you don't send this key in the request, FCM displays the launcher icon specified in your app manifest.
	Icon NullableString `json:"icon,omitempty"`
	// Contains the URL of an image that is going to be downloaded on the device and displayed in a notification. JPEG, PNG, BMP have full support across platforms. Animated GIF and video only work on iOS. WebP and HEIF have varying levels of support across platforms and platform versions. Android has 1MB image size limit. 
	Image NullableString `json:"image,omitempty"`
	// The link to open when the user clicks on the notification. For all URL values, HTTPS is required.
	Link NullableString `json:"link,omitempty"`
	VariablesSettings []EmailTemplateContentVariablesSettingsInner `json:"variables_settings,omitempty"`
	// The additional data used for send push notification if user wants to add some custom data in request
	Data *map[string]string `json:"data,omitempty"`
	// The datetime when the Template Content was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
}

// NewPushTemplateContent instantiates a new PushTemplateContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPushTemplateContent() *PushTemplateContent {
	this := PushTemplateContent{}
	return &this
}

// NewPushTemplateContentWithDefaults instantiates a new PushTemplateContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPushTemplateContentWithDefaults() *PushTemplateContent {
	this := PushTemplateContent{}
	return &this
}

// GetLocale returns the Locale field value if set, zero value otherwise.
func (o *PushTemplateContent) GetLocale() LocaleCode {
	if o == nil || IsNil(o.Locale) {
		var ret LocaleCode
		return ret
	}
	return *o.Locale
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushTemplateContent) GetLocaleOk() (*LocaleCode, bool) {
	if o == nil || IsNil(o.Locale) {
		return nil, false
	}
	return o.Locale, true
}

// HasLocale returns a boolean if a field has been set.
func (o *PushTemplateContent) HasLocale() bool {
	if o != nil && !IsNil(o.Locale) {
		return true
	}

	return false
}

// SetLocale gets a reference to the given LocaleCode and assigns it to the Locale field.
func (o *PushTemplateContent) SetLocale(v LocaleCode) {
	o.Locale = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *PushTemplateContent) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushTemplateContent) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *PushTemplateContent) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *PushTemplateContent) SetTitle(v string) {
	o.Title = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *PushTemplateContent) GetBody() string {
	if o == nil || IsNil(o.Body) {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushTemplateContent) GetBodyOk() (*string, bool) {
	if o == nil || IsNil(o.Body) {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *PushTemplateContent) HasBody() bool {
	if o != nil && !IsNil(o.Body) {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *PushTemplateContent) SetBody(v string) {
	o.Body = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PushTemplateContent) GetIcon() string {
	if o == nil || IsNil(o.Icon.Get()) {
		var ret string
		return ret
	}
	return *o.Icon.Get()
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PushTemplateContent) GetIconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Icon.Get(), o.Icon.IsSet()
}

// HasIcon returns a boolean if a field has been set.
func (o *PushTemplateContent) HasIcon() bool {
	if o != nil && o.Icon.IsSet() {
		return true
	}

	return false
}

// SetIcon gets a reference to the given NullableString and assigns it to the Icon field.
func (o *PushTemplateContent) SetIcon(v string) {
	o.Icon.Set(&v)
}
// SetIconNil sets the value for Icon to be an explicit nil
func (o *PushTemplateContent) SetIconNil() {
	o.Icon.Set(nil)
}

// UnsetIcon ensures that no value is present for Icon, not even an explicit nil
func (o *PushTemplateContent) UnsetIcon() {
	o.Icon.Unset()
}

// GetImage returns the Image field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PushTemplateContent) GetImage() string {
	if o == nil || IsNil(o.Image.Get()) {
		var ret string
		return ret
	}
	return *o.Image.Get()
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PushTemplateContent) GetImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Image.Get(), o.Image.IsSet()
}

// HasImage returns a boolean if a field has been set.
func (o *PushTemplateContent) HasImage() bool {
	if o != nil && o.Image.IsSet() {
		return true
	}

	return false
}

// SetImage gets a reference to the given NullableString and assigns it to the Image field.
func (o *PushTemplateContent) SetImage(v string) {
	o.Image.Set(&v)
}
// SetImageNil sets the value for Image to be an explicit nil
func (o *PushTemplateContent) SetImageNil() {
	o.Image.Set(nil)
}

// UnsetImage ensures that no value is present for Image, not even an explicit nil
func (o *PushTemplateContent) UnsetImage() {
	o.Image.Unset()
}

// GetLink returns the Link field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PushTemplateContent) GetLink() string {
	if o == nil || IsNil(o.Link.Get()) {
		var ret string
		return ret
	}
	return *o.Link.Get()
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PushTemplateContent) GetLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Link.Get(), o.Link.IsSet()
}

// HasLink returns a boolean if a field has been set.
func (o *PushTemplateContent) HasLink() bool {
	if o != nil && o.Link.IsSet() {
		return true
	}

	return false
}

// SetLink gets a reference to the given NullableString and assigns it to the Link field.
func (o *PushTemplateContent) SetLink(v string) {
	o.Link.Set(&v)
}
// SetLinkNil sets the value for Link to be an explicit nil
func (o *PushTemplateContent) SetLinkNil() {
	o.Link.Set(nil)
}

// UnsetLink ensures that no value is present for Link, not even an explicit nil
func (o *PushTemplateContent) UnsetLink() {
	o.Link.Unset()
}

// GetVariablesSettings returns the VariablesSettings field value if set, zero value otherwise.
func (o *PushTemplateContent) GetVariablesSettings() []EmailTemplateContentVariablesSettingsInner {
	if o == nil || IsNil(o.VariablesSettings) {
		var ret []EmailTemplateContentVariablesSettingsInner
		return ret
	}
	return o.VariablesSettings
}

// GetVariablesSettingsOk returns a tuple with the VariablesSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushTemplateContent) GetVariablesSettingsOk() ([]EmailTemplateContentVariablesSettingsInner, bool) {
	if o == nil || IsNil(o.VariablesSettings) {
		return nil, false
	}
	return o.VariablesSettings, true
}

// HasVariablesSettings returns a boolean if a field has been set.
func (o *PushTemplateContent) HasVariablesSettings() bool {
	if o != nil && !IsNil(o.VariablesSettings) {
		return true
	}

	return false
}

// SetVariablesSettings gets a reference to the given []EmailTemplateContentVariablesSettingsInner and assigns it to the VariablesSettings field.
func (o *PushTemplateContent) SetVariablesSettings(v []EmailTemplateContentVariablesSettingsInner) {
	o.VariablesSettings = v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *PushTemplateContent) GetData() map[string]string {
	if o == nil || IsNil(o.Data) {
		var ret map[string]string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushTemplateContent) GetDataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *PushTemplateContent) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]string and assigns it to the Data field.
func (o *PushTemplateContent) SetData(v map[string]string) {
	o.Data = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PushTemplateContent) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PushTemplateContent) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PushTemplateContent) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PushTemplateContent) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

func (o PushTemplateContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PushTemplateContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Locale) {
		toSerialize["locale"] = o.Locale
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Body) {
		toSerialize["body"] = o.Body
	}
	if o.Icon.IsSet() {
		toSerialize["icon"] = o.Icon.Get()
	}
	if o.Image.IsSet() {
		toSerialize["image"] = o.Image.Get()
	}
	if o.Link.IsSet() {
		toSerialize["link"] = o.Link.Get()
	}
	if !IsNil(o.VariablesSettings) {
		toSerialize["variables_settings"] = o.VariablesSettings
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	return toSerialize, nil
}

type NullablePushTemplateContent struct {
	value *PushTemplateContent
	isSet bool
}

func (v NullablePushTemplateContent) Get() *PushTemplateContent {
	return v.value
}

func (v *NullablePushTemplateContent) Set(val *PushTemplateContent) {
	v.value = val
	v.isSet = true
}

func (v NullablePushTemplateContent) IsSet() bool {
	return v.isSet
}

func (v *NullablePushTemplateContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePushTemplateContent(val *PushTemplateContent) *NullablePushTemplateContent {
	return &NullablePushTemplateContent{value: val, isSet: true}
}

func (v NullablePushTemplateContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePushTemplateContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


