/*
airEml - API

airEml - API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package AirEml

import (
	"encoding/json"
)

// checks if the EmailRoutingRuleUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmailRoutingRuleUpdateRequest{}

// EmailRoutingRuleUpdateRequest struct for EmailRoutingRuleUpdateRequest
type EmailRoutingRuleUpdateRequest struct {
	// The ID of the Transport
	TransportId NullableString `json:"transport_id,omitempty"`
	// The ID of the Sender
	SenderId *string `json:"sender_id,omitempty"`
	// Whether the Routing-rule is reserved or not
	IsReserved NullableBool `json:"is_reserved,omitempty"`
	// The status of the Routing-rule. Every digit matters: 1 - active, 2 - inactive.
	Status NullableInt32 `json:"status,omitempty"`
}

// NewEmailRoutingRuleUpdateRequest instantiates a new EmailRoutingRuleUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailRoutingRuleUpdateRequest() *EmailRoutingRuleUpdateRequest {
	this := EmailRoutingRuleUpdateRequest{}
	return &this
}

// NewEmailRoutingRuleUpdateRequestWithDefaults instantiates a new EmailRoutingRuleUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailRoutingRuleUpdateRequestWithDefaults() *EmailRoutingRuleUpdateRequest {
	this := EmailRoutingRuleUpdateRequest{}
	return &this
}

// GetTransportId returns the TransportId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailRoutingRuleUpdateRequest) GetTransportId() string {
	if o == nil || IsNil(o.TransportId.Get()) {
		var ret string
		return ret
	}
	return *o.TransportId.Get()
}

// GetTransportIdOk returns a tuple with the TransportId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailRoutingRuleUpdateRequest) GetTransportIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TransportId.Get(), o.TransportId.IsSet()
}

// HasTransportId returns a boolean if a field has been set.
func (o *EmailRoutingRuleUpdateRequest) HasTransportId() bool {
	if o != nil && o.TransportId.IsSet() {
		return true
	}

	return false
}

// SetTransportId gets a reference to the given NullableString and assigns it to the TransportId field.
func (o *EmailRoutingRuleUpdateRequest) SetTransportId(v string) {
	o.TransportId.Set(&v)
}
// SetTransportIdNil sets the value for TransportId to be an explicit nil
func (o *EmailRoutingRuleUpdateRequest) SetTransportIdNil() {
	o.TransportId.Set(nil)
}

// UnsetTransportId ensures that no value is present for TransportId, not even an explicit nil
func (o *EmailRoutingRuleUpdateRequest) UnsetTransportId() {
	o.TransportId.Unset()
}

// GetSenderId returns the SenderId field value if set, zero value otherwise.
func (o *EmailRoutingRuleUpdateRequest) GetSenderId() string {
	if o == nil || IsNil(o.SenderId) {
		var ret string
		return ret
	}
	return *o.SenderId
}

// GetSenderIdOk returns a tuple with the SenderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailRoutingRuleUpdateRequest) GetSenderIdOk() (*string, bool) {
	if o == nil || IsNil(o.SenderId) {
		return nil, false
	}
	return o.SenderId, true
}

// HasSenderId returns a boolean if a field has been set.
func (o *EmailRoutingRuleUpdateRequest) HasSenderId() bool {
	if o != nil && !IsNil(o.SenderId) {
		return true
	}

	return false
}

// SetSenderId gets a reference to the given string and assigns it to the SenderId field.
func (o *EmailRoutingRuleUpdateRequest) SetSenderId(v string) {
	o.SenderId = &v
}

// GetIsReserved returns the IsReserved field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailRoutingRuleUpdateRequest) GetIsReserved() bool {
	if o == nil || IsNil(o.IsReserved.Get()) {
		var ret bool
		return ret
	}
	return *o.IsReserved.Get()
}

// GetIsReservedOk returns a tuple with the IsReserved field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailRoutingRuleUpdateRequest) GetIsReservedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsReserved.Get(), o.IsReserved.IsSet()
}

// HasIsReserved returns a boolean if a field has been set.
func (o *EmailRoutingRuleUpdateRequest) HasIsReserved() bool {
	if o != nil && o.IsReserved.IsSet() {
		return true
	}

	return false
}

// SetIsReserved gets a reference to the given NullableBool and assigns it to the IsReserved field.
func (o *EmailRoutingRuleUpdateRequest) SetIsReserved(v bool) {
	o.IsReserved.Set(&v)
}
// SetIsReservedNil sets the value for IsReserved to be an explicit nil
func (o *EmailRoutingRuleUpdateRequest) SetIsReservedNil() {
	o.IsReserved.Set(nil)
}

// UnsetIsReserved ensures that no value is present for IsReserved, not even an explicit nil
func (o *EmailRoutingRuleUpdateRequest) UnsetIsReserved() {
	o.IsReserved.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailRoutingRuleUpdateRequest) GetStatus() int32 {
	if o == nil || IsNil(o.Status.Get()) {
		var ret int32
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailRoutingRuleUpdateRequest) GetStatusOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *EmailRoutingRuleUpdateRequest) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableInt32 and assigns it to the Status field.
func (o *EmailRoutingRuleUpdateRequest) SetStatus(v int32) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *EmailRoutingRuleUpdateRequest) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *EmailRoutingRuleUpdateRequest) UnsetStatus() {
	o.Status.Unset()
}

func (o EmailRoutingRuleUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmailRoutingRuleUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.TransportId.IsSet() {
		toSerialize["transport_id"] = o.TransportId.Get()
	}
	if !IsNil(o.SenderId) {
		toSerialize["sender_id"] = o.SenderId
	}
	if o.IsReserved.IsSet() {
		toSerialize["is_reserved"] = o.IsReserved.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	return toSerialize, nil
}

type NullableEmailRoutingRuleUpdateRequest struct {
	value *EmailRoutingRuleUpdateRequest
	isSet bool
}

func (v NullableEmailRoutingRuleUpdateRequest) Get() *EmailRoutingRuleUpdateRequest {
	return v.value
}

func (v *NullableEmailRoutingRuleUpdateRequest) Set(val *EmailRoutingRuleUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailRoutingRuleUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailRoutingRuleUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailRoutingRuleUpdateRequest(val *EmailRoutingRuleUpdateRequest) *NullableEmailRoutingRuleUpdateRequest {
	return &NullableEmailRoutingRuleUpdateRequest{value: val, isSet: true}
}

func (v NullableEmailRoutingRuleUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailRoutingRuleUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


