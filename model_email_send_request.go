/*
airEml - API

airEml - API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package AirEml

import (
	"encoding/json"
)

// checks if the EmailSendRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmailSendRequest{}

// EmailSendRequest struct for EmailSendRequest
type EmailSendRequest struct {
	Template *EmailSendRequestTemplate `json:"template,omitempty"`
	To *EmailSendRequestTo `json:"to,omitempty"`
	From *EmailSendRequestFrom `json:"from,omitempty"`
	Attachments []EmailSendRequestAttachmentsInner `json:"attachments,omitempty"`
	// The custom parameters of the notification.
	CustomParams map[string]interface{} `json:"custom_params,omitempty"`
}

// NewEmailSendRequest instantiates a new EmailSendRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailSendRequest() *EmailSendRequest {
	this := EmailSendRequest{}
	return &this
}

// NewEmailSendRequestWithDefaults instantiates a new EmailSendRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailSendRequestWithDefaults() *EmailSendRequest {
	this := EmailSendRequest{}
	return &this
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *EmailSendRequest) GetTemplate() EmailSendRequestTemplate {
	if o == nil || IsNil(o.Template) {
		var ret EmailSendRequestTemplate
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailSendRequest) GetTemplateOk() (*EmailSendRequestTemplate, bool) {
	if o == nil || IsNil(o.Template) {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *EmailSendRequest) HasTemplate() bool {
	if o != nil && !IsNil(o.Template) {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given EmailSendRequestTemplate and assigns it to the Template field.
func (o *EmailSendRequest) SetTemplate(v EmailSendRequestTemplate) {
	o.Template = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *EmailSendRequest) GetTo() EmailSendRequestTo {
	if o == nil || IsNil(o.To) {
		var ret EmailSendRequestTo
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailSendRequest) GetToOk() (*EmailSendRequestTo, bool) {
	if o == nil || IsNil(o.To) {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *EmailSendRequest) HasTo() bool {
	if o != nil && !IsNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given EmailSendRequestTo and assigns it to the To field.
func (o *EmailSendRequest) SetTo(v EmailSendRequestTo) {
	o.To = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *EmailSendRequest) GetFrom() EmailSendRequestFrom {
	if o == nil || IsNil(o.From) {
		var ret EmailSendRequestFrom
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailSendRequest) GetFromOk() (*EmailSendRequestFrom, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *EmailSendRequest) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given EmailSendRequestFrom and assigns it to the From field.
func (o *EmailSendRequest) SetFrom(v EmailSendRequestFrom) {
	o.From = &v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *EmailSendRequest) GetAttachments() []EmailSendRequestAttachmentsInner {
	if o == nil || IsNil(o.Attachments) {
		var ret []EmailSendRequestAttachmentsInner
		return ret
	}
	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailSendRequest) GetAttachmentsOk() ([]EmailSendRequestAttachmentsInner, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *EmailSendRequest) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []EmailSendRequestAttachmentsInner and assigns it to the Attachments field.
func (o *EmailSendRequest) SetAttachments(v []EmailSendRequestAttachmentsInner) {
	o.Attachments = v
}

// GetCustomParams returns the CustomParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmailSendRequest) GetCustomParams() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomParams
}

// GetCustomParamsOk returns a tuple with the CustomParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmailSendRequest) GetCustomParamsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomParams) {
		return map[string]interface{}{}, false
	}
	return o.CustomParams, true
}

// HasCustomParams returns a boolean if a field has been set.
func (o *EmailSendRequest) HasCustomParams() bool {
	if o != nil && IsNil(o.CustomParams) {
		return true
	}

	return false
}

// SetCustomParams gets a reference to the given map[string]interface{} and assigns it to the CustomParams field.
func (o *EmailSendRequest) SetCustomParams(v map[string]interface{}) {
	o.CustomParams = v
}

func (o EmailSendRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmailSendRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Template) {
		toSerialize["template"] = o.Template
	}
	if !IsNil(o.To) {
		toSerialize["to"] = o.To
	}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	if o.CustomParams != nil {
		toSerialize["custom_params"] = o.CustomParams
	}
	return toSerialize, nil
}

type NullableEmailSendRequest struct {
	value *EmailSendRequest
	isSet bool
}

func (v NullableEmailSendRequest) Get() *EmailSendRequest {
	return v.value
}

func (v *NullableEmailSendRequest) Set(val *EmailSendRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailSendRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailSendRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailSendRequest(val *EmailSendRequest) *NullableEmailSendRequest {
	return &NullableEmailSendRequest{value: val, isSet: true}
}

func (v NullableEmailSendRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailSendRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


